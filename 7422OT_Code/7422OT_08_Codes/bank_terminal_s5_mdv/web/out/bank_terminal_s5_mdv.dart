// Auto-generated from bank_terminal_s5_mdv.html.
// DO NOT EDIT.

library bank_terminal;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'dart:html';
import 'dart:json';
import 'package:web_ui/web_ui.dart';
part '../model/bank_account.dart';
part '../model/person.dart';


// Original code


var in_amount;
double amount;
BankAccount bac;
List accounts;

void main() {
  Person jw = new Person("John Witgenstein", "Session street 675, 9000 Gent, Belgium",
      "johnw@aho.be", "M", DateTime.parse("1963-02-17 00:00:00.000"));
  bac = new BankAccount(jw, "456-0692322-12", 1500.0, 1234);
  accounts = toObservable(["052-0692562-12", "235-4523915-98", "456-0692322-12",
                   "789-2194366-45"]);
}

deposit(e) {
  if (!checkAmount()) return;
  // call deposit on BankAccount object:
  if (amount >= 0) bac.deposit(amount);
  else bac.withdraw(amount);
  in_amount = '0.0';
  disableRefresh(e);
}

interest(e) {
  bac.interest();
  disableRefresh(e);
}

disableRefresh(e) {
  e.preventDefault();
  e.stopPropagation();
}

checkAmount() {
  // check amount:
  try {
    amount = double.parse(in_amount);
  } on FormatException catch(e) {
    window.alert("This is not a valid amount!");
    return false;
  }
  return true;
}






// Additional generated code
void init_autogenerated() {
  var __root = autogenerated.document.body;
  final __html0 = new autogenerated.Element.html('<td template="" if="bac.hasAddress">\n                  <div></div>\n              </td>'), __html1 = new autogenerated.DivElement(), __html2 = new autogenerated.DivElement(), __html3 = new autogenerated.Element.html('<div template="" if="bac.hasAddress"></div>'), __html4 = new autogenerated.BRElement();
  var __e1, __e10, __e11, __e12, __e15, __e18, __e21, __e23, __e3, __e7, __e9;
  var __t = new autogenerated.Template(__root);
  __e1 = __root.nodes[3].nodes[1].nodes[1].nodes[0].nodes[3];
  var __binding0 = __t.contentBind(() =>  bac.number , false);
  __e1.nodes.addAll([new autogenerated.Text(' '),
      __binding0,
      new autogenerated.Text(' ')]);
  __e3 = __root.nodes[3].nodes[1].nodes[1].nodes[2].nodes[3];
  var __binding2 = __t.contentBind(() =>  bac.owner.name.toUpperCase() , false);
  __e3.nodes.addAll([new autogenerated.Text(' '),
      __binding2,
      new autogenerated.Text(' ')]);
  __e7 = __root.nodes[3].nodes[1].nodes[1].nodes[4].nodes[1];
  __t.conditional(__e7, () => bac.hasAddress, (__t) {
    var __e5, __e6;
    __e6 = __html0.clone(true);
    __e5 = __e6.nodes[1];
    var __binding4 = __t.contentBind(() =>  bac.owner.address , false);
    __e5.nodes.addAll([new autogenerated.Text(' Address: '),
        __binding4,
        new autogenerated.Text(' ')]);
  __t.add(__e6);
  });

  __e9 = __root.nodes[3].nodes[1].nodes[1].nodes[6].nodes[3];
  var __binding8 = __t.contentBind(() =>  bac.balance , false);
  __e9.nodes.addAll([new autogenerated.Text(' '),
      __binding8,
      new autogenerated.Text(' ')]);
  __e10 = __root.nodes[3].nodes[1].nodes[1].nodes[8].nodes[3].nodes[0];
  __t.listen(__e10.onInput, ($event) { in_amount = __e10.value; });
  __t.oneWayBind(() => in_amount, (e) { if (__e10.value != e) __e10.value = e; }, false, false);
  __e11 = __root.nodes[3].nodes[1].nodes[1].nodes[10].nodes[1].nodes[1];
  __t.listen(__e11.onClick, ($event) { deposit($event); });
  __e12 = __root.nodes[3].nodes[1].nodes[1].nodes[10].nodes[3].nodes[1];
  __t.listen(__e12.onClick, ($event) { interest($event); });
  __e15 = __root.nodes[3].nodes[3];
  __t.conditional(__e15, () => bac.hasAddress, (__t) {
    var __e14;
    __e14 = __html1.clone(true);
    var __binding13 = __t.contentBind(() =>  bac.owner.address , false);
    __e14.nodes.addAll([new autogenerated.Text(' Address: '),
        __binding13,
        new autogenerated.Text(' ')]);
  __t.addAll([new autogenerated.Text('\n          '),
      __e14,
      new autogenerated.Text('\n      ')]);
  });

  __e18 = __root.nodes[3].nodes[5];
  __t.conditional(__e18, () => bac.hasAddress, (__t) {
    var __e17;
    __e17 = __html2.clone(true);
    var __binding16 = __t.contentBind(() =>  bac.owner.address , false);
    __e17.nodes.addAll([new autogenerated.Text(' Address: '),
        __binding16,
        new autogenerated.Text(' ')]);
  __t.addAll([new autogenerated.Text('\n          '),
      __e17,
      new autogenerated.Text('\n      ')]);
  });

  __e21 = __root.nodes[3].nodes[7];
  __t.conditional(__e21, () => bac.hasAddress, (__t) {
    var __e20;
    __e20 = __html3.clone(true);
    var __binding19 = __t.contentBind(() =>  bac.owner.address , false);
    __e20.nodes.addAll([new autogenerated.Text('Address: '),
        __binding19]);
  __t.add(__e20);
  });

  __e23 = __root.nodes[3].nodes[11];
  __t.loop(__e23, () => accounts, ($list, $index, __t) {
    var acc = $list[$index];
    var __binding22 = __t.contentBind(() =>  acc , false);
  __t.addAll([new autogenerated.Text('\n        '),
      __binding22,
      new autogenerated.Text(' '),
      __html4.clone(true),
      new autogenerated.Text('\n      ')]);
  });
  __t.create();
  __t.insert();
}

//@ sourceMappingURL=bank_terminal_s5_mdv.dart.map