// Generated by dart2js, the Dart to JavaScript compiler version: 1.1.1.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
(function($) {
function dart() {}var A = new dart;
delete A.x;
var B = new dart;
delete B.x;
var C = new dart;
delete C.x;
var D = new dart;
delete D.x;
var E = new dart;
delete E.x;
var F = new dart;
delete F.x;
var G = new dart;
delete G.x;
var H = new dart;
delete H.x;
var J = new dart;
delete J.x;
var K = new dart;
delete K.x;
var L = new dart;
delete L.x;
var M = new dart;
delete M.x;
var N = new dart;
delete N.x;
var O = new dart;
delete O.x;
var P = new dart;
delete P.x;
var Q = new dart;
delete Q.x;
var R = new dart;
delete R.x;
var S = new dart;
delete S.x;
var T = new dart;
delete T.x;
var U = new dart;
delete U.x;
var V = new dart;
delete V.x;
var W = new dart;
delete W.x;
var X = new dart;
delete X.x;
var Y = new dart;
delete Y.x;
var Z = new dart;
delete Z.x;
function Isolate() {}
init();

$ = Isolate.$isolateProperties;
var $$ = {};

// Native classes
(function (reflectionData) {
  "use strict";
  function map(x){x={x:x};delete x.x;return x}
    function processStatics(descriptor) {
      for (var property in descriptor) {
        if (!hasOwnProperty.call(descriptor, property)) continue;
        if (property === "") continue;
        var element = descriptor[property];
        var firstChar = property.substring(0, 1);
        var previousProperty;
        if (firstChar === "+") {
          mangledGlobalNames[previousProperty] = property.substring(1);
          if (descriptor[property] == 1) descriptor[previousProperty].$reflectable = 1;
          if (element && element.length) init.typeInformation[previousProperty] = element;
        } else if (firstChar === "@") {
          property = property.substring(1);
          $[property]["@"] = element;
        } else if (firstChar === "*") {
          globalObject[previousProperty].$defaultValues = element;
          var optionalMethods = descriptor.$methodsWithOptionalArguments;
          if (!optionalMethods) {
            descriptor.$methodsWithOptionalArguments = optionalMethods = {}
          }
          optionalMethods[property] = previousProperty;
        } else if (typeof element === "function") {
          globalObject[previousProperty = property] = element;
          functions.push(property);
          init.globalFunctions[property] = element;
        } else if (element.constructor === Array) {
          addStubs(globalObject, element, property, true, descriptor, functions);
        } else {
          previousProperty = property;
          var newDesc = {};
          var previousProp;
          for (var prop in element) {
            if (!hasOwnProperty.call(element, prop)) continue;
            firstChar = prop.substring(0, 1);
            if (prop === "static") {
              processStatics(init.statics[property] = element[prop]);
            } else if (firstChar === "+") {
              mangledNames[previousProp] = prop.substring(1);
              if (element[prop] == 1) element[previousProp].$reflectable = 1;
            } else if (firstChar === "@" && prop !== "@") {
              newDesc[prop.substring(1)]["@"] = element[prop];
            } else if (firstChar === "*") {
              newDesc[previousProp].$defaultValues = element[prop];
              var optionalMethods = newDesc.$methodsWithOptionalArguments;
              if (!optionalMethods) {
                newDesc.$methodsWithOptionalArguments = optionalMethods={}
              }
              optionalMethods[prop] = previousProp;
            } else {
              var elem = element[prop];
              if (prop && elem != null && elem.constructor === Array && prop !== "<>") {
                addStubs(newDesc, elem, prop, false, element, []);
              } else {
                newDesc[previousProp = prop] = elem;
              }
            }
          }
          $$[property] = [globalObject, newDesc];
          classes.push(property);
        }
      }
    }
  function addStubs(descriptor, array, name, isStatic, originalDescriptor, functions) {
    var f, funcs = [originalDescriptor[name] = descriptor[name] = f = (function() {
  var result = array[0];
  if (result != null && typeof result != "function") {
    throw new Error(
        name + ": expected value of type 'function' at index " + (0) +
        " but got " + (typeof result));
  }
  return result;
})()];
    f.$stubName = name;
    functions.push(name);
    for (var index = 0; index < array.length; index += 2) {
      f = array[index + 1];
      if (typeof f != "function") break;
      f.$stubName = (function() {
  var result = array[index + 2];
  if (result != null && typeof result != "string") {
    throw new Error(
        name + ": expected value of type 'string' at index " + (index + 2) +
        " but got " + (typeof result));
  }
  return result;
})();
      funcs.push(f);
      if (f.$stubName) {
        originalDescriptor[f.$stubName] = descriptor[f.$stubName] = f;
        functions.push(f.$stubName);
      }
    }
    for (var i = 0; i < funcs.length; index++, i++) {
      funcs[i].$callName = (function() {
  var result = array[index + 1];
  if (result != null && typeof result != "string") {
    throw new Error(
        name + ": expected value of type 'string' at index " + (index + 1) +
        " but got " + (typeof result));
  }
  return result;
})();
    }
    var getterStubName = (function() {
  var result = array[++index];
  if (result != null && typeof result != "string") {
    throw new Error(
        name + ": expected value of type 'string' at index " + (++index) +
        " but got " + (typeof result));
  }
  return result;
})();
    array = array.slice(++index);
    var requiredParameterInfo = (function() {
  var result = array[0];
  if (result != null && (typeof result != "number" || (result|0) !== result)) {
    throw new Error(
        name + ": expected value of type 'int' at index " + (0) +
        " but got " + (typeof result));
  }
  return result;
})();
    var requiredParameterCount = requiredParameterInfo >> 1;
    var isAccessor = (requiredParameterInfo & 1) === 1;
    var isSetter = requiredParameterInfo === 3;
    var isGetter = requiredParameterInfo === 1;
    var optionalParameterInfo = (function() {
  var result = array[1];
  if (result != null && (typeof result != "number" || (result|0) !== result)) {
    throw new Error(
        name + ": expected value of type 'int' at index " + (1) +
        " but got " + (typeof result));
  }
  return result;
})();
    var optionalParameterCount = optionalParameterInfo >> 1;
    var optionalParametersAreNamed = (optionalParameterInfo & 1) === 1;
    var isIntercepted = requiredParameterCount + optionalParameterCount != funcs[0].length;
    var functionTypeIndex = (function() {
  var result = array[2];
  if (result != null && (typeof result != "number" || (result|0) !== result) && typeof result != "function") {
    throw new Error(
        name + ": expected value of type 'function or int' at index " + (2) +
        " but got " + (typeof result));
  }
  return result;
})();
    var isReflectable = array.length > requiredParameterCount + optionalParameterCount + 3;
    if (getterStubName) {
      f = tearOff(funcs, array, isStatic, name, isIntercepted);
      if (isStatic) init.globalFunctions[name] = f;
      originalDescriptor[getterStubName] = descriptor[getterStubName] = f;
      funcs.push(f);
      if (getterStubName) functions.push(getterStubName);
      f.$stubName = getterStubName;
      f.$callName = null;
    }
    if (isReflectable) {
      for (var i = 0; i < funcs.length; i++) {
        funcs[i].$reflectable = 1;
        funcs[i].$reflectionInfo = array;
      }
    }
    if (isReflectable) {
      var unmangledNameIndex = optionalParameterCount * 2 + requiredParameterCount + 3;
      var unmangledName = (function() {
  var result = array[unmangledNameIndex];
  if (result != null && typeof result != "string") {
    throw new Error(
        name + ": expected value of type 'string' at index " + (unmangledNameIndex) +
        " but got " + (typeof result));
  }
  return result;
})();
      var reflectionName = unmangledName + ":" + requiredParameterCount + ":" + optionalParameterCount;
      if (isGetter) {
        reflectionName = unmangledName;
      } else if (isSetter) {
        reflectionName = unmangledName + "=";
      }
      if (isStatic) {
        init.mangledGlobalNames[name] = reflectionName;
      } else {
        init.mangledNames[name] = reflectionName;
      }
      funcs[0].$reflectionName = reflectionName;
      funcs[0].$metadataIndex = unmangledNameIndex + 1;
      if (optionalParameterCount) descriptor[unmangledName + "*"] = funcs[0];
    }
  }
  function tearOffGetterNoCsp(funcs, reflectionInfo, name, isIntercepted) {
    return isIntercepted
        ? new Function("funcs", "reflectionInfo", "name", "H", "c",
            "return function tearOff_" + name + (functionCounter++)+ "(x) {" +
              "if (c === null) c = H.closureFromTearOff(" +
                  "this, funcs, reflectionInfo, false, [x], name);" +
              "return new c(this, funcs[0], x, name);" +
            "}")(funcs, reflectionInfo, name, H, null)
        : new Function("funcs", "reflectionInfo", "name", "H", "c",
            "return function tearOff_" + name + (functionCounter++)+ "() {" +
              "if (c === null) c = H.closureFromTearOff(" +
                  "this, funcs, reflectionInfo, false, [], name);" +
              "return new c(this, funcs[0], null, name);" +
            "}")(funcs, reflectionInfo, name, H, null)
  }
  function tearOffGetterCsp(funcs, reflectionInfo, name, isIntercepted) {
    var cache = null;
    return isIntercepted
        ? function(x) {
            if (cache === null) cache = H.closureFromTearOff(this, funcs, reflectionInfo, false, [x], name);
            return new cache(this, funcs[0], x, name)
          }
        : function() {
            if (cache === null) cache = H.closureFromTearOff(this, funcs, reflectionInfo, false, [], name);
            return new cache(this, funcs[0], null, name)
          }
  }
  function tearOff(funcs, reflectionInfo, isStatic, name, isIntercepted) {
    var cache;
    return isStatic
        ? function() {
            if (cache === void 0) cache = H.closureFromTearOff(this, funcs, reflectionInfo, true, [], name).prototype;
            return cache;
          }
        : tearOffGetter(funcs, reflectionInfo, name, isIntercepted);
  }
  var functionCounter = 0;
  var tearOffGetter = (typeof dart_precompiled == "function")
      ? tearOffGetterCsp : tearOffGetterNoCsp;
  if (!init.libraries) init.libraries = [];
  if (!init.mangledNames) init.mangledNames = map();
  if (!init.mangledGlobalNames) init.mangledGlobalNames = map();
  if (!init.statics) init.statics = map();
  if (!init.typeInformation) init.typeInformation = map();
  if (!init.globalFunctions) init.globalFunctions = map();
  var libraries = init.libraries;
  var mangledNames = init.mangledNames;
  var mangledGlobalNames = init.mangledGlobalNames;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var length = reflectionData.length;
  for (var i = 0; i < length; i++) {
    var data = reflectionData[i];
    var name = data[0];
    var uri = data[1];
    var metadata = data[2];
    var globalObject = data[3];
    var descriptor = data[4];
    var isRoot = !!data[5];
    var fields = descriptor && descriptor[""];
    var classes = [];
    var functions = [];
    processStatics(descriptor);
    libraries.push([name, uri, classes, functions, metadata, fields, isRoot,
                    globalObject]);
  }
})
([
["_foreign_helper", "dart:_foreign_helper", , H, {
  "": "",
  JS_CONST: {
    "": "Object;code"
  }
}],
["_interceptors", "dart:_interceptors", , J, {
  "": "",
  getInterceptor: function(object) {
    return void 0;
  },
  makeDispatchRecord: function(interceptor, proto, extension, indexability) {
    return {i: interceptor, p: proto, e: extension, x: indexability};
  },
  getNativeInterceptor: function(object) {
    var record, proto, objectProto, interceptor;
    record = object[init.dispatchPropertyName];
    if (record == null)
      if ($.initNativeDispatchFlag == null) {
        H.initNativeDispatch();
        record = object[init.dispatchPropertyName];
      }
    if (record != null) {
      proto = record.p;
      if (false === proto)
        return record.i;
      if (true === proto)
        return object;
      objectProto = Object.getPrototypeOf(object);
      if (proto === objectProto)
        return record.i;
      if (record.e === objectProto)
        throw H.wrapException(P.UnimplementedError$("Return interceptor for " + H.S(proto(object, record))));
    }
    interceptor = H.lookupAndCacheInterceptor(object);
    if (interceptor == null)
      return C.UnknownJavaScriptObject_methods;
    return interceptor;
  },
  Interceptor: {
    "": "Object;",
    $eq: function(receiver, other) {
      return receiver === other;
    },
    get$hashCode: function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    },
    toString$0: function(receiver) {
      return H.Primitives_objectToString(receiver);
    },
    "%": "ArrayBuffer|Blob|DOMError|File|FileError|MediaError|MediaKeyError|Navigator|NavigatorUserMediaError|PositionError|SQLError|SVGAnimatedLength|SVGAnimatedLengthList|SVGAnimatedNumber|SVGAnimatedNumberList|SVGAnimatedString|WebGLActiveInfo|WebGLBuffer|WebGLProgram|WebGLShader|WebGLTexture|WebGLUniformLocation"
  },
  JSBool: {
    "": "bool/Interceptor;",
    toString$0: function(receiver) {
      return String(receiver);
    },
    get$hashCode: function(receiver) {
      return receiver ? 519018 : 218159;
    },
    $isbool: true
  },
  JSNull: {
    "": "Interceptor;",
    $eq: function(receiver, other) {
      return null == other;
    },
    toString$0: function(receiver) {
      return "null";
    },
    get$hashCode: function(receiver) {
      return 0;
    }
  },
  JavaScriptObject: {
    "": "Interceptor;",
    get$hashCode: function(_) {
      return 0;
    }
  },
  PlainJavaScriptObject: {
    "": "JavaScriptObject;"
  },
  UnknownJavaScriptObject: {
    "": "JavaScriptObject;"
  },
  JSArray: {
    "": "List/Interceptor;",
    forEach$1: function(receiver, f) {
      return H.IterableMixinWorkaround_forEach(receiver, f);
    },
    elementAt$1: function(receiver, index) {
      if (index < 0 || index >= receiver.length)
        return H.ioore(receiver, index);
      return receiver[index];
    },
    toString$0: function(receiver) {
      return H.IterableMixinWorkaround_toStringIterable(receiver, "[", "]");
    },
    get$iterator: function(receiver) {
      return new H.ListIterator(receiver, receiver.length, 0, null);
    },
    get$hashCode: function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    set$length: function(receiver, newLength) {
      if (newLength < 0)
        throw H.wrapException(P.RangeError$value(newLength));
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("set length"));
      receiver.length = newLength;
    },
    $index: function(receiver, index) {
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(new P.ArgumentError(index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(P.RangeError$value(index));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("indexed set"));
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(new P.ArgumentError(index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(P.RangeError$value(index));
      receiver[index] = value;
    },
    $isList: true,
    $asList: null,
    $isJSIndexable: true,
    $isList: true,
    static: {JSArray_JSArray$fixed: function($length, $E) {
        var t1;
        if (typeof $length !== "number" || Math.floor($length) !== $length || $length < 0)
          throw H.wrapException(P.ArgumentError$("Length must be a non-negative integer: " + H.S($length)));
        t1 = H.setRuntimeTypeInfo(new Array($length), [$E]);
        t1.fixed$length = init;
        return t1;
      }}
  },
  JSNumber: {
    "": "num/Interceptor;",
    remainder$1: function(receiver, b) {
      return receiver % b;
    },
    toInt$0: function(receiver) {
      var t1;
      if (receiver >= -2147483648 && receiver <= 2147483647)
        return receiver | 0;
      if (isFinite(receiver)) {
        t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
        return t1 + 0;
      }
      throw H.wrapException(P.UnsupportedError$('' + receiver));
    },
    roundToDouble$0: function(receiver) {
      if (receiver < 0)
        return -Math.round(-receiver);
      else
        return Math.round(receiver);
    },
    toString$0: function(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    get$hashCode: function(receiver) {
      return receiver & 0x1FFFFFFF;
    },
    $add: function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(new P.ArgumentError(other));
      return receiver + other;
    },
    $sub: function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(new P.ArgumentError(other));
      return receiver - other;
    },
    $div: function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(new P.ArgumentError(other));
      return receiver / other;
    },
    $mod: function(receiver, other) {
      var result = receiver % other;
      if (result === 0)
        return 0;
      if (result > 0)
        return result;
      if (other < 0)
        return result - other;
      else
        return result + other;
    },
    _tdivFast$1: function(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this.toInt$0(receiver / other);
    },
    _shrOtherPositive$1: function(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = other > 31 ? 0 : receiver >>> other;
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    $lt: function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(new P.ArgumentError(other));
      return receiver < other;
    },
    $ge: function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(new P.ArgumentError(other));
      return receiver >= other;
    },
    $isnum: true,
    static: {"": "JSNumber__MIN_INT32,JSNumber__MAX_INT32"}
  },
  JSInt: {
    "": "int/JSNumber;",
    $isnum: true,
    $isint: true
  },
  JSDouble: {
    "": "double/JSNumber;",
    $isnum: true
  },
  JSString: {
    "": "String/Interceptor;",
    codeUnitAt$1: function(receiver, index) {
      if (index < 0)
        throw H.wrapException(P.RangeError$value(index));
      if (index >= receiver.length)
        throw H.wrapException(P.RangeError$value(index));
      return receiver.charCodeAt(index);
    },
    $add: function(receiver, other) {
      if (typeof other !== "string")
        throw H.wrapException(new P.ArgumentError(other));
      return receiver + other;
    },
    substring$2: function(receiver, startIndex, endIndex) {
      if (endIndex == null)
        endIndex = receiver.length;
      if (typeof endIndex !== "number" || Math.floor(endIndex) !== endIndex)
        H.throwExpression(new P.ArgumentError(endIndex));
      if (startIndex < 0)
        throw H.wrapException(P.RangeError$value(startIndex));
      if (typeof endIndex !== "number")
        return H.iae(endIndex);
      if (startIndex > endIndex)
        throw H.wrapException(P.RangeError$value(startIndex));
      if (endIndex > receiver.length)
        throw H.wrapException(P.RangeError$value(endIndex));
      return receiver.substring(startIndex, endIndex);
    },
    substring$1: function($receiver, startIndex) {
      return this.substring$2($receiver, startIndex, null);
    },
    get$isEmpty: function(receiver) {
      return receiver.length === 0;
    },
    toString$0: function(receiver) {
      return receiver;
    },
    get$hashCode: function(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = 536870911 & hash + receiver.charCodeAt(i);
        hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
        hash ^= hash >> 6;
      }
      hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
      hash ^= hash >> 11;
      return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(new P.ArgumentError(index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(P.RangeError$value(index));
      return receiver[index];
    },
    $isJSIndexable: true,
    $isString: true
  }
}],
["_isolate_helper", "dart:_isolate_helper", , H, {
  "": "",
  _callInIsolate: function(isolate, $function) {
    var result = isolate.eval$1($function);
    init.globalState.topEventLoop.run$0();
    return result;
  },
  startRootIsolate: function(entry) {
    var t1, t2, rootContext;
    t1 = new H._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null, entry);
    t1._Manager$1(entry);
    init.globalState = t1;
    if (init.globalState.isWorker === true)
      return;
    t1 = init.globalState;
    t2 = t1.nextIsolateId;
    t1.nextIsolateId = t2 + 1;
    rootContext = new H._IsolateContext(t2, P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, H.RawReceivePortImpl), P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSInt), new Isolate());
    init.globalState.rootContext = rootContext;
    init.globalState.currentContext = rootContext;
    t1 = H.getDynamicRuntimeType();
    t2 = H.buildFunctionType(t1, [t1])._isTest$1(entry);
    if (t2)
      rootContext.eval$1(new H.startRootIsolate_closure(entry));
    else {
      t1 = H.buildFunctionType(t1, [t1, t1])._isTest$1(entry);
      if (t1)
        rootContext.eval$1(new H.startRootIsolate_closure0(entry));
      else
        rootContext.eval$1(entry);
    }
    init.globalState.topEventLoop.run$0();
  },
  IsolateNatives_computeThisScript: function() {
    var currentScript = init.currentScript;
    if (currentScript != null)
      return String(currentScript.src);
    if (typeof version == "function" && typeof os == "object" && "system" in os)
      return H.IsolateNatives_computeThisScriptD8();
    if (typeof version == "function" && typeof system == "function")
      return thisFilename();
    return;
  },
  IsolateNatives_computeThisScriptD8: function() {
    var stack, matches;
    stack = new Error().stack;
    if (stack == null) {
      stack = (function() {try { throw new Error() } catch(e) { return e.stack }})();
      if (stack == null)
        throw H.wrapException(P.UnsupportedError$("No stack trace"));
    }
    matches = stack.match(new RegExp("^ *at [^(]*\\((.*):[0-9]*:[0-9]*\\)$", "m"));
    if (matches != null)
      return matches[1];
    matches = stack.match(new RegExp("^[^@]*@(.*):[0-9]*$", "m"));
    if (matches != null)
      return matches[1];
    throw H.wrapException(P.UnsupportedError$("Cannot extract URI from \"" + stack + "\""));
  },
  IsolateNatives__processWorkerMessage: function(sender, e) {
    var msg, t1, functionName, entryPoint, args, message, isSpawnUri, replyTo, t2, context, uri, t3, t4, t5, worker, t6, workerId;
    msg = H._deserializeMessage(e.data);
    t1 = J.getInterceptor$asx(msg);
    switch (t1.$index(msg, "command")) {
      case "start":
        init.globalState.currentManagerId = t1.$index(msg, "id");
        functionName = t1.$index(msg, "functionName");
        entryPoint = functionName == null ? init.globalState.entry : init.globalFunctions[functionName]();
        args = t1.$index(msg, "args");
        message = H._deserializeMessage(t1.$index(msg, "msg"));
        isSpawnUri = t1.$index(msg, "isSpawnUri");
        replyTo = H._deserializeMessage(t1.$index(msg, "replyTo"));
        t1 = init.globalState;
        t2 = t1.nextIsolateId;
        t1.nextIsolateId = t2 + 1;
        context = new H._IsolateContext(t2, P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, H.RawReceivePortImpl), P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSInt), new Isolate());
        init.globalState.topEventLoop.events._add$1(new H._IsolateEvent(context, new H.IsolateNatives__processWorkerMessage_closure(entryPoint, args, message, isSpawnUri, replyTo), "worker-start"));
        init.globalState.currentContext = context;
        init.globalState.topEventLoop.run$0();
        break;
      case "spawn-worker":
        t2 = t1.$index(msg, "functionName");
        uri = t1.$index(msg, "uri");
        t3 = t1.$index(msg, "args");
        t4 = t1.$index(msg, "msg");
        t5 = t1.$index(msg, "isSpawnUri");
        t1 = t1.$index(msg, "replyPort");
        if (uri == null)
          uri = $.get$IsolateNatives_thisScript();
        worker = new Worker(uri);
        worker.onmessage = function(e) { H.IsolateNatives__processWorkerMessage(worker, e); };
        t6 = init.globalState;
        workerId = t6.nextManagerId;
        t6.nextManagerId = workerId + 1;
        t6 = $.get$IsolateNatives_workerIds();
        t6.$indexSet(t6, worker, workerId);
        t6 = init.globalState.managers;
        t6.$indexSet(t6, workerId, worker);
        worker.postMessage(H._serializeMessage(H.fillLiteralMap(["command", "start", "id", workerId, "replyTo", H._serializeMessage(t1), "args", t3, "msg", H._serializeMessage(t4), "isSpawnUri", t5, "functionName", t2], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))));
        break;
      case "message":
        if (t1.$index(msg, "port") != null)
          t1.$index(msg, "port").send$1(t1.$index(msg, "msg"));
        init.globalState.topEventLoop.run$0();
        break;
      case "close":
        t1 = init.globalState.managers;
        t2 = $.get$IsolateNatives_workerIds();
        t1.remove$1(t1, t2.$index(t2, sender));
        sender.terminate();
        init.globalState.topEventLoop.run$0();
        break;
      case "log":
        H.IsolateNatives__log(t1.$index(msg, "msg"));
        break;
      case "print":
        if (init.globalState.isWorker === true) {
          t1 = init.globalState.mainManager;
          t2 = H._serializeMessage(H.fillLiteralMap(["command", "print", "msg", msg], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
          t1.toString;
          self.postMessage(t2);
        } else
          P.print(t1.$index(msg, "msg"));
        break;
      case "error":
        throw H.wrapException(t1.$index(msg, "msg"));
      default:
    }
  },
  IsolateNatives__log: function(msg) {
    var trace, t1, t2, exception;
    if (init.globalState.isWorker === true) {
      t1 = init.globalState.mainManager;
      t2 = H._serializeMessage(H.fillLiteralMap(["command", "log", "msg", msg], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
      t1.toString;
      self.postMessage(t2);
    } else
      try {
        $.get$globalThis().console.log(msg);
      } catch (exception) {
        H.unwrapException(exception);
        trace = new H._StackTrace(exception, null);
        throw H.wrapException(P.Exception_Exception(trace));
      }

  },
  _serializeMessage: function(message) {
    var t1;
    if (init.globalState.supportsWorkers === true) {
      t1 = new H._JsSerializer(0, new H._MessageTraverserVisitedMap());
      t1._visited = new H._JsVisitedMap(null);
      return t1.traverse$1(message);
    } else {
      t1 = new H._JsCopier(new H._MessageTraverserVisitedMap());
      t1._visited = new H._JsVisitedMap(null);
      return t1.traverse$1(message);
    }
  },
  _deserializeMessage: function(message) {
    if (init.globalState.supportsWorkers === true)
      return new H._JsDeserializer(null).deserialize$1(message);
    else
      return message;
  },
  _MessageTraverser_isPrimitive: function(x) {
    return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
  },
  _Deserializer_isPrimitive: function(x) {
    return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
  },
  startRootIsolate_closure: {
    "": "Closure:9;entry_0",
    call$0: function() {
      this.entry_0.call$1([]);
    }
  },
  startRootIsolate_closure0: {
    "": "Closure:9;entry_1",
    call$0: function() {
      this.entry_1.call$2([], null);
    }
  },
  _Manager: {
    "": "Object;nextIsolateId,currentManagerId,nextManagerId,currentContext,rootContext,topEventLoop,fromCommandLine,isWorker,supportsWorkers,isolates,mainManager,managers,entry",
    _Manager$1: function(entry) {
      var t1, t2, t3, $function;
      t1 = $.get$globalWindow() == null;
      t2 = $.get$globalWorker();
      t3 = t1 && $.get$globalPostMessageDefined() === true;
      this.isWorker = t3;
      if (!t3)
        t2 = t2 != null && $.get$IsolateNatives_thisScript() != null;
      else
        t2 = true;
      this.supportsWorkers = t2;
      this.fromCommandLine = t1 && !t3;
      t2 = H._IsolateEvent;
      t3 = H.setRuntimeTypeInfo(new P.ListQueue(null, 0, 0, 0), [t2]);
      t3.ListQueue$1(null, t2);
      this.topEventLoop = new H._EventLoop(t3, 0);
      this.isolates = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, H._IsolateContext);
      this.managers = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, null);
      if (this.isWorker === true) {
        t1 = new H._MainManagerStub();
        this.mainManager = t1;
        $function = function (e) { H.IsolateNatives__processWorkerMessage(t1, e); };
        $.get$globalThis().onmessage = $function;
        $.get$globalThis().dartPrint = function (object) {};
      }
    }
  },
  _IsolateContext: {
    "": "Object;id,ports,weakPorts,isolateStatics<",
    eval$1: function(code) {
      var old, result;
      old = init.globalState.currentContext;
      init.globalState.currentContext = this;
      $ = this.isolateStatics;
      result = null;
      try {
        result = code.call$0();
      } finally {
        init.globalState.currentContext = old;
        if (old != null)
          $ = old.get$isolateStatics();
      }
      return result;
    },
    lookup$1: function(portId) {
      var t1 = this.ports;
      return t1.$index(t1, portId);
    },
    register$2: function(_, portId, port) {
      var t1 = this.ports;
      if (t1.containsKey$1(portId))
        throw H.wrapException(P.Exception_Exception("Registry: ports must be registered only once."));
      t1.$indexSet(t1, portId, port);
      this._updateGlobalState$0();
    },
    _updateGlobalState$0: function() {
      var t1, t2;
      t1 = this.id;
      if (this.ports._length - this.weakPorts._length > 0) {
        t2 = init.globalState.isolates;
        t2.$indexSet(t2, t1, this);
      } else {
        t2 = init.globalState.isolates;
        t2.remove$1(t2, t1);
      }
    }
  },
  _EventLoop: {
    "": "Object;events,activeTimerCount",
    dequeue$0: function() {
      var t1 = this.events;
      if (t1._head === t1._tail)
        return;
      return t1.removeFirst$0();
    },
    runIteration$0: function() {
      var $event, t1, t2;
      $event = this.dequeue$0();
      if ($event == null) {
        if (init.globalState.rootContext != null && init.globalState.isolates.containsKey$1(init.globalState.rootContext.id) && init.globalState.fromCommandLine === true && init.globalState.rootContext.ports._length === 0)
          H.throwExpression(P.Exception_Exception("Program exited with open ReceivePorts."));
        t1 = init.globalState;
        if (t1.isWorker === true && t1.isolates._length === 0 && t1.topEventLoop.activeTimerCount === 0) {
          t1 = t1.mainManager;
          t2 = H._serializeMessage(H.fillLiteralMap(["command", "close"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
          t1.toString;
          self.postMessage(t2);
        }
        return false;
      }
      $event.process$0();
      return true;
    },
    _runHelper$0: function() {
      if ($.get$globalWindow() != null)
        new H._EventLoop__runHelper_next(this).call$0();
      else
        for (; this.runIteration$0();)
          ;
    },
    run$0: function() {
      var e, trace, exception, t1, t2;
      if (init.globalState.isWorker !== true)
        this._runHelper$0();
      else
        try {
          this._runHelper$0();
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          trace = new H._StackTrace(exception, null);
          t1 = init.globalState.mainManager;
          t2 = H._serializeMessage(H.fillLiteralMap(["command", "error", "msg", H.S(e) + "\n" + H.S(trace)], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
          t1.toString;
          self.postMessage(t2);
        }

    }
  },
  _EventLoop__runHelper_next: {
    "": "Closure:0;this_0",
    call$0: function() {
      if (!this.this_0.runIteration$0())
        return;
      P.Timer_Timer(C.Duration_0, this);
    }
  },
  _IsolateEvent: {
    "": "Object;isolate,fn,message",
    process$0: function() {
      this.isolate.eval$1(this.fn);
    }
  },
  _MainManagerStub: {
    "": "Object;"
  },
  IsolateNatives__processWorkerMessage_closure: {
    "": "Closure:9;entryPoint_0,args_1,message_2,isSpawnUri_3,replyTo_4",
    call$0: function() {
      var t1, t2, t3, t4, t5, t6, t7;
      t1 = this.entryPoint_0;
      t2 = this.args_1;
      t3 = this.message_2;
      t4 = init.globalState.currentContext.id;
      $.Primitives_mirrorFunctionCacheName = $.Primitives_mirrorFunctionCacheName + ("_" + t4);
      $.Primitives_mirrorInvokeCacheName = $.Primitives_mirrorInvokeCacheName + ("_" + t4);
      t4 = $.RawReceivePortImpl__nextFreeId;
      $.RawReceivePortImpl__nextFreeId = t4 + 1;
      t5 = new H.RawReceivePortImpl(t4, null, false);
      t6 = init.globalState.currentContext;
      t7 = t6.weakPorts;
      t7.add$1(t7, t4);
      t6.register$2(t6, t4, t5);
      t4 = new H.ReceivePortImpl(t5, null);
      t4.ReceivePortImpl$fromRawReceivePort$1(t5);
      $.controlPort = t4;
      this.replyTo_4.send$1(["spawned", new H._NativeJsSendPort(t5, init.globalState.currentContext.id)]);
      if (this.isSpawnUri_3 !== true)
        t1.call$1(t3);
      else {
        t4 = H.getDynamicRuntimeType();
        t5 = H.buildFunctionType(t4, [t4, t4])._isTest$1(t1);
        if (t5)
          t1.call$2(t2, t3);
        else {
          t3 = H.buildFunctionType(t4, [t4])._isTest$1(t1);
          if (t3)
            t1.call$1(t2);
          else
            t1.call$0();
        }
      }
    }
  },
  _BaseSendPort: {
    "": "Object;",
    $isSendPort: true
  },
  _NativeJsSendPort: {
    "": "_BaseSendPort;_receivePort,_isolateId",
    send$1: function(message) {
      var t1, t2, t3, isolate, shouldSerialize;
      t1 = {};
      t2 = init.globalState.isolates;
      t3 = this._isolateId;
      isolate = t2.$index(t2, t3);
      if (isolate == null)
        return;
      if (this._receivePort.get$_isClosed())
        return;
      shouldSerialize = init.globalState.currentContext != null && init.globalState.currentContext.id !== t3;
      t1.msg_0 = message;
      if (shouldSerialize)
        t1.msg_0 = H._serializeMessage(message);
      t2 = init.globalState.topEventLoop;
      t3 = "receive " + H.S(message);
      t2.events._add$1(new H._IsolateEvent(isolate, new H._NativeJsSendPort_send_closure(t1, this, shouldSerialize), t3));
    },
    $eq: function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      return typeof other === "object" && other !== null && !!t1.$is_NativeJsSendPort && J.$eq(this._receivePort, other._receivePort);
    },
    get$hashCode: function(_) {
      return this._receivePort.get$_id();
    },
    $is_NativeJsSendPort: true,
    $isSendPort: true
  },
  _NativeJsSendPort_send_closure: {
    "": "Closure:9;box_0,this_1,shouldSerialize_2",
    call$0: function() {
      var t1, t2;
      t1 = this.this_1._receivePort;
      if (!t1.get$_isClosed()) {
        if (this.shouldSerialize_2) {
          t2 = this.box_0;
          t2.msg_0 = H._deserializeMessage(t2.msg_0);
        }
        t1.__isolate_helper$_add$1(this.box_0.msg_0);
      }
    }
  },
  _WorkerSendPort: {
    "": "_BaseSendPort;_workerId,_receivePortId,_isolateId",
    send$1: function(message) {
      var workerMessage, t1, manager;
      workerMessage = H._serializeMessage(H.fillLiteralMap(["command", "message", "port", this, "msg", message], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
      if (init.globalState.isWorker === true) {
        init.globalState.mainManager.toString;
        self.postMessage(workerMessage);
      } else {
        t1 = init.globalState.managers;
        manager = t1.$index(t1, this._workerId);
        if (manager != null)
          manager.postMessage(workerMessage);
      }
    },
    $eq: function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      return typeof other === "object" && other !== null && !!t1.$is_WorkerSendPort && J.$eq(this._workerId, other._workerId) && J.$eq(this._isolateId, other._isolateId) && J.$eq(this._receivePortId, other._receivePortId);
    },
    get$hashCode: function(_) {
      var t1, t2, t3;
      t1 = this._workerId;
      if (typeof t1 !== "number")
        return t1.$shl();
      t2 = this._isolateId;
      if (typeof t2 !== "number")
        return t2.$shl();
      t3 = this._receivePortId;
      if (typeof t3 !== "number")
        return H.iae(t3);
      return (t1 << 16 ^ t2 << 8 ^ t3) >>> 0;
    },
    $is_WorkerSendPort: true,
    $isSendPort: true
  },
  RawReceivePortImpl: {
    "": "Object;_id<,_handler,_isClosed<",
    _handler$1: function(arg0) {
      return this._handler.call$1(arg0);
    },
    close$0: function(_) {
      var t1, t2;
      if (this._isClosed)
        return;
      this._isClosed = true;
      this._handler = null;
      t1 = init.globalState.currentContext;
      t2 = t1.ports;
      t2.remove$1(t2, this._id);
      t1._updateGlobalState$0();
    },
    __isolate_helper$_add$1: function(dataEvent) {
      if (this._isClosed)
        return;
      this._handler$1(dataEvent);
    },
    static: {"": "RawReceivePortImpl__nextFreeId"}
  },
  ReceivePortImpl: {
    "": "Stream;_rawPort,_controller",
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      var t1 = this._controller;
      t1.toString;
      return H.setRuntimeTypeInfo(new P._ControllerStream(t1), [null]).listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
    },
    close$0: [function(_) {
      var t1 = this._rawPort;
      t1.close$0(t1);
      t1 = this._controller;
      t1.close$0(t1);
    }, "call$0", "get$close", 0, 0, 0],
    ReceivePortImpl$fromRawReceivePort$1: function(_rawPort) {
      var t1 = P.StreamController_StreamController(this.get$close(this), null, null, null, true, null);
      this._controller = t1;
      this._rawPort._handler = t1.get$add(t1);
    }
  },
  _JsSerializer: {
    "": "_Serializer;_nextFreeRefId,_visited",
    visitSendPort$1: function(x) {
      if (!!x.$is_NativeJsSendPort)
        return ["sendport", init.globalState.currentManagerId, x._isolateId, x._receivePort.get$_id()];
      if (!!x.$is_WorkerSendPort)
        return ["sendport", x._workerId, x._isolateId, x._receivePortId];
      throw H.wrapException("Illegal underlying port " + H.S(x));
    }
  },
  _JsCopier: {
    "": "_Copier;_visited",
    visitSendPort$1: function(x) {
      if (!!x.$is_NativeJsSendPort)
        return new H._NativeJsSendPort(x._receivePort, x._isolateId);
      if (!!x.$is_WorkerSendPort)
        return new H._WorkerSendPort(x._workerId, x._receivePortId, x._isolateId);
      throw H.wrapException("Illegal underlying port " + H.S(x));
    }
  },
  _JsDeserializer: {
    "": "_Deserializer;_deserialized",
    deserializeSendPort$1: function(list) {
      var t1, managerId, isolateId, receivePortId, isolate, receivePort;
      t1 = J.getInterceptor$asx(list);
      managerId = t1.$index(list, 1);
      isolateId = t1.$index(list, 2);
      receivePortId = t1.$index(list, 3);
      if (J.$eq(managerId, init.globalState.currentManagerId)) {
        t1 = init.globalState.isolates;
        isolate = t1.$index(t1, isolateId);
        if (isolate == null)
          return;
        receivePort = isolate.lookup$1(receivePortId);
        if (receivePort == null)
          return;
        return new H._NativeJsSendPort(receivePort, isolateId);
      } else
        return new H._WorkerSendPort(managerId, receivePortId, isolateId);
    }
  },
  _JsVisitedMap: {
    "": "Object;tagged",
    $index: function(_, object) {
      return object.__MessageTraverser__attached_info__;
    },
    $indexSet: function(_, object, info) {
      this.tagged.push(object);
      object.__MessageTraverser__attached_info__ = info;
    },
    reset$0: function(_) {
      this.tagged = [];
    },
    cleanup$0: function() {
      var $length, i, t1;
      for ($length = this.tagged.length, i = 0; i < $length; ++i) {
        t1 = this.tagged;
        if (i >= t1.length)
          return H.ioore(t1, i);
        t1[i].__MessageTraverser__attached_info__ = null;
      }
      this.tagged = null;
    }
  },
  _MessageTraverserVisitedMap: {
    "": "Object;",
    $index: function(_, object) {
      return;
    },
    $indexSet: function(_, object, info) {
    },
    reset$0: function(_) {
    },
    cleanup$0: function() {
      return;
    }
  },
  _MessageTraverser: {
    "": "Object;",
    traverse$1: function(x) {
      var result, t1;
      if (H._MessageTraverser_isPrimitive(x))
        return this.visitPrimitive$1(x);
      t1 = this._visited;
      t1.reset$0(t1);
      result = null;
      try {
        result = this._dispatch$1(x);
      } finally {
        this._visited.cleanup$0();
      }
      return result;
    },
    _dispatch$1: function(x) {
      var t1;
      if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
        return this.visitPrimitive$1(x);
      t1 = J.getInterceptor(x);
      if (typeof x === "object" && x !== null && (x.constructor === Array || !!t1.$isList))
        return this.visitList$1(x);
      if (typeof x === "object" && x !== null && !!t1.$isMap)
        return this.visitMap$1(x);
      if (typeof x === "object" && x !== null && !!t1.$isSendPort)
        return this.visitSendPort$1(x);
      return this.visitObject$1(x);
    },
    visitObject$1: function(x) {
      throw H.wrapException("Message serialization: Illegal value " + H.S(x) + " passed");
    }
  },
  _Copier: {
    "": "_MessageTraverser;",
    visitPrimitive$1: function(x) {
      return x;
    },
    visitList$1: function(list) {
      var t1, copy, len, i;
      t1 = this._visited;
      copy = t1.$index(t1, list);
      if (copy != null)
        return copy;
      len = J.get$length$asx(list);
      copy = Array(len);
      copy.fixed$length = init;
      t1 = this._visited;
      t1.$indexSet(t1, list, copy);
      for (i = 0; i < len; ++i) {
        if (i >= list.length)
          return H.ioore(list, i);
        copy[i] = this._dispatch$1(list[i]);
      }
      return copy;
    },
    visitMap$1: function(map) {
      var t1, t2, copy;
      t1 = {};
      t2 = this._visited;
      copy = t2.$index(t2, map);
      t1.copy_0 = copy;
      if (copy != null)
        return copy;
      copy = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      t1.copy_0 = copy;
      t2 = this._visited;
      t2.$indexSet(t2, map, copy);
      map.forEach$1(map, new H._Copier_visitMap_closure(t1, this));
      return t1.copy_0;
    },
    visitSendPort$1: function(x) {
      return H.throwExpression(P.UnimplementedError$(null));
    }
  },
  _Copier_visitMap_closure: {
    "": "Closure:10;box_0,this_1",
    call$2: function(key, val) {
      var t1 = this.this_1;
      J.$indexSet$ax(this.box_0.copy_0, t1._dispatch$1(key), t1._dispatch$1(val));
    }
  },
  _Serializer: {
    "": "_MessageTraverser;",
    visitPrimitive$1: function(x) {
      return x;
    },
    visitList$1: function(list) {
      var t1, copyId, id;
      t1 = this._visited;
      copyId = t1.$index(t1, list);
      if (copyId != null)
        return ["ref", copyId];
      id = this._nextFreeRefId;
      this._nextFreeRefId = id + 1;
      t1 = this._visited;
      t1.$indexSet(t1, list, id);
      return ["list", id, this._serializeList$1(list)];
    },
    visitMap$1: function(map) {
      var t1, copyId, id, keys;
      t1 = this._visited;
      copyId = t1.$index(t1, map);
      if (copyId != null)
        return ["ref", copyId];
      id = this._nextFreeRefId;
      this._nextFreeRefId = id + 1;
      t1 = this._visited;
      t1.$indexSet(t1, map, id);
      t1 = map.get$keys();
      keys = this._serializeList$1(P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "IterableBase", 0)));
      t1 = map.get$values(map);
      return ["map", id, keys, this._serializeList$1(P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "IterableBase", 0)))];
    },
    _serializeList$1: function(list) {
      var len, result, i, t1;
      len = J.get$length$asx(list);
      result = [];
      C.JSArray_methods.set$length(result, len);
      for (i = 0; i < len; ++i) {
        if (i >= list.length)
          return H.ioore(list, i);
        t1 = this._dispatch$1(list[i]);
        if (i >= result.length)
          return H.ioore(result, i);
        result[i] = t1;
      }
      return result;
    },
    visitSendPort$1: function(x) {
      return H.throwExpression(P.UnimplementedError$(null));
    }
  },
  _Deserializer: {
    "": "Object;",
    deserialize$1: function(x) {
      if (H._Deserializer_isPrimitive(x))
        return x;
      this._deserialized = P.HashMap_HashMap(null, null, null, null, null);
      return this._deserializeHelper$1(x);
    },
    _deserializeHelper$1: function(x) {
      var t1, id;
      if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
        return x;
      t1 = J.getInterceptor$asx(x);
      switch (t1.$index(x, 0)) {
        case "ref":
          id = t1.$index(x, 1);
          t1 = this._deserialized;
          return t1.$index(t1, id);
        case "list":
          return this._deserializeList$1(x);
        case "map":
          return this._deserializeMap$1(x);
        case "sendport":
          return this.deserializeSendPort$1(x);
        default:
          return this.deserializeObject$1(x);
      }
    },
    _deserializeList$1: function(x) {
      var t1, id, dartList, len, i;
      t1 = J.getInterceptor$asx(x);
      id = t1.$index(x, 1);
      dartList = t1.$index(x, 2);
      t1 = this._deserialized;
      t1.$indexSet(t1, id, dartList);
      t1 = J.getInterceptor$asx(dartList);
      len = t1.get$length(dartList);
      if (typeof len !== "number")
        return H.iae(len);
      i = 0;
      for (; i < len; ++i)
        t1.$indexSet(dartList, i, this._deserializeHelper$1(t1.$index(dartList, i)));
      return dartList;
    },
    _deserializeMap$1: function(x) {
      var result, t1, id, t2, keys, values, len, i;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      t1 = J.getInterceptor$asx(x);
      id = t1.$index(x, 1);
      t2 = this._deserialized;
      t2.$indexSet(t2, id, result);
      keys = t1.$index(x, 2);
      values = t1.$index(x, 3);
      t1 = J.getInterceptor$asx(keys);
      len = t1.get$length(keys);
      if (typeof len !== "number")
        return H.iae(len);
      t2 = J.getInterceptor$asx(values);
      i = 0;
      for (; i < len; ++i)
        result.$indexSet(result, this._deserializeHelper$1(t1.$index(keys, i)), this._deserializeHelper$1(t2.$index(values, i)));
      return result;
    },
    deserializeObject$1: function(x) {
      throw H.wrapException("Unexpected serialized object");
    }
  },
  TimerImpl: {
    "": "Object;_once,_inEventLoop,_handle",
    TimerImpl$2: function(milliseconds, callback) {
      var t1, t2;
      if (milliseconds === 0)
        t1 = $.get$globalThis().setTimeout == null || init.globalState.isWorker === true;
      else
        t1 = false;
      if (t1) {
        this._handle = 1;
        t1 = init.globalState.topEventLoop;
        t2 = init.globalState.currentContext;
        t1.events._add$1(new H._IsolateEvent(t2, new H.TimerImpl_internalCallback(this, callback), "timer"));
        this._inEventLoop = true;
      } else {
        t1 = $.get$globalThis();
        if (t1.setTimeout != null) {
          t2 = init.globalState.topEventLoop;
          t2.activeTimerCount = t2.activeTimerCount + 1;
          this._handle = t1.setTimeout(H.convertDartClosureToJS(new H.TimerImpl_internalCallback0(this, callback), 0), milliseconds);
        } else
          throw H.wrapException(P.UnsupportedError$("Timer greater than 0."));
      }
    },
    static: {TimerImpl$: function(milliseconds, callback) {
        var t1 = new H.TimerImpl(true, false, null);
        t1.TimerImpl$2(milliseconds, callback);
        return t1;
      }}
  },
  TimerImpl_internalCallback: {
    "": "Closure:0;this_0,callback_1",
    call$0: function() {
      this.this_0._handle = null;
      this.callback_1.call$0();
    }
  },
  TimerImpl_internalCallback0: {
    "": "Closure:0;this_2,callback_3",
    call$0: function() {
      this.this_2._handle = null;
      var t1 = init.globalState.topEventLoop;
      t1.activeTimerCount = t1.activeTimerCount - 1;
      this.callback_3.call$0();
    }
  }
}],
["_js_helper", "dart:_js_helper", , H, {
  "": "",
  isJsIndexable: function(object, record) {
    var result, t1;
    if (record != null) {
      result = record.x;
      if (result != null)
        return result;
    }
    t1 = J.getInterceptor(object);
    return typeof object === "object" && object !== null && !!t1.$isJavaScriptIndexingBehavior;
  },
  S: function(value) {
    var res;
    if (typeof value === "string")
      return value;
    if (typeof value === "number") {
      if (value !== 0)
        return "" + value;
    } else if (true === value)
      return "true";
    else if (false === value)
      return "false";
    else if (value == null)
      return "null";
    res = J.toString$0(value);
    if (typeof res !== "string")
      throw H.wrapException(P.ArgumentError$(value));
    return res;
  },
  Primitives_objectHashCode: function(object) {
    var hash = object.$identityHash;
    if (hash == null) {
      hash = Math.random() * 0x3fffffff | 0;
      object.$identityHash = hash;
    }
    return hash;
  },
  Primitives_objectTypeName: function(object) {
    var $name, decompiled;
    $name = C.JS_CONST_IX5(J.getInterceptor(object));
    if ($name === "Object") {
      decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
      if (typeof decompiled === "string")
        $name = decompiled;
    }
    if (J.getInterceptor$s($name).codeUnitAt$1($name, 0) === 36)
      $name = C.JSString_methods.substring$1($name, 1);
    return $name + H.joinArguments(H.getRuntimeTypeInfo(object), 0, null);
  },
  Primitives_objectToString: function(object) {
    return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
  },
  Primitives__fromCharCodeApply: function(array) {
    var end, t1, result, i, subarray, t2;
    end = array.length;
    for (t1 = end <= 500, result = "", i = 0; i < end; i += 500) {
      if (t1)
        subarray = array;
      else {
        t2 = i + 500;
        t2 = t2 < end ? t2 : end;
        subarray = array.slice(i, t2);
      }
      result += String.fromCharCode.apply(null, subarray);
    }
    return result;
  },
  Primitives_stringFromCodePoints: function(codePoints) {
    var a, t1, i;
    a = [];
    a.$builtinTypeInfo = [J.JSInt];
    for (t1 = new H.ListIterator(codePoints, codePoints.length, 0, null); t1.moveNext$0();) {
      i = t1._current;
      if (typeof i !== "number" || Math.floor(i) !== i)
        throw H.wrapException(P.ArgumentError$(i));
      if (i <= 65535)
        a.push(i);
      else if (i <= 1114111) {
        a.push(55296 + (C.JSInt_methods._shrOtherPositive$1(i - 65536, 10) & 1023));
        a.push(56320 + (i & 1023));
      } else
        throw H.wrapException(P.ArgumentError$(i));
    }
    return H.Primitives__fromCharCodeApply(a);
  },
  Primitives_stringFromCharCodes: function(charCodes) {
    var t1, i;
    for (t1 = new H.ListIterator(charCodes, charCodes.length, 0, null); t1.moveNext$0();) {
      i = t1._current;
      if (typeof i !== "number" || Math.floor(i) !== i)
        throw H.wrapException(P.ArgumentError$(i));
      if (i < 0)
        throw H.wrapException(P.ArgumentError$(i));
      if (i > 65535)
        return H.Primitives_stringFromCodePoints(charCodes);
    }
    return H.Primitives__fromCharCodeApply(charCodes);
  },
  Primitives_lazyAsJsDate: function(receiver) {
    if (receiver.date === void 0)
      receiver.date = new Date(receiver.millisecondsSinceEpoch);
    return receiver.date;
  },
  Primitives_getProperty: function(object, key) {
    if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
      throw H.wrapException(new P.ArgumentError(object));
    return object[key];
  },
  Primitives_setProperty: function(object, key, value) {
    if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
      throw H.wrapException(new P.ArgumentError(object));
    object[key] = value;
  },
  iae: function(argument) {
    throw H.wrapException(P.ArgumentError$(argument));
  },
  ioore: function(receiver, index) {
    if (receiver == null)
      J.get$length$asx(receiver);
    if (typeof index !== "number" || Math.floor(index) !== index)
      H.iae(index);
    throw H.wrapException(P.RangeError$value(index));
  },
  wrapException: function(ex) {
    var wrapper;
    if (ex == null)
      ex = new P.NullThrownError();
    wrapper = new Error();
    wrapper.dartException = ex;
    if ("defineProperty" in Object) {
      Object.defineProperty(wrapper, "message", { get: H.toStringWrapper });
      wrapper.name = "";
    } else
      wrapper.toString = H.toStringWrapper;
    return wrapper;
  },
  toStringWrapper: function() {
    return J.toString$0(this.dartException);
  },
  throwExpression: function(ex) {
    var wrapper;
    if (ex == null)
      ex = new P.NullThrownError();
    wrapper = new Error();
    wrapper.dartException = ex;
    if ("defineProperty" in Object) {
      Object.defineProperty(wrapper, "message", { get: H.toStringWrapper });
      wrapper.name = "";
    } else
      wrapper.toString = H.toStringWrapper;
    throw wrapper;
  },
  unwrapException: function(ex) {
    var t1, message, number, ieErrorCode, t2, t3, t4, nullLiteralCall, t5, t6, t7, t8, t9, match;
    t1 = new H.unwrapException_saveStackTrace(ex);
    if (ex == null)
      return;
    if (typeof ex !== "object")
      return ex;
    if ("dartException" in ex)
      return t1.call$1(ex.dartException);
    else if (!("message" in ex))
      return ex;
    message = ex.message;
    if ("number" in ex && typeof ex.number == "number") {
      number = ex.number;
      ieErrorCode = number & 65535;
      if ((C.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
        switch (ieErrorCode) {
          case 438:
            return t1.call$1(H.JsNoSuchMethodError$(H.S(message) + " (Error " + ieErrorCode + ")", null));
          case 445:
          case 5007:
            t2 = H.S(message) + " (Error " + ieErrorCode + ")";
            return t1.call$1(new H.NullError(t2, null));
          default:
        }
    }
    if (ex instanceof TypeError) {
      t2 = $.get$TypeErrorDecoder_noSuchMethodPattern();
      t3 = $.get$TypeErrorDecoder_notClosurePattern();
      t4 = $.get$TypeErrorDecoder_nullCallPattern();
      nullLiteralCall = $.get$TypeErrorDecoder_nullLiteralCallPattern();
      t5 = $.get$TypeErrorDecoder_undefinedCallPattern();
      t6 = $.get$TypeErrorDecoder_undefinedLiteralCallPattern();
      t7 = $.get$TypeErrorDecoder_nullPropertyPattern();
      $.get$TypeErrorDecoder_nullLiteralPropertyPattern();
      t8 = $.get$TypeErrorDecoder_undefinedPropertyPattern();
      t9 = $.get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
      match = t2.matchTypeError$1(message);
      if (match != null)
        return t1.call$1(H.JsNoSuchMethodError$(message, match));
      else {
        match = t3.matchTypeError$1(message);
        if (match != null) {
          match.method = "call";
          return t1.call$1(H.JsNoSuchMethodError$(message, match));
        } else {
          match = t4.matchTypeError$1(message);
          if (match == null) {
            match = nullLiteralCall.matchTypeError$1(message);
            if (match == null) {
              match = t5.matchTypeError$1(message);
              if (match == null) {
                match = t6.matchTypeError$1(message);
                if (match == null) {
                  match = t7.matchTypeError$1(message);
                  if (match == null) {
                    match = nullLiteralCall.matchTypeError$1(message);
                    if (match == null) {
                      match = t8.matchTypeError$1(message);
                      if (match == null) {
                        match = t9.matchTypeError$1(message);
                        t2 = match != null;
                      } else
                        t2 = true;
                    } else
                      t2 = true;
                  } else
                    t2 = true;
                } else
                  t2 = true;
              } else
                t2 = true;
            } else
              t2 = true;
          } else
            t2 = true;
          if (t2) {
            t2 = match == null ? null : match.method;
            return t1.call$1(new H.NullError(message, t2));
          }
        }
      }
      t2 = typeof message === "string" ? message : "";
      return t1.call$1(new H.UnknownJsTypeError(t2));
    }
    if (ex instanceof RangeError) {
      if (typeof message === "string" && message.indexOf("call stack") !== -1)
        return new P.StackOverflowError();
      return t1.call$1(new P.ArgumentError(null));
    }
    if (typeof InternalError == "function" && ex instanceof InternalError)
      if (typeof message === "string" && message === "too much recursion")
        return new P.StackOverflowError();
    return ex;
  },
  objectHashCode: function(object) {
    if (object == null || typeof object != 'object')
      return J.get$hashCode$(object);
    else
      return H.Primitives_objectHashCode(object);
  },
  fillLiteralMap: function(keyValuePairs, result) {
    var $length, index, index0, index1;
    $length = keyValuePairs.length;
    for (index = 0; index < $length; index = index1) {
      index0 = index + 1;
      index1 = index0 + 1;
      result.$indexSet(result, keyValuePairs[index], keyValuePairs[index0]);
    }
    return result;
  },
  invokeClosure: function(closure, isolate, numberOfArguments, arg1, arg2, arg3, arg4) {
    var t1 = J.getInterceptor(numberOfArguments);
    if (t1.$eq(numberOfArguments, 0))
      return H._callInIsolate(isolate, new H.invokeClosure_closure(closure));
    else if (t1.$eq(numberOfArguments, 1))
      return H._callInIsolate(isolate, new H.invokeClosure_closure0(closure, arg1));
    else if (t1.$eq(numberOfArguments, 2))
      return H._callInIsolate(isolate, new H.invokeClosure_closure1(closure, arg1, arg2));
    else if (t1.$eq(numberOfArguments, 3))
      return H._callInIsolate(isolate, new H.invokeClosure_closure2(closure, arg1, arg2, arg3));
    else if (t1.$eq(numberOfArguments, 4))
      return H._callInIsolate(isolate, new H.invokeClosure_closure3(closure, arg1, arg2, arg3, arg4));
    else
      throw H.wrapException(P.Exception_Exception("Unsupported number of arguments for wrapped closure"));
  },
  convertDartClosureToJS: function(closure, arity) {
    var $function;
    if (closure == null)
      return;
    $function = closure.$identity;
    if (!!$function)
      return $function;
    $function = (function(closure, arity, context, invoke) {  return function(a1, a2, a3, a4) {     return invoke(closure, context, arity, a1, a2, a3, a4);  };})(closure,arity,init.globalState.currentContext,H.invokeClosure);
    closure.$identity = $function;
    return $function;
  },
  Closure_fromTearOff: function(receiver, functions, reflectionInfo, isStatic, jsArguments, propertyName) {
    var $function, callName, functionType, $prototype, $constructor, t1, isIntercepted, trampoline, signatureFunction, getReceiver, i, stub, stubCallName, t2;
    $function = functions[0];
    $function.$stubName;
    callName = $function.$callName;
    $function.$reflectionInfo = reflectionInfo;
    functionType = H.ReflectionInfo_ReflectionInfo($function).functionType;
    $prototype = isStatic ? Object.create(new H.TearOffClosure().constructor.prototype) : Object.create(new H.BoundClosure(null, null, null, null).constructor.prototype);
    $prototype.$initialize = $prototype.constructor;
    if (isStatic)
      $constructor = function(){this.$initialize()};
    else if (typeof dart_precompiled == "function") {
      t1 = function(a,b,c,d) {this.$initialize(a,b,c,d)};
      $constructor = t1;
    } else {
      t1 = $.Closure_functionCounter;
      $.Closure_functionCounter = J.$add$ns(t1, 1);
      t1 = new Function("a", "b", "c", "d", "this.$initialize(a,b,c,d);" + t1);
      $constructor = t1;
    }
    $prototype.constructor = $constructor;
    $constructor.prototype = $prototype;
    t1 = !isStatic;
    if (t1) {
      isIntercepted = jsArguments.length == 1 && true;
      trampoline = H.Closure_forwardCallTo($function, isIntercepted);
    } else {
      $prototype.$name = propertyName;
      trampoline = $function;
      isIntercepted = false;
    }
    if (typeof functionType == "number")
      signatureFunction = (function(s){return function(){return init.metadata[s]}})(functionType);
    else if (t1 && typeof functionType == "function") {
      getReceiver = isIntercepted ? H.BoundClosure_receiverOf : H.BoundClosure_selfOf;
      signatureFunction = function(f,r){return function(){return f.apply({$receiver:r(this)},arguments)}}(functionType,getReceiver);
    } else
      throw H.wrapException("Error in reflectionInfo.");
    $prototype.$signature = signatureFunction;
    $prototype[callName] = trampoline;
    for (t1 = functions.length, i = 1; i < t1; ++i) {
      stub = functions[i];
      stubCallName = stub.$callName;
      if (stubCallName != null) {
        t2 = isStatic ? stub : H.Closure_forwardCallTo(stub, isIntercepted);
        $prototype[stubCallName] = t2;
      }
    }
    $prototype["call*"] = $function;
    return $constructor;
  },
  Closure_cspForwardCall: function(arity, $function) {
    var getSelf = H.BoundClosure_selfOf;
    switch (arity) {
      case 0:
        return function(F,S){return function(){return F.call(S(this))}}($function,getSelf);
      case 1:
        return function(F,S){return function(a){return F.call(S(this),a)}}($function,getSelf);
      case 2:
        return function(F,S){return function(a,b){return F.call(S(this),a,b)}}($function,getSelf);
      case 3:
        return function(F,S){return function(a,b,c){return F.call(S(this),a,b,c)}}($function,getSelf);
      case 4:
        return function(F,S){return function(a,b,c,d){return F.call(S(this),a,b,c,d)}}($function,getSelf);
      case 5:
        return function(F,S){return function(a,b,c,d,e){return F.call(S(this),a,b,c,d,e)}}($function,getSelf);
      default:
        return function(f,s){return function(){return f.apply(s(this),arguments)}}($function,getSelf);
    }
  },
  Closure_forwardCallTo: function($function, isIntercepted) {
    var arity, t1, t2, $arguments;
    if (isIntercepted)
      return H.Closure_forwardInterceptedCallTo($function);
    arity = $function.length;
    if (typeof dart_precompiled == "function")
      return H.Closure_cspForwardCall(arity, $function);
    else if (arity === 0) {
      t1 = $.BoundClosure_selfFieldNameCache;
      if (t1 == null) {
        t1 = H.BoundClosure_computeFieldNamed("self");
        $.BoundClosure_selfFieldNameCache = t1;
      }
      t1 = "return function(){return F.call(this." + H.S(t1) + ");";
      t2 = $.Closure_functionCounter;
      $.Closure_functionCounter = J.$add$ns(t2, 1);
      return new Function("F", t1 + H.S(t2) + "}")($function);
    } else if (1 <= arity && arity < 27) {
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity).join(",");
      t1 = "return function(" + $arguments + "){return F.call(this.";
      t2 = $.BoundClosure_selfFieldNameCache;
      if (t2 == null) {
        t2 = H.BoundClosure_computeFieldNamed("self");
        $.BoundClosure_selfFieldNameCache = t2;
      }
      t2 = t1 + H.S(t2) + "," + $arguments + ");";
      t1 = $.Closure_functionCounter;
      $.Closure_functionCounter = J.$add$ns(t1, 1);
      return new Function("F", t2 + H.S(t1) + "}")($function);
    } else
      return H.Closure_cspForwardCall(arity, $function);
  },
  Closure_cspForwardInterceptedCall: function(arity, $name, $function) {
    var getSelf, getReceiver;
    getSelf = H.BoundClosure_selfOf;
    getReceiver = H.BoundClosure_receiverOf;
    switch (arity) {
      case 0:
        throw H.wrapException(H.RuntimeError$("Intercepted function with no arguments."));
      case 1:
        return function(n,s,r){return function(){return s(this)[n](r(this))}}($name,getSelf,getReceiver);
      case 2:
        return function(n,s,r){return function(a){return s(this)[n](r(this),a)}}($name,getSelf,getReceiver);
      case 3:
        return function(n,s,r){return function(a,b){return s(this)[n](r(this),a,b)}}($name,getSelf,getReceiver);
      case 4:
        return function(n,s,r){return function(a,b,c){return s(this)[n](r(this),a,b,c)}}($name,getSelf,getReceiver);
      case 5:
        return function(n,s,r){return function(a,b,c,d){return s(this)[n](r(this),a,b,c,d)}}($name,getSelf,getReceiver);
      case 6:
        return function(n,s,r){return function(a,b,c,d,e){return s(this)[n](r(this),a,b,c,d,e)}}($name,getSelf,getReceiver);
      default:
        return function(f,s,r,a){return function(){a=[r(this)];Array.prototype.push.apply(a,arguments);return f.apply(s(this),a)}}($function,getSelf,getReceiver);
    }
  },
  Closure_forwardInterceptedCallTo: function($function) {
    var stubName, arity, t1, t2, $arguments;
    stubName = $function.$stubName;
    arity = $function.length;
    if (typeof dart_precompiled == "function")
      return H.Closure_cspForwardInterceptedCall(arity, stubName, $function);
    else if (arity === 1) {
      t1 = "return this." + H.S(H.BoundClosure_selfFieldName()) + "." + stubName + "(this." + H.S(H.BoundClosure_receiverFieldName()) + ");";
      t2 = $.Closure_functionCounter;
      $.Closure_functionCounter = J.$add$ns(t2, 1);
      return new Function(t1 + H.S(t2));
    } else if (1 < arity && arity < 28) {
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity - 1).join(",");
      t1 = "return function(" + $arguments + "){return this." + H.S(H.BoundClosure_selfFieldName()) + "." + stubName + "(this." + H.S(H.BoundClosure_receiverFieldName()) + "," + $arguments + ");";
      t2 = $.Closure_functionCounter;
      $.Closure_functionCounter = J.$add$ns(t2, 1);
      return new Function(t1 + H.S(t2) + "}")();
    } else
      return H.Closure_cspForwardInterceptedCall(arity, stubName, $function);
  },
  closureFromTearOff: function(receiver, functions, reflectionInfo, isStatic, jsArguments, $name) {
    functions.fixed$length = init;
    reflectionInfo.fixed$length = init;
    return H.Closure_fromTearOff(receiver, functions, reflectionInfo, !!isStatic, jsArguments, $name);
  },
  throwCyclicInit: function(staticName) {
    throw H.wrapException(P.CyclicInitializationError$("Cyclic initialization for static " + H.S(staticName)));
  },
  buildFunctionType: function(returnType, parameterTypes, optionalParameterTypes) {
    return new H.RuntimeFunctionType(returnType, parameterTypes, optionalParameterTypes, null);
  },
  getDynamicRuntimeType: function() {
    return C.C_DynamicRuntimeType;
  },
  createRuntimeType: function($name) {
    return new H.TypeImpl($name, null);
  },
  setRuntimeTypeInfo: function(target, typeInfo) {
    if (target != null)
      target.$builtinTypeInfo = typeInfo;
    return target;
  },
  getRuntimeTypeInfo: function(target) {
    if (target == null)
      return;
    return target.$builtinTypeInfo;
  },
  getRuntimeTypeArguments: function(target, substitutionName) {
    return H.substitute(target["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(target));
  },
  getRuntimeTypeArgument: function(target, substitutionName, index) {
    var $arguments = H.getRuntimeTypeArguments(target, substitutionName);
    return $arguments == null ? null : $arguments[index];
  },
  getTypeArgumentByIndex: function(target, index) {
    var rti = H.getRuntimeTypeInfo(target);
    return rti == null ? null : rti[index];
  },
  runtimeTypeToString: function(type, onTypeVariable) {
    if (type == null)
      return "dynamic";
    else if (typeof type === "object" && type !== null && type.constructor === Array)
      return type[0].builtin$cls + H.joinArguments(type, 1, onTypeVariable);
    else if (typeof type == "function")
      return type.builtin$cls;
    else if (typeof type === "number" && Math.floor(type) === type)
      return C.JSInt_methods.toString$0(type);
    else
      return;
  },
  joinArguments: function(types, startIndex, onTypeVariable) {
    var buffer, index, firstArgument, allDynamic, argument, str;
    if (types == null)
      return "";
    buffer = P.StringBuffer$("");
    for (index = startIndex, firstArgument = true, allDynamic = true; index < types.length; ++index) {
      if (firstArgument)
        firstArgument = false;
      else
        buffer._contents = buffer._contents + ", ";
      argument = types[index];
      if (argument != null)
        allDynamic = false;
      str = H.runtimeTypeToString(argument, onTypeVariable);
      str = typeof str === "string" ? str : H.S(str);
      buffer._contents = buffer._contents + str;
    }
    return allDynamic ? "" : "<" + H.S(buffer) + ">";
  },
  substitute: function(substitution, $arguments) {
    if (typeof substitution === "object" && substitution !== null && substitution.constructor === Array)
      $arguments = substitution;
    else if (typeof substitution == "function") {
      substitution = H.invokeOn(substitution, null, $arguments);
      if (typeof substitution === "object" && substitution !== null && substitution.constructor === Array)
        $arguments = substitution;
      else if (typeof substitution == "function")
        $arguments = H.invokeOn(substitution, null, $arguments);
    }
    return $arguments;
  },
  areSubtypes: function(s, t) {
    var len, i;
    if (s == null || t == null)
      return true;
    len = s.length;
    for (i = 0; i < len; ++i)
      if (!H.isSubtype(s[i], t[i]))
        return false;
    return true;
  },
  computeSignature: function(signature, context, contextName) {
    return H.invokeOn(signature, context, H.getRuntimeTypeArguments(context, contextName));
  },
  isSubtype: function(s, t) {
    var targetSignatureFunction, t1, typeOfS, t2, typeOfT, $name, substitution;
    if (s === t)
      return true;
    if (s == null || t == null)
      return true;
    if ("func" in t) {
      if (!("func" in s)) {
        if ("$is_" + H.S(t.func) in s)
          return true;
        targetSignatureFunction = s.$signature;
        if (targetSignatureFunction == null)
          return false;
        s = targetSignatureFunction.apply(s, null);
      }
      return H.isFunctionSubtype(s, t);
    }
    if (t.builtin$cls === "Function" && "func" in s)
      return true;
    t1 = typeof s === "object" && s !== null && s.constructor === Array;
    typeOfS = t1 ? s[0] : s;
    t2 = typeof t === "object" && t !== null && t.constructor === Array;
    typeOfT = t2 ? t[0] : t;
    $name = H.runtimeTypeToString(typeOfT, null);
    if (typeOfT !== typeOfS) {
      if (!("$is" + H.S($name) in typeOfS))
        return false;
      substitution = typeOfS["$as" + H.S(H.runtimeTypeToString(typeOfT, null))];
    } else
      substitution = null;
    if (!t1 && substitution == null || !t2)
      return true;
    t1 = t1 ? s.slice(1) : null;
    t2 = t2 ? t.slice(1) : null;
    return H.areSubtypes(H.substitute(substitution, t1), t2);
  },
  areAssignable: function(s, t, allowShorter) {
    var sLength, tLength, i, t1, t2;
    if (t == null && s == null)
      return true;
    if (t == null)
      return allowShorter;
    if (s == null)
      return false;
    sLength = s.length;
    tLength = t.length;
    if (allowShorter) {
      if (sLength < tLength)
        return false;
    } else if (sLength !== tLength)
      return false;
    for (i = 0; i < tLength; ++i) {
      t1 = s[i];
      t2 = t[i];
      if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
        return false;
    }
    return true;
  },
  areAssignableMaps: function(s, t) {
    var t1, names, i, $name, tType, sType;
    if (t == null)
      return true;
    if (s == null)
      return false;
    t1 = Object.getOwnPropertyNames(t);
    t1.fixed$length = init;
    names = t1;
    for (t1 = names.length, i = 0; i < t1; ++i) {
      $name = names[i];
      if (!Object.hasOwnProperty.call(s, $name))
        return false;
      tType = t[$name];
      sType = s[$name];
      if (!(H.isSubtype(tType, sType) || H.isSubtype(sType, tType)))
        return false;
    }
    return true;
  },
  isFunctionSubtype: function(s, t) {
    var sReturnType, tReturnType, sParameterTypes, tParameterTypes, sOptionalParameterTypes, tOptionalParameterTypes, sParametersLen, tParametersLen, sOptionalParametersLen, tOptionalParametersLen, pos, t1, t2, tPos, sPos;
    if (!("func" in s))
      return false;
    if ("void" in s) {
      if (!("void" in t) && "ret" in t)
        return false;
    } else if (!("void" in t)) {
      sReturnType = s.ret;
      tReturnType = t.ret;
      if (!(H.isSubtype(sReturnType, tReturnType) || H.isSubtype(tReturnType, sReturnType)))
        return false;
    }
    sParameterTypes = s.args;
    tParameterTypes = t.args;
    sOptionalParameterTypes = s.opt;
    tOptionalParameterTypes = t.opt;
    sParametersLen = sParameterTypes != null ? sParameterTypes.length : 0;
    tParametersLen = tParameterTypes != null ? tParameterTypes.length : 0;
    sOptionalParametersLen = sOptionalParameterTypes != null ? sOptionalParameterTypes.length : 0;
    tOptionalParametersLen = tOptionalParameterTypes != null ? tOptionalParameterTypes.length : 0;
    if (sParametersLen > tParametersLen)
      return false;
    if (sParametersLen + sOptionalParametersLen < tParametersLen + tOptionalParametersLen)
      return false;
    if (sParametersLen === tParametersLen) {
      if (!H.areAssignable(sParameterTypes, tParameterTypes, false))
        return false;
      if (!H.areAssignable(sOptionalParameterTypes, tOptionalParameterTypes, true))
        return false;
    } else {
      for (pos = 0; pos < sParametersLen; ++pos) {
        t1 = sParameterTypes[pos];
        t2 = tParameterTypes[pos];
        if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
          return false;
      }
      for (tPos = pos, sPos = 0; tPos < tParametersLen; ++sPos, ++tPos) {
        t1 = sOptionalParameterTypes[sPos];
        t2 = tParameterTypes[tPos];
        if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
          return false;
      }
      for (tPos = 0; tPos < tOptionalParametersLen; ++sPos, ++tPos) {
        t1 = sOptionalParameterTypes[sPos];
        t2 = tOptionalParameterTypes[tPos];
        if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
          return false;
      }
    }
    return H.areAssignableMaps(s.named, t.named);
  },
  invokeOn: function($function, receiver, $arguments) {
    return $function.apply(receiver, $arguments);
  },
  toStringForNativeObject: function(obj) {
    var t1 = $.getTagFunction;
    return "Instance of " + (t1 == null ? "<Unknown>" : t1.call$1(obj));
  },
  hashCodeForNativeObject: function(object) {
    return H.Primitives_objectHashCode(object);
  },
  defineProperty: function(obj, property, value) {
    Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
  },
  lookupAndCacheInterceptor: function(obj) {
    var tag, record, interceptor, interceptorClass, mark, t1;
    tag = $.getTagFunction.call$1(obj);
    record = $.dispatchRecordsForInstanceTags[tag];
    if (record != null) {
      Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
      return record.i;
    }
    interceptor = $.interceptorsForUncacheableTags[tag];
    if (interceptor != null)
      return interceptor;
    interceptorClass = init.interceptorsByTag[tag];
    if (interceptorClass == null) {
      tag = $.alternateTagFunction.call$2(obj, tag);
      if (tag != null) {
        record = $.dispatchRecordsForInstanceTags[tag];
        if (record != null) {
          Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
          return record.i;
        }
        interceptor = $.interceptorsForUncacheableTags[tag];
        if (interceptor != null)
          return interceptor;
        interceptorClass = init.interceptorsByTag[tag];
      }
    }
    if (interceptorClass == null)
      return;
    interceptor = interceptorClass.prototype;
    mark = tag[0];
    if (mark === "!") {
      record = H.makeLeafDispatchRecord(interceptor);
      $.dispatchRecordsForInstanceTags[tag] = record;
      Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
      return record.i;
    }
    if (mark === "~") {
      $.interceptorsForUncacheableTags[tag] = interceptor;
      return interceptor;
    }
    if (mark === "-") {
      t1 = H.makeLeafDispatchRecord(interceptor);
      Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
      return t1.i;
    }
    if (mark === "+")
      return H.patchInteriorProto(obj, interceptor);
    if (mark === "*")
      throw H.wrapException(P.UnimplementedError$(tag));
    if (init.leafTags[tag] === true) {
      t1 = H.makeLeafDispatchRecord(interceptor);
      Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
      return t1.i;
    } else
      return H.patchInteriorProto(obj, interceptor);
  },
  patchInteriorProto: function(obj, interceptor) {
    var proto, record;
    proto = Object.getPrototypeOf(obj);
    record = J.makeDispatchRecord(interceptor, proto, null, null);
    Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
    return interceptor;
  },
  makeLeafDispatchRecord: function(interceptor) {
    return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
  },
  makeDefaultDispatchRecord: function(tag, interceptorClass, proto) {
    var interceptor = interceptorClass.prototype;
    if (init.leafTags[tag] === true)
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    else
      return J.makeDispatchRecord(interceptor, proto, null, null);
  },
  initNativeDispatch: function() {
    if (true === $.initNativeDispatchFlag)
      return;
    $.initNativeDispatchFlag = true;
    H.initNativeDispatchContinue();
  },
  initNativeDispatchContinue: function() {
    var map, tags, i, tag, proto, record, interceptorClass;
    $.dispatchRecordsForInstanceTags = Object.create(null);
    $.interceptorsForUncacheableTags = Object.create(null);
    H.initHooks();
    map = init.interceptorsByTag;
    tags = Object.getOwnPropertyNames(map);
    if (typeof window != "undefined") {
      window;
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        proto = $.prototypeForTagFunction.call$1(tag);
        if (proto != null) {
          record = H.makeDefaultDispatchRecord(tag, map[tag], proto);
          if (record != null)
            Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        }
      }
    }
    for (i = 0; i < tags.length; ++i) {
      tag = tags[i];
      if (/^[A-Za-z_]/.test(tag)) {
        interceptorClass = map[tag];
        map["!" + tag] = interceptorClass;
        map["~" + tag] = interceptorClass;
        map["-" + tag] = interceptorClass;
        map["+" + tag] = interceptorClass;
        map["*" + tag] = interceptorClass;
      }
    }
  },
  initHooks: function() {
    var hooks, transformers, i, transformer, getTag, getUnknownTag, prototypeForTag;
    hooks = C.JS_CONST_aQP();
    hooks = H.applyHooksTransformer(C.JS_CONST_0, H.applyHooksTransformer(C.JS_CONST_rr7, H.applyHooksTransformer(C.JS_CONST_Fs4, H.applyHooksTransformer(C.JS_CONST_Fs4, H.applyHooksTransformer(C.JS_CONST_gkc, H.applyHooksTransformer(C.JS_CONST_U4w, H.applyHooksTransformer(C.JS_CONST_QJm(C.JS_CONST_IX5), hooks)))))));
    if (typeof dartNativeDispatchHooksTransformer != "undefined") {
      transformers = dartNativeDispatchHooksTransformer;
      if (typeof transformers == "function")
        transformers = [transformers];
      if (transformers.constructor == Array)
        for (i = 0; i < transformers.length; ++i) {
          transformer = transformers[i];
          if (typeof transformer == "function")
            hooks = transformer(hooks) || hooks;
        }
    }
    getTag = hooks.getTag;
    getUnknownTag = hooks.getUnknownTag;
    prototypeForTag = hooks.prototypeForTag;
    $.getTagFunction = new H.initHooks_closure(getTag);
    $.alternateTagFunction = new H.initHooks_closure0(getUnknownTag);
    $.prototypeForTagFunction = new H.initHooks_closure1(prototypeForTag);
  },
  applyHooksTransformer: function(transformer, hooks) {
    return transformer(hooks) || hooks;
  },
  ReflectionInfo: {
    "": "Object;jsFunction,data,isAccessor,requiredParameterCount,optionalParameterCount,areOptionalParametersNamed,functionType",
    static: {"": "ReflectionInfo_REQUIRED_PARAMETERS_INFO,ReflectionInfo_OPTIONAL_PARAMETERS_INFO,ReflectionInfo_FUNCTION_TYPE_INDEX,ReflectionInfo_FIRST_DEFAULT_ARGUMENT", ReflectionInfo_ReflectionInfo: function(jsFunction) {
        var data, requiredParametersInfo, requiredParameterCount, optionalParametersInfo;
        data = jsFunction.$reflectionInfo;
        if (data == null)
          return;
        data.fixed$length = init;
        data = data;
        requiredParametersInfo = data[0];
        requiredParameterCount = requiredParametersInfo >> 1;
        optionalParametersInfo = data[1];
        return new H.ReflectionInfo(jsFunction, data, (requiredParametersInfo & 1) === 1, requiredParameterCount, optionalParametersInfo >> 1, (optionalParametersInfo & 1) === 1, data[2]);
      }}
  },
  TypeErrorDecoder: {
    "": "Object;_pattern,_arguments,_argumentsExpr,_expr,_method,_receiver<",
    matchTypeError$1: function(message) {
      var match, result, t1;
      match = new RegExp(this._pattern).exec(message);
      if (match == null)
        return;
      result = {};
      t1 = this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    },
    static: {"": "TypeErrorDecoder_noSuchMethodPattern,TypeErrorDecoder_notClosurePattern,TypeErrorDecoder_nullCallPattern,TypeErrorDecoder_nullLiteralCallPattern,TypeErrorDecoder_undefinedCallPattern,TypeErrorDecoder_undefinedLiteralCallPattern,TypeErrorDecoder_nullPropertyPattern,TypeErrorDecoder_nullLiteralPropertyPattern,TypeErrorDecoder_undefinedPropertyPattern,TypeErrorDecoder_undefinedLiteralPropertyPattern", TypeErrorDecoder_extractPattern: function(message) {
        var match, $arguments, argumentsExpr, expr, method, receiver;
        message = message.replace(String({}), '$receiver$').replace(new RegExp("[[\\]{}()*+?.\\\\^$|]", 'g'), '\\$&');
        match = message.match(/\\\$[a-zA-Z]+\\\$/g);
        if (match == null)
          match = [];
        $arguments = match.indexOf("\\$arguments\\$");
        argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
        expr = match.indexOf("\\$expr\\$");
        method = match.indexOf("\\$method\\$");
        receiver = match.indexOf("\\$receiver\\$");
        return new H.TypeErrorDecoder(message.replace('\\$arguments\\$', '((?:x|[^x])*)').replace('\\$argumentsExpr\\$', '((?:x|[^x])*)').replace('\\$expr\\$', '((?:x|[^x])*)').replace('\\$method\\$', '((?:x|[^x])*)').replace('\\$receiver\\$', '((?:x|[^x])*)'), $arguments, argumentsExpr, expr, method, receiver);
      }, TypeErrorDecoder_provokeCallErrorOn: function(expression) {
        return function($expr$) {
  var $argumentsExpr$ = '$arguments$'
  try {
    $expr$.$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}(expression);
      }, TypeErrorDecoder_provokePropertyErrorOn: function(expression) {
        return function($expr$) {
  try {
    $expr$.$method$;
  } catch (e) {
    return e.message;
  }
}(expression);
      }}
  },
  NullError: {
    "": "Error;_message,_method",
    toString$0: function(_) {
      var t1 = this._method;
      if (t1 == null)
        return "NullError: " + H.S(this._message);
      return "NullError: Cannot call \"" + H.S(t1) + "\" on null";
    },
    $isError: true
  },
  JsNoSuchMethodError: {
    "": "Error;_message,_method,_receiver<",
    toString$0: function(_) {
      var t1, t2;
      t1 = this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + H.S(this._message);
      t2 = this._receiver;
      if (t2 == null)
        return "NoSuchMethodError: Cannot call \"" + t1 + "\" (" + H.S(this._message) + ")";
      return "NoSuchMethodError: Cannot call \"" + t1 + "\" on \"" + t2 + "\" (" + H.S(this._message) + ")";
    },
    $isError: true,
    static: {JsNoSuchMethodError$: function(_message, match) {
        var t1, t2;
        t1 = match == null;
        t2 = t1 ? null : match.method;
        t1 = t1 ? null : match.receiver;
        return new H.JsNoSuchMethodError(_message, t2, t1);
      }}
  },
  UnknownJsTypeError: {
    "": "Error;_message",
    toString$0: function(_) {
      var t1 = this._message;
      return C.JSString_methods.get$isEmpty(t1) ? "Error" : "Error: " + t1;
    }
  },
  unwrapException_saveStackTrace: {
    "": "Closure:11;ex_0",
    call$1: function(error) {
      var t1 = J.getInterceptor(error);
      if (typeof error === "object" && error !== null && !!t1.$isError)
        if (error.$thrownJsError == null)
          error.$thrownJsError = this.ex_0;
      return error;
    }
  },
  _StackTrace: {
    "": "Object;_exception,_trace",
    toString$0: function(_) {
      var t1, trace;
      t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = typeof t1 === "object" ? t1.stack : null;
      t1 = trace == null ? "" : trace;
      this._trace = t1;
      return t1;
    }
  },
  invokeClosure_closure: {
    "": "Closure:9;closure_0",
    call$0: function() {
      return this.closure_0.call$0();
    }
  },
  invokeClosure_closure0: {
    "": "Closure:9;closure_1,arg1_2",
    call$0: function() {
      return this.closure_1.call$1(this.arg1_2);
    }
  },
  invokeClosure_closure1: {
    "": "Closure:9;closure_3,arg1_4,arg2_5",
    call$0: function() {
      return this.closure_3.call$2(this.arg1_4, this.arg2_5);
    }
  },
  invokeClosure_closure2: {
    "": "Closure:9;closure_6,arg1_7,arg2_8,arg3_9",
    call$0: function() {
      return this.closure_6.call$3(this.arg1_7, this.arg2_8, this.arg3_9);
    }
  },
  invokeClosure_closure3: {
    "": "Closure:9;closure_10,arg1_11,arg2_12,arg3_13,arg4_14",
    call$0: function() {
      return this.closure_10.call$4(this.arg1_11, this.arg2_12, this.arg3_13, this.arg4_14);
    }
  },
  Closure: {
    "": "Object;",
    toString$0: function(_) {
      return "Closure";
    }
  },
  TearOffClosure: {
    "": "Closure;"
  },
  BoundClosure: {
    "": "TearOffClosure;_self<,__js_helper$_target,_receiver<,__js_helper$_name",
    $eq: function(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this === other)
        return true;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isBoundClosure)
        return false;
      return this._self === other._self && this.__js_helper$_target === other.__js_helper$_target && this._receiver === other._receiver;
    },
    get$hashCode: function(_) {
      var t1, receiverHashCode;
      t1 = this._receiver;
      if (t1 == null)
        receiverHashCode = H.Primitives_objectHashCode(this._self);
      else
        receiverHashCode = typeof t1 !== "object" ? J.get$hashCode$(t1) : H.Primitives_objectHashCode(t1);
      return (receiverHashCode ^ H.Primitives_objectHashCode(this.__js_helper$_target)) >>> 0;
    },
    $isBoundClosure: true,
    static: {"": "BoundClosure_selfFieldNameCache,BoundClosure_receiverFieldNameCache", BoundClosure_selfOf: function(closure) {
        return closure.get$_self();
      }, BoundClosure_receiverOf: function(closure) {
        return closure.get$_receiver();
      }, BoundClosure_selfFieldName: function() {
        var t1 = $.BoundClosure_selfFieldNameCache;
        if (t1 == null) {
          t1 = H.BoundClosure_computeFieldNamed("self");
          $.BoundClosure_selfFieldNameCache = t1;
        }
        return t1;
      }, BoundClosure_receiverFieldName: function() {
        var t1 = $.BoundClosure_receiverFieldNameCache;
        if (t1 == null) {
          t1 = H.BoundClosure_computeFieldNamed("receiver");
          $.BoundClosure_receiverFieldNameCache = t1;
        }
        return t1;
      }, BoundClosure_computeFieldNamed: function(fieldName) {
        var template, t1, names, i, $name;
        template = new H.BoundClosure("self", "target", "receiver", "name");
        t1 = Object.getOwnPropertyNames(template);
        t1.fixed$length = init;
        names = t1;
        for (t1 = names.length, i = 0; i < t1; ++i) {
          $name = names[i];
          if (template[$name] === fieldName)
            return $name;
        }
      }}
  },
  RuntimeError: {
    "": "Error;message",
    toString$0: function(_) {
      return "RuntimeError: " + H.S(this.message);
    },
    static: {RuntimeError$: function(message) {
        return new H.RuntimeError(message);
      }}
  },
  RuntimeType: {
    "": "Object;"
  },
  RuntimeFunctionType: {
    "": "RuntimeType;returnType,parameterTypes,optionalParameterTypes,namedParameters",
    _isTest$1: function(expression) {
      var functionTypeObject = this._extractFunctionTypeObjectFrom$1(expression);
      return functionTypeObject == null ? false : H.isFunctionSubtype(functionTypeObject, this.toRti$0());
    },
    _extractFunctionTypeObjectFrom$1: function(o) {
      var interceptor = J.getInterceptor(o);
      return "$signature" in interceptor ? interceptor.$signature() : null;
    },
    toRti$0: function() {
      var result, t1, t2, namedRti, keys, i, $name;
      result = { "func": "dynafunc" };
      t1 = this.returnType;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isVoidRuntimeType)
        result.void = true;
      else if (typeof t1 !== "object" || t1 === null || !t2.$isDynamicRuntimeType)
        result.ret = t1.toRti$0();
      t1 = this.parameterTypes;
      if (t1 != null && t1.length !== 0)
        result.args = H.RuntimeFunctionType_listToRti(t1);
      t1 = this.optionalParameterTypes;
      if (t1 != null && t1.length !== 0)
        result.opt = H.RuntimeFunctionType_listToRti(t1);
      t1 = this.namedParameters;
      if (t1 != null) {
        namedRti = {};
        keys = H.extractKeys(t1);
        for (t2 = keys.length, i = 0; i < t2; ++i) {
          $name = keys[i];
          namedRti[$name] = t1[$name].toRti$0();
        }
        result.named = namedRti;
      }
      return result;
    },
    toString$0: function(_) {
      var t1, t2, result, needsComma, i, type, keys, $name;
      t1 = this.parameterTypes;
      if (t1 != null)
        for (t2 = t1.length, result = "(", needsComma = false, i = 0; i < t2; ++i, needsComma = true) {
          type = t1[i];
          if (needsComma)
            result += ", ";
          result += H.S(type);
        }
      else {
        result = "(";
        needsComma = false;
      }
      t1 = this.optionalParameterTypes;
      if (t1 != null && t1.length !== 0) {
        result = (needsComma ? result + ", " : result) + "[";
        for (t2 = t1.length, needsComma = false, i = 0; i < t2; ++i, needsComma = true) {
          type = t1[i];
          if (needsComma)
            result += ", ";
          result += H.S(type);
        }
        result += "]";
      } else {
        t1 = this.namedParameters;
        if (t1 != null) {
          result = (needsComma ? result + ", " : result) + "{";
          keys = H.extractKeys(t1);
          for (t2 = keys.length, needsComma = false, i = 0; i < t2; ++i, needsComma = true) {
            $name = keys[i];
            if (needsComma)
              result += ", ";
            result += H.S(t1[$name].toRti$0()) + " " + $name;
          }
          result += "}";
        }
      }
      return result + (") -> " + H.S(this.returnType));
    },
    static: {"": "RuntimeFunctionType_inAssert", RuntimeFunctionType_listToRti: function(list) {
        var result, t1, i;
        list = list;
        result = [];
        for (t1 = list.length, i = 0; i < t1; ++i)
          result.push(list[i].toRti$0());
        return result;
      }}
  },
  DynamicRuntimeType: {
    "": "RuntimeType;",
    toString$0: function(_) {
      return "dynamic";
    },
    toRti$0: function() {
      return;
    },
    $isDynamicRuntimeType: true
  },
  TypeImpl: {
    "": "Object;_typeName,_unmangledName",
    toString$0: function(_) {
      var t1, unmangledName, unmangledName0;
      t1 = this._unmangledName;
      if (t1 != null)
        return t1;
      unmangledName = this._typeName;
      unmangledName0 = init.mangledGlobalNames[unmangledName];
      unmangledName = unmangledName0 == null ? unmangledName : unmangledName0;
      this._unmangledName = unmangledName;
      return unmangledName;
    },
    get$hashCode: function(_) {
      return J.get$hashCode$(this._typeName);
    },
    $eq: function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      return typeof other === "object" && other !== null && !!t1.$isTypeImpl && J.$eq(this._typeName, other._typeName);
    },
    $isTypeImpl: true
  },
  initHooks_closure: {
    "": "Closure:11;getTag_0",
    call$1: function(o) {
      return this.getTag_0(o);
    }
  },
  initHooks_closure0: {
    "": "Closure:12;getUnknownTag_1",
    call$2: function(o, tag) {
      return this.getUnknownTag_1(o, tag);
    }
  },
  initHooks_closure1: {
    "": "Closure:13;prototypeForTag_2",
    call$1: function(tag) {
      return this.prototypeForTag_2(tag);
    }
  }
}],
["dart._collection.dev", "dart:_collection-dev", , H, {
  "": "",
  IterableMixinWorkaround_forEach: function(iterable, f) {
    var t1;
    for (t1 = new H.ListIterator(iterable, iterable.length, 0, null); t1.moveNext$0();)
      f.call$1(t1._current);
  },
  IterableMixinWorkaround_toStringIterable: function(iterable, leftDelimiter, rightDelimiter) {
    var result, i, t1;
    for (i = 0; t1 = $.get$IterableMixinWorkaround__toStringList(), i < t1.length; ++i)
      if (t1[i] === iterable)
        return H.S(leftDelimiter) + "..." + H.S(rightDelimiter);
    result = P.StringBuffer$("");
    try {
      $.get$IterableMixinWorkaround__toStringList().push(iterable);
      result.write$1(leftDelimiter);
      result.writeAll$2(iterable, ", ");
      result.write$1(rightDelimiter);
    } finally {
      t1 = $.get$IterableMixinWorkaround__toStringList();
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t1.pop();
    }
    return result.get$_contents();
  },
  IterableMixinWorkaround_setRangeList: function(list, start, end, from, skipCount) {
    var $length;
    if (start < 0 || start > list.length)
      H.throwExpression(P.RangeError$range(start, 0, list.length));
    if (end < start || end > list.length)
      H.throwExpression(P.RangeError$range(end, start, list.length));
    $length = end - start;
    if ($length === 0)
      return;
    if (skipCount + $length > from.length)
      throw H.wrapException(P.StateError$("Not enough elements"));
    H.Lists_copy(from, skipCount, list, start, $length);
  },
  Lists_copy: function(src, srcStart, dst, dstStart, count) {
    var i, j, t1, t2;
    if (srcStart < dstStart)
      for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length; i >= srcStart; --i, --j) {
        if (i >= t1)
          return H.ioore(src, i);
        C.JSArray_methods.$indexSet(dst, j, src[i]);
      }
    else
      for (t1 = srcStart + count, t2 = src.length, j = dstStart, i = srcStart; i < t1; ++i, ++j) {
        if (i >= t2)
          return H.ioore(src, i);
        C.JSArray_methods.$indexSet(dst, j, src[i]);
      }
  },
  Symbol_getName: function(symbol) {
    return symbol.get$_name();
  },
  ListIterator: {
    "": "Object;_iterable,_dev$_length,_index,_current",
    get$current: function() {
      return this._current;
    },
    moveNext$0: function() {
      var t1, t2, $length, t3;
      t1 = this._iterable;
      t2 = J.getInterceptor$asx(t1);
      $length = t2.get$length(t1);
      if (this._dev$_length !== $length)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      t3 = this._index;
      if (t3 >= $length) {
        this._current = null;
        return false;
      }
      this._current = t2.elementAt$1(t1, t3);
      this._index = this._index + 1;
      return true;
    }
  },
  MappedIterable: {
    "": "IterableBase;_iterable,_f",
    get$iterator: function(_) {
      var t1 = this._iterable;
      t1 = new H.MappedIterator(null, t1.get$iterator(t1), this._f);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    },
    get$length: function(_) {
      var t1 = this._iterable;
      return t1.get$length(t1);
    },
    $asIterableBase: function($S, $T) {
      return [$T];
    },
    static: {MappedIterable_MappedIterable: function(iterable, $function, $S, $T) {
        return H.setRuntimeTypeInfo(new H.EfficientLengthMappedIterable(iterable, $function), [$S, $T]);
      }}
  },
  EfficientLengthMappedIterable: {
    "": "MappedIterable;_iterable,_f",
    $asMappedIterable: null
  },
  MappedIterator: {
    "": "Iterator;_current,_iterator,_f",
    _f$1: function(arg0) {
      return this._f.call$1(arg0);
    },
    moveNext$0: function() {
      var t1 = this._iterator;
      if (t1.moveNext$0()) {
        this._current = this._f$1(t1.get$current());
        return true;
      }
      this._current = null;
      return false;
    },
    get$current: function() {
      return this._current;
    },
    $asIterator: function($S, $T) {
      return [$T];
    }
  },
  FixedLengthListMixin: {
    "": "Object;"
  }
}],
["dart._js_names", "dart:_js_names", , H, {
  "": "",
  extractKeys: function(victim) {
    var t1 = H.setRuntimeTypeInfo((function(victim, hasOwnProperty) {
  var result = [];
  for (var key in victim) {
    if (hasOwnProperty.call(victim, key)) result.push(key);
  }
  return result;
})(victim, Object.prototype.hasOwnProperty), [null]);
    t1.fixed$length = init;
    return t1;
  }
}],
["dart.async", "dart:async", , P, {
  "": "",
  _invokeErrorHandler: function(errorHandler, error, stackTrace) {
    var t1 = H.getDynamicRuntimeType();
    t1 = H.buildFunctionType(t1, [t1, t1])._isTest$1(errorHandler);
    if (t1)
      return errorHandler.call$2(error, stackTrace);
    else
      return errorHandler.call$1(error);
  },
  _registerErrorHandler: function(errorHandler, zone) {
    var t1 = H.getDynamicRuntimeType();
    t1 = H.buildFunctionType(t1, [t1, t1])._isTest$1(errorHandler);
    zone.toString;
    if (t1)
      return errorHandler;
    else
      return errorHandler;
  },
  Future_wait: function(futures, eagerError) {
    var t1, t2, t3, future, pos, values, completer;
    t1 = {};
    t1.completer_0 = null;
    t1.values_1 = null;
    t1.remaining_2 = 0;
    t1.error_3 = null;
    t1.stackTrace_4 = null;
    t2 = new P.Future_wait_handleError(t1, eagerError);
    for (t3 = new H.ListIterator(futures, futures.length, 0, null); t3.moveNext$0();) {
      future = t3._current;
      pos = t1.remaining_2;
      t1.remaining_2 = pos + 1;
      future.then$2$onError(new P.Future_wait_closure(t1, eagerError, pos), t2);
    }
    t2 = t1.remaining_2;
    if (t2 === 0) {
      t1 = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null, null, null, null, null, null), [null]);
      t1._async$_Future$immediate$1(C.List_empty, null);
      return t1;
    }
    values = Array(t2);
    values.fixed$length = init;
    t1.values_1 = values;
    t2 = J.JSArray;
    completer = H.setRuntimeTypeInfo(new P._AsyncCompleter(P._Future$(t2)), [t2]);
    t1.completer_0 = completer;
    return completer.future;
  },
  _asyncRunCallback: [function() {
    var callback, t1, exception, milliseconds;
    for (; t1 = $.get$_asyncCallbacks(), t1._head !== t1._tail;) {
      callback = t1.removeFirst$0();
      try {
        callback.call$0();
      } catch (exception) {
        H.unwrapException(exception);
        milliseconds = C.JSInt_methods._tdivFast$1(C.Duration_0._duration, 1000);
        H.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, P._asyncRunCallback$closure());
        throw exception;
      }

    }
    $._callbacksAreEnqueued = false;
  }, "call$0", "_asyncRunCallback$closure", 0, 0, 0],
  _scheduleAsyncCallback: function(callback) {
    $.get$_asyncCallbacks()._add$1(callback);
    if (!$._callbacksAreEnqueued) {
      P._createTimer(C.Duration_0, P._asyncRunCallback$closure());
      $._callbacksAreEnqueued = true;
    }
  },
  scheduleMicrotask: function(callback) {
    var t1 = $.Zone__current;
    if (t1 === C.C__RootZone) {
      t1.toString;
      P._rootScheduleMicrotask(t1, null, t1, callback);
      return;
    }
    P._rootScheduleMicrotask(t1, null, t1, t1.bindCallback$2$runGuarded(callback, true));
  },
  StreamController_StreamController: function(onCancel, onListen, onPause, onResume, sync, $T) {
    return sync ? H.setRuntimeTypeInfo(new P._SyncStreamController(onListen, onPause, onResume, onCancel, null, 0, null), [$T]) : H.setRuntimeTypeInfo(new P._AsyncStreamController(onListen, onPause, onResume, onCancel, null, 0, null), [$T]);
  },
  _runGuarded: function(notificationHandler) {
    var result, e, s, t1, t2, exception;
    if (notificationHandler == null)
      return;
    try {
      result = notificationHandler.call$0();
      t1 = result;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isFuture)
        return result;
      return;
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      t1 = $.Zone__current;
      t1.toString;
      P._rootHandleUncaughtError(t1, null, t1, e, s);
    }

  },
  _nullDataHandler: [function(value) {
  }, "call$1", "_nullDataHandler$closure", 2, 0, 1],
  _nullErrorHandler: [function(error, stackTrace) {
    var t1 = $.Zone__current;
    t1.toString;
    P._rootHandleUncaughtError(t1, null, t1, error, stackTrace);
  }, function(error) {
    return P._nullErrorHandler(error, null);
  }, null, "call$2", "call$1", "_nullErrorHandler$closure", 2, 2, 2, 3],
  _nullDoneHandler: [function() {
    return;
  }, "call$0", "_nullDoneHandler$closure", 0, 0, 0],
  _runUserCode: function(userCode, onSuccess, onError) {
    var e, s, exception, t1;
    try {
      onSuccess.call$1(userCode.call$0());
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      onError.call$2(e, s);
    }

  },
  _cancelAndError: function(subscription, future, error, stackTrace) {
    var cancelFuture, t1;
    cancelFuture = subscription.cancel$0();
    t1 = J.getInterceptor(cancelFuture);
    if (typeof cancelFuture === "object" && cancelFuture !== null && !!t1.$isFuture)
      cancelFuture.whenComplete$1(new P._cancelAndError_closure(future, error, stackTrace));
    else
      future._completeError$2(error, stackTrace);
  },
  _cancelAndErrorClosure: function(subscription, future) {
    return new P._cancelAndErrorClosure_closure(subscription, future);
  },
  Timer_Timer: function(duration, callback) {
    var t1 = $.Zone__current;
    if (t1 === C.C__RootZone) {
      t1.toString;
      return P._rootCreateTimer(t1, null, t1, duration, callback);
    }
    return P._rootCreateTimer(t1, null, t1, duration, t1.bindCallback$2$runGuarded(callback, true));
  },
  _createTimer: function(duration, callback) {
    var milliseconds = C.JSInt_methods._tdivFast$1(duration._duration, 1000);
    return H.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
  },
  _rootHandleUncaughtError: function($self, $parent, zone, error, stackTrace) {
    P._rootRun($self, null, $self, new P._rootHandleUncaughtError_closure(error, stackTrace));
  },
  _rootRun: function($self, $parent, zone, f) {
    var old, t1, t2;
    t1 = $.Zone__current;
    t2 = zone;
    if (t1 == null ? t2 == null : t1 === t2)
      return f.call$0();
    old = t1;
    try {
      $.Zone__current = zone;
      t1 = f.call$0();
      return t1;
    } finally {
      $.Zone__current = old;
    }
  },
  _rootRunUnary: function($self, $parent, zone, f, arg) {
    var old, t1, t2;
    t1 = $.Zone__current;
    t2 = zone;
    if (t1 == null ? t2 == null : t1 === t2)
      return f.call$1(arg);
    old = t1;
    try {
      $.Zone__current = zone;
      t1 = f.call$1(arg);
      return t1;
    } finally {
      $.Zone__current = old;
    }
  },
  _rootScheduleMicrotask: function($self, $parent, zone, f) {
    P._scheduleAsyncCallback(C.C__RootZone !== zone ? zone.bindCallback$1(f) : f);
  },
  _rootCreateTimer: function($self, $parent, zone, duration, callback) {
    return P._createTimer(duration, C.C__RootZone !== zone ? zone.bindCallback$1(callback) : callback);
  },
  _AsyncError: {
    "": "Object;error>,stackTrace<",
    $isError: true
  },
  Future: {
    "": "Object;",
    $isFuture: true
  },
  Future_wait_handleError: {
    "": "Closure:10;box_0,eagerError_1",
    call$2: function(theError, theStackTrace) {
      var t1, t2, remaining;
      t1 = this.box_0;
      t2 = t1.values_1;
      t1.values_1 = null;
      remaining = t1.remaining_2 - 1;
      t1.remaining_2 = remaining;
      if (t2 != null)
        if (remaining === 0 || this.eagerError_1)
          t1.completer_0.completeError$2(theError, theStackTrace);
        else {
          t1.error_3 = theError;
          t1.stackTrace_4 = theStackTrace;
        }
      else if (remaining === 0 && !this.eagerError_1)
        t1.completer_0.completeError$2(t1.error_3, t1.stackTrace_4);
    }
  },
  Future_wait_closure: {
    "": "Closure:14;box_0,eagerError_2,pos_3",
    call$1: function(value) {
      var t1, remaining, t2, t3;
      t1 = this.box_0;
      remaining = t1.remaining_2 - 1;
      t1.remaining_2 = remaining;
      t2 = t1.values_1;
      if (t2 != null) {
        t3 = this.pos_3;
        if (t3 < 0 || t3 >= t2.length)
          return H.ioore(t2, t3);
        t2[t3] = value;
        if (remaining === 0) {
          t1 = t1.completer_0.future;
          if (t1._state !== 0)
            H.throwExpression(P.StateError$("Future already completed"));
          t1._asyncComplete$1(t2);
        }
      } else if (remaining === 0 && !this.eagerError_2)
        t1.completer_0.completeError$2(t1.error_3, t1.stackTrace_4);
    }
  },
  _Completer: {
    "": "Object;"
  },
  _AsyncCompleter: {
    "": "_Completer;future",
    completeError$2: function(error, stackTrace) {
      var t1;
      if (error == null)
        throw H.wrapException(new P.ArgumentError("Error must not be null"));
      t1 = this.future;
      if (t1._state !== 0)
        throw H.wrapException(P.StateError$("Future already completed"));
      t1._asyncCompleteError$2(error, stackTrace);
    },
    $as_Completer: null
  },
  _Future: {
    "": "Object;_state,_zone<,_resultOrListeners,_nextListener<,_onValueCallback,_errorTestCallback,_onErrorCallback,_whenCompleteActionCallback",
    get$_isComplete: function() {
      return this._state >= 4;
    },
    get$_hasError: function() {
      return this._state === 8;
    },
    set$_isChained: function(value) {
      if (value)
        this._state = 2;
      else
        this._state = 0;
    },
    get$_onValue: function() {
      return this._state === 2 ? null : this._onValueCallback;
    },
    _onValue$1: function(arg0) {
      return this.get$_onValue().call$1(arg0);
    },
    get$_whenCompleteAction: function() {
      return this._state === 2 ? null : this._whenCompleteActionCallback;
    },
    _whenCompleteAction$0: function() {
      return this.get$_whenCompleteAction().call$0();
    },
    then$2$onError: function(f, onError) {
      var t1, result;
      t1 = $.Zone__current;
      t1.toString;
      result = H.setRuntimeTypeInfo(new P._Future(0, t1, null, null, f, null, P._registerErrorHandler(onError, t1), null), [null]);
      this._addListener$1(result);
      return result;
    },
    then$1: function(f) {
      return this.then$2$onError(f, null);
    },
    whenComplete$1: function(action) {
      var t1, result;
      t1 = $.Zone__current;
      t1.toString;
      result = new P._Future(0, t1, null, null, null, null, null, action);
      result.$builtinTypeInfo = this.$builtinTypeInfo;
      this._addListener$1(result);
      return result;
    },
    get$_value: function() {
      return this._resultOrListeners;
    },
    get$_error: function() {
      return this._resultOrListeners;
    },
    _setValue$1: function(value) {
      this._state = 4;
      this._resultOrListeners = value;
    },
    _setError$2: function(error, stackTrace) {
      this._state = 8;
      this._resultOrListeners = new P._AsyncError(error, stackTrace);
    },
    _addListener$1: function(listener) {
      var t1;
      if (this._state >= 4) {
        t1 = this._zone;
        t1.toString;
        P._rootScheduleMicrotask(t1, null, t1, new P._Future__addListener_closure(this, listener));
      } else {
        listener._nextListener = this._resultOrListeners;
        this._resultOrListeners = listener;
      }
    },
    _removeListeners$0: function() {
      var current, prev, next;
      current = this._resultOrListeners;
      this._resultOrListeners = null;
      for (prev = null; current != null; prev = current, current = next) {
        next = current.get$_nextListener();
        current._nextListener = prev;
      }
      return prev;
    },
    _complete$1: function(value) {
      var t1, listeners;
      t1 = J.getInterceptor(value);
      if (typeof value === "object" && value !== null && !!t1.$isFuture) {
        P._Future__chainFutures(value, this);
        return;
      }
      listeners = this._removeListeners$0();
      this._setValue$1(value);
      P._Future__propagateToListeners(this, listeners);
    },
    _completeError$2: [function(error, stackTrace) {
      var listeners = this._removeListeners$0();
      this._setError$2(error, stackTrace);
      P._Future__propagateToListeners(this, listeners);
    }, function(error) {
      return this._completeError$2(error, null);
    }, "_completeError$1", "call$2", "call$1", "get$_completeError", 2, 2, 2, 3],
    _asyncComplete$1: function(value) {
      var t1;
      if (this._state !== 0)
        H.throwExpression(P.StateError$("Future already completed"));
      this._state = 1;
      t1 = this._zone;
      t1.toString;
      P._rootScheduleMicrotask(t1, null, t1, new P._Future__asyncComplete_closure(this, value));
    },
    _asyncCompleteError$2: function(error, stackTrace) {
      var t1;
      if (this._state !== 0)
        H.throwExpression(P.StateError$("Future already completed"));
      this._state = 1;
      t1 = this._zone;
      t1.toString;
      P._rootScheduleMicrotask(t1, null, t1, new P._Future__asyncCompleteError_closure(this, error, stackTrace));
    },
    _async$_Future$immediate$1: function(value, $T) {
      this._asyncComplete$1(value);
    },
    $is_Future: true,
    $isFuture: true,
    static: {"": "_Future__INCOMPLETE,_Future__PENDING_COMPLETE,_Future__CHAINED,_Future__VALUE,_Future__ERROR", _Future$: function($T) {
        return H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null, null, null, null, null, null), [$T]);
      }, _Future__chainFutures: function(source, target) {
        var t1;
        target._state = 2;
        t1 = J.getInterceptor(source);
        if (typeof source === "object" && source !== null && !!t1.$is_Future)
          if (source._state >= 4)
            P._Future__propagateToListeners(source, target);
          else
            source._addListener$1(target);
        else
          source.then$2$onError(new P._Future__chainFutures_closure(target), new P._Future__chainFutures_closure0(target));
      }, _Future__propagateMultipleListeners: function(source, listeners) {
        var listeners0;
        do {
          listeners0 = listeners.get$_nextListener();
          listeners._nextListener = null;
          P._Future__propagateToListeners(source, listeners);
          if (listeners0 != null) {
            listeners = listeners0;
            continue;
          } else
            break;
        } while (true);
      }, _Future__propagateToListeners: function(source, listeners) {
        var t1, t2, t3, hasError, asyncError, t4, t5, chainSource, listeners0;
        t1 = {};
        t1.source_4 = source;
        for (t2 = source; true;) {
          t3 = {};
          if (!t2.get$_isComplete())
            return;
          hasError = t1.source_4.get$_hasError();
          if (hasError && listeners == null) {
            t2 = t1.source_4;
            asyncError = t2.get$_error();
            t2 = t2._zone;
            t3 = J.get$error$x(asyncError);
            t4 = asyncError.get$stackTrace();
            t2.toString;
            P._rootHandleUncaughtError(t2, null, t2, t3, t4);
            return;
          }
          if (listeners == null)
            return;
          if (listeners._nextListener != null) {
            P._Future__propagateMultipleListeners(t1.source_4, listeners);
            return;
          }
          if (hasError) {
            t2 = t1.source_4.get$_zone();
            t4 = listeners._zone;
            t2.toString;
            t4.toString;
            t2 = t4 == null ? t2 != null : t4 !== t2;
          } else
            t2 = false;
          if (t2) {
            t2 = t1.source_4;
            asyncError = t2.get$_error();
            t2 = t2._zone;
            t3 = J.get$error$x(asyncError);
            t4 = asyncError.get$stackTrace();
            t2.toString;
            P._rootHandleUncaughtError(t2, null, t2, t3, t4);
            return;
          }
          t2 = $.Zone__current;
          t4 = listeners._zone;
          if (t2 == null ? t4 != null : t2 !== t4) {
            t4.toString;
            P._rootRun(t4, null, t4, new P._Future__propagateToListeners_closure(t1, listeners));
            return;
          }
          t3.listenerHasValue_1 = null;
          t3.listenerValueOrError_2 = null;
          t3.isPropagationAborted_3 = false;
          t4.toString;
          P._rootRun(t4, null, t4, new P._Future__propagateToListeners_closure0(t1, t3, hasError, listeners));
          if (t3.isPropagationAborted_3)
            return;
          t2 = t3.listenerHasValue_1 === true;
          if (t2) {
            t4 = t3.listenerValueOrError_2;
            t5 = J.getInterceptor(t4);
            t5 = typeof t4 === "object" && t4 !== null && !!t5.$isFuture;
            t4 = t5;
          } else
            t4 = false;
          if (t4) {
            chainSource = t3.listenerValueOrError_2;
            t2 = J.getInterceptor(chainSource);
            if (typeof chainSource === "object" && chainSource !== null && !!t2.$is_Future && chainSource._state >= 4) {
              listeners._state = 2;
              t1.source_4 = chainSource;
              t2 = chainSource;
              continue;
            }
            P._Future__chainFutures(chainSource, listeners);
            return;
          }
          if (t2) {
            listeners0 = listeners._removeListeners$0();
            t2 = t3.listenerValueOrError_2;
            listeners._state = 4;
            listeners._resultOrListeners = t2;
          } else {
            listeners0 = listeners._removeListeners$0();
            asyncError = t3.listenerValueOrError_2;
            t2 = J.get$error$x(asyncError);
            t3 = asyncError.get$stackTrace();
            listeners._state = 8;
            listeners._resultOrListeners = new P._AsyncError(t2, t3);
          }
          t1.source_4 = listeners;
          t2 = listeners;
          listeners = listeners0;
        }
      }}
  },
  _Future__addListener_closure: {
    "": "Closure:9;this_0,listener_1",
    call$0: function() {
      P._Future__propagateToListeners(this.this_0, this.listener_1);
    }
  },
  _Future__chainFutures_closure: {
    "": "Closure:11;target_0",
    call$1: function(value) {
      this.target_0._complete$1(value);
    }
  },
  _Future__chainFutures_closure0: {
    "": "Closure:15;target_1",
    call$2: function(error, stackTrace) {
      this.target_1._completeError$2(error, stackTrace);
    },
    call$1: function(error) {
      return this.call$2(error, null);
    }
  },
  _Future__asyncComplete_closure: {
    "": "Closure:9;this_0,value_1",
    call$0: function() {
      this.this_0._complete$1(this.value_1);
    }
  },
  _Future__asyncCompleteError_closure: {
    "": "Closure:9;this_0,error_1,stackTrace_2",
    call$0: function() {
      this.this_0._completeError$2(this.error_1, this.stackTrace_2);
    }
  },
  _Future__propagateToListeners_closure: {
    "": "Closure:9;box_2,listener_3",
    call$0: function() {
      P._Future__propagateToListeners(this.box_2.source_4, this.listener_3);
    }
  },
  _Future__propagateToListeners_closure0: {
    "": "Closure:9;box_2,box_1,hasError_4,listener_5",
    call$0: function() {
      var t1, value, asyncError, test, matchesTest, errorCallback, e, s, t2, t3, t4, t5, completeResult, exception;
      t1 = {};
      try {
        t2 = this.box_2;
        if (!this.hasError_4) {
          value = t2.source_4.get$_value();
          t3 = this.listener_5;
          t4 = t3._state === 2 ? null : t3._onValueCallback;
          t5 = this.box_1;
          if (t4 != null) {
            t5.listenerValueOrError_2 = t3._onValue$1(value);
            t5.listenerHasValue_1 = true;
          } else {
            t5.listenerValueOrError_2 = value;
            t5.listenerHasValue_1 = true;
          }
          t4 = t5;
        } else {
          asyncError = t2.source_4.get$_error();
          t3 = this.listener_5;
          test = t3._state === 2 ? null : t3._errorTestCallback;
          matchesTest = true;
          if (test != null)
            matchesTest = test.call$1(J.get$error$x(asyncError));
          if (matchesTest === true)
            t4 = (t3._state === 2 ? null : t3._onErrorCallback) != null;
          else
            t4 = false;
          if (t4) {
            errorCallback = t3._state === 2 ? null : t3._onErrorCallback;
            t4 = this.box_1;
            t4.listenerValueOrError_2 = P._invokeErrorHandler(errorCallback, J.get$error$x(asyncError), asyncError.get$stackTrace());
            t4.listenerHasValue_1 = true;
          } else {
            t4 = this.box_1;
            t4.listenerValueOrError_2 = asyncError;
            t4.listenerHasValue_1 = false;
          }
        }
        if ((t3._state === 2 ? null : t3._whenCompleteActionCallback) != null) {
          completeResult = t3._whenCompleteAction$0();
          t1.completeResult_0 = completeResult;
          t5 = J.getInterceptor(completeResult);
          if (typeof completeResult === "object" && completeResult !== null && !!t5.$isFuture) {
            t3.set$_isChained(true);
            t1.completeResult_0.then$2$onError(new P._Future__propagateToListeners__closure(t2, t3), new P._Future__propagateToListeners__closure0(t1, t3));
            t4.isPropagationAborted_3 = true;
          }
        }
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        if (this.hasError_4) {
          t1 = J.get$error$x(this.box_2.source_4.get$_error());
          t2 = e;
          t2 = t1 == null ? t2 == null : t1 === t2;
          t1 = t2;
        } else
          t1 = false;
        t2 = this.box_1;
        if (t1)
          t2.listenerValueOrError_2 = this.box_2.source_4.get$_error();
        else
          t2.listenerValueOrError_2 = new P._AsyncError(e, s);
        t2.listenerHasValue_1 = false;
      }

    }
  },
  _Future__propagateToListeners__closure: {
    "": "Closure:11;box_2,listener_6",
    call$1: function(ignored) {
      P._Future__propagateToListeners(this.box_2.source_4, this.listener_6);
    }
  },
  _Future__propagateToListeners__closure0: {
    "": "Closure:15;box_0,listener_7",
    call$2: function(error, stackTrace) {
      var t1, t2, t3, completeResult;
      t1 = this.box_0;
      t2 = t1.completeResult_0;
      t3 = J.getInterceptor(t2);
      if (typeof t2 !== "object" || t2 === null || !t3.$is_Future) {
        completeResult = P._Future$(null);
        t1.completeResult_0 = completeResult;
        completeResult._setError$2(error, stackTrace);
      }
      P._Future__propagateToListeners(t1.completeResult_0, this.listener_7);
    },
    call$1: function(error) {
      return this.call$2(error, null);
    }
  },
  Stream: {
    "": "Object;",
    forEach$1: function(_, action) {
      var t1, future;
      t1 = {};
      future = P._Future$(null);
      t1.subscription_0 = null;
      t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_forEach_closure(t1, this, action, future), true, new P.Stream_forEach_closure0(future), future.get$_completeError());
      return future;
    },
    get$length: function(_) {
      var t1, future;
      t1 = {};
      future = P._Future$(J.JSInt);
      t1.count_0 = 0;
      this.listen$4$cancelOnError$onDone$onError(new P.Stream_length_closure(t1), true, new P.Stream_length_closure0(t1, future), future.get$_completeError());
      return future;
    }
  },
  Stream_forEach_closure: {
    "": "Closure;box_0,this_1,action_2,future_3",
    call$1: function(element) {
      P._runUserCode(new P.Stream_forEach__closure(this.action_2, element), new P.Stream_forEach__closure0(), P._cancelAndErrorClosure(this.box_0.subscription_0, this.future_3));
    },
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  Stream_forEach__closure: {
    "": "Closure:9;action_4,element_5",
    call$0: function() {
      return this.action_4.call$1(this.element_5);
    }
  },
  Stream_forEach__closure0: {
    "": "Closure:11;",
    call$1: function(_) {
    }
  },
  Stream_forEach_closure0: {
    "": "Closure:9;future_6",
    call$0: function() {
      this.future_6._complete$1(null);
    }
  },
  Stream_length_closure: {
    "": "Closure:11;box_0",
    call$1: function(_) {
      var t1 = this.box_0;
      t1.count_0 = t1.count_0 + 1;
    }
  },
  Stream_length_closure0: {
    "": "Closure:9;box_0,future_1",
    call$0: function() {
      this.future_1._complete$1(this.box_0.count_0);
    }
  },
  StreamSubscription: {
    "": "Object;"
  },
  _StreamController: {
    "": "Object;",
    get$_pendingEvents: function() {
      if ((this._state & 8) === 0)
        return this._varData;
      return this._varData.get$varData();
    },
    _ensurePendingEvents$0: function() {
      if ((this._state & 8) === 0) {
        var t1 = this._varData;
        if (t1 == null) {
          t1 = new P._StreamImplEvents(null, null, 0);
          this._varData = t1;
        }
        return t1;
      }
      t1 = this._varData.get$varData();
      return t1;
    },
    get$_subscription: function() {
      if ((this._state & 8) !== 0)
        return this._varData.get$varData();
      return this._varData;
    },
    _badEventState$0: function() {
      if ((this._state & 4) !== 0)
        return new P.StateError("Cannot add event after closing");
      return new P.StateError("Cannot add event while adding a stream");
    },
    add$1: [function(_, value) {
      var t1 = this._state;
      if (t1 >= 4)
        throw H.wrapException(this._badEventState$0());
      if ((t1 & 1) !== 0)
        this._sendData$1(value);
      else if ((t1 & 3) === 0) {
        t1 = this._ensurePendingEvents$0();
        t1.add$1(t1, new P._DelayedData(value, null));
      }
    }, "call$1", "get$add", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T", void: true, args: [T]};
      }, this.$receiver, "_StreamController");
    }],
    close$0: function(_) {
      var t1, t2;
      t1 = this._state;
      if ((t1 & 4) !== 0)
        return this._doneFuture;
      if (t1 >= 4)
        throw H.wrapException(this._badEventState$0());
      t1 |= 4;
      this._state = t1;
      if (this._doneFuture == null) {
        t2 = P._Future$(null);
        this._doneFuture = t2;
        if ((t1 & 2) !== 0)
          t2._complete$1(null);
      }
      t1 = this._state;
      if ((t1 & 1) !== 0)
        this._sendDone$0();
      else if ((t1 & 3) === 0) {
        t1 = this._ensurePendingEvents$0();
        t1.add$1(t1, C.C__DelayedDone);
      }
      return this._doneFuture;
    },
    _subscribe$1: function(cancelOnError) {
      var t1, t2, subscription, pendingEvents, addState;
      if ((this._state & 3) !== 0)
        throw H.wrapException(new P.StateError("Stream has already been listened to."));
      t1 = $.Zone__current;
      t2 = cancelOnError ? 1 : 0;
      subscription = H.setRuntimeTypeInfo(new P._ControllerSubscription(this, null, null, null, t1, t2, null, null), [null]);
      pendingEvents = this.get$_pendingEvents();
      t2 = this._state | 1;
      this._state = t2;
      if ((t2 & 8) !== 0) {
        addState = this._varData;
        addState.set$varData(subscription);
        addState.resume$0();
      } else
        this._varData = subscription;
      subscription._setPendingEvents$1(pendingEvents);
      subscription._guardCallback$1(new P._StreamController__subscribe_closure(this));
      return subscription;
    },
    _recordCancel$1: function(subscription) {
      var t1, future;
      if ((this._state & 8) !== 0)
        this._varData.cancel$0();
      this._varData = null;
      this._state = this._state & 4294967286 | 2;
      t1 = new P._StreamController__recordCancel_complete(this);
      future = P._runGuarded(this.get$_onCancel());
      if (future != null)
        future = future.whenComplete$1(t1);
      else
        t1.call$0();
      return future;
    }
  },
  _StreamController__subscribe_closure: {
    "": "Closure:9;this_0",
    call$0: function() {
      P._runGuarded(this.this_0.get$_onListen());
    }
  },
  _StreamController__recordCancel_complete: {
    "": "Closure:0;this_0",
    call$0: function() {
      var t1 = this.this_0._doneFuture;
      if (t1 != null && t1._state === 0)
        t1._asyncComplete$1(null);
    }
  },
  _SyncStreamControllerDispatch: {
    "": "Object;",
    _sendData$1: function(data) {
      this.get$_subscription()._async$_add$1(data);
    },
    _sendDone$0: function() {
      this.get$_subscription()._close$0();
    }
  },
  _AsyncStreamControllerDispatch: {
    "": "Object;",
    _sendData$1: function(data) {
      this.get$_subscription()._addPending$1(new P._DelayedData(data, null));
    },
    _sendDone$0: function() {
      this.get$_subscription()._addPending$1(C.C__DelayedDone);
    }
  },
  _AsyncStreamController: {
    "": "_StreamController__AsyncStreamControllerDispatch;_onListen<,_onPause<,_onResume<,_onCancel<,_varData,_state,_doneFuture",
    $as_StreamController__AsyncStreamControllerDispatch: null
  },
  _StreamController__AsyncStreamControllerDispatch: {
    "": "_StreamController+_AsyncStreamControllerDispatch;",
    $as_StreamController: null
  },
  _SyncStreamController: {
    "": "_StreamController__SyncStreamControllerDispatch;_onListen<,_onPause<,_onResume<,_onCancel<,_varData,_state,_doneFuture",
    $as_StreamController__SyncStreamControllerDispatch: null
  },
  _StreamController__SyncStreamControllerDispatch: {
    "": "_StreamController+_SyncStreamControllerDispatch;",
    $as_StreamController: null
  },
  _ControllerStream: {
    "": "_StreamImpl;_async$_controller",
    _createSubscription$1: function(cancelOnError) {
      return this._async$_controller._subscribe$1(cancelOnError);
    },
    get$hashCode: function(_) {
      return (H.Primitives_objectHashCode(this._async$_controller) ^ 892482866) >>> 0;
    },
    $eq: function(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this === other)
        return true;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$is_ControllerStream)
        return false;
      return other._async$_controller === this._async$_controller;
    },
    $is_ControllerStream: true,
    $as_StreamImpl: null
  },
  _ControllerSubscription: {
    "": "_BufferingStreamSubscription;_async$_controller,_async$_onData,_onError,_onDone,_zone,_state,_cancelFuture,_pending",
    _onCancel$0: function() {
      return this._async$_controller._recordCancel$1(this);
    },
    _onPause$0: [function() {
      var t1, addState;
      t1 = this._async$_controller;
      if ((t1._state & 8) !== 0) {
        addState = t1._varData;
        addState.pause$0(addState);
      }
      P._runGuarded(t1.get$_onPause());
    }, "call$0", "get$_onPause", 0, 0, 0],
    _onResume$0: [function() {
      var t1 = this._async$_controller;
      if ((t1._state & 8) !== 0)
        t1._varData.resume$0();
      P._runGuarded(t1.get$_onResume());
    }, "call$0", "get$_onResume", 0, 0, 0],
    $as_BufferingStreamSubscription: null
  },
  _EventSink: {
    "": "Object;"
  },
  _BufferingStreamSubscription: {
    "": "Object;_async$_onData,_onError,_onDone,_zone<,_state,_cancelFuture,_pending",
    _setPendingEvents$1: function(pendingEvents) {
      if (pendingEvents == null)
        return;
      this._pending = pendingEvents;
      if (!pendingEvents.get$isEmpty(pendingEvents)) {
        this._state = (this._state | 64) >>> 0;
        pendingEvents.schedule$1(this);
      }
    },
    onData$1: function(handleData) {
      this._zone.toString;
      this._async$_onData = handleData;
    },
    onError$1: function(_, handleError) {
      this._onError = P._registerErrorHandler(handleError, this._zone);
    },
    onDone$1: function(handleDone) {
      this._zone.toString;
      this._onDone = handleDone;
    },
    pause$1: function(_, resumeSignal) {
      var t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      this._state = (t1 + 128 | 4) >>> 0;
      if (t1 < 128 && this._pending != null)
        this._pending.cancelSchedule$0();
      if ((t1 & 4) === 0 && (this._state & 32) === 0)
        this._guardCallback$1(this.get$_onPause());
    },
    pause$0: function($receiver) {
      return this.pause$1($receiver, null);
    },
    resume$0: function() {
      var t1, t2;
      t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 >= 128) {
        t1 -= 128;
        this._state = t1;
        if (t1 < 128) {
          if ((t1 & 64) !== 0) {
            t2 = this._pending;
            t2 = !t2.get$isEmpty(t2);
          } else
            t2 = false;
          if (t2)
            this._pending.schedule$1(this);
          else {
            t1 = (t1 & 4294967291) >>> 0;
            this._state = t1;
            if ((t1 & 32) === 0)
              this._guardCallback$1(this.get$_onResume());
          }
        }
      }
    },
    cancel$0: function() {
      var t1 = (this._state & 4294967279) >>> 0;
      this._state = t1;
      if ((t1 & 8) !== 0)
        return this._cancelFuture;
      this._cancel$0();
      return this._cancelFuture;
    },
    _cancel$0: function() {
      var t1 = (this._state | 8) >>> 0;
      this._state = t1;
      if ((t1 & 64) !== 0)
        this._pending.cancelSchedule$0();
      if ((this._state & 32) === 0)
        this._pending = null;
      this._cancelFuture = this._onCancel$0();
    },
    _async$_add$1: function(data) {
      var t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 < 32)
        this._sendData$1(data);
      else
        this._addPending$1(new P._DelayedData(data, null));
    },
    _close$0: function() {
      var t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      t1 = (t1 | 2) >>> 0;
      this._state = t1;
      if (t1 < 32)
        this._sendDone$0();
      else
        this._addPending$1(C.C__DelayedDone);
    },
    _onPause$0: [function() {
    }, "call$0", "get$_onPause", 0, 0, 0],
    _onResume$0: [function() {
    }, "call$0", "get$_onResume", 0, 0, 0],
    _onCancel$0: function() {
    },
    _addPending$1: function($event) {
      var pending, t1;
      pending = this._pending;
      if (pending == null) {
        pending = new P._StreamImplEvents(null, null, 0);
        this._pending = pending;
      }
      pending.add$1(pending, $event);
      t1 = this._state;
      if ((t1 & 64) === 0) {
        t1 = (t1 | 64) >>> 0;
        this._state = t1;
        if (t1 < 128)
          this._pending.schedule$1(this);
      }
    },
    _sendData$1: function(data) {
      var t1 = this._state;
      this._state = (t1 | 32) >>> 0;
      this._zone.runUnaryGuarded$2(this._async$_onData, data);
      this._state = (this._state & 4294967263) >>> 0;
      this._checkState$1((t1 & 4) !== 0);
    },
    _sendDone$0: function() {
      var t1, t2, t3;
      t1 = new P._BufferingStreamSubscription__sendDone_sendDone(this);
      this._cancel$0();
      this._state = (this._state | 16) >>> 0;
      t2 = this._cancelFuture;
      t3 = J.getInterceptor(t2);
      if (typeof t2 === "object" && t2 !== null && !!t3.$isFuture)
        t2.whenComplete$1(t1);
      else
        t1.call$0();
    },
    _guardCallback$1: function(callback) {
      var t1 = this._state;
      this._state = (t1 | 32) >>> 0;
      callback.call$0();
      this._state = (this._state & 4294967263) >>> 0;
      this._checkState$1((t1 & 4) !== 0);
    },
    _checkState$1: function(wasInputPaused) {
      var t1, t2, isInputPaused;
      t1 = this._state;
      if ((t1 & 64) !== 0) {
        t2 = this._pending;
        t2 = t2.get$isEmpty(t2);
      } else
        t2 = false;
      if (t2) {
        t1 = (t1 & 4294967231) >>> 0;
        this._state = t1;
        if ((t1 & 4) !== 0)
          if (t1 < 128) {
            t2 = this._pending;
            t2 = t2 == null || t2.get$isEmpty(t2);
          } else
            t2 = false;
        else
          t2 = false;
        if (t2) {
          t1 = (t1 & 4294967291) >>> 0;
          this._state = t1;
        }
      }
      for (; true; wasInputPaused = isInputPaused) {
        if ((t1 & 8) !== 0) {
          this._pending = null;
          return;
        }
        isInputPaused = (t1 & 4) !== 0;
        if (wasInputPaused === isInputPaused)
          break;
        this._state = (t1 ^ 32) >>> 0;
        if (isInputPaused)
          this._onPause$0();
        else
          this._onResume$0();
        t1 = (this._state & 4294967263) >>> 0;
        this._state = t1;
      }
      if ((t1 & 64) !== 0 && t1 < 128)
        this._pending.schedule$1(this);
    },
    static: {"": "_BufferingStreamSubscription__STATE_CANCEL_ON_ERROR,_BufferingStreamSubscription__STATE_CLOSED,_BufferingStreamSubscription__STATE_INPUT_PAUSED,_BufferingStreamSubscription__STATE_CANCELED,_BufferingStreamSubscription__STATE_WAIT_FOR_CANCEL,_BufferingStreamSubscription__STATE_IN_CALLBACK,_BufferingStreamSubscription__STATE_HAS_PENDING,_BufferingStreamSubscription__STATE_PAUSE_COUNT,_BufferingStreamSubscription__STATE_PAUSE_COUNT_SHIFT"}
  },
  _BufferingStreamSubscription__sendDone_sendDone: {
    "": "Closure:0;this_0",
    call$0: function() {
      var t1, t2;
      t1 = this.this_0;
      t2 = t1._state;
      if ((t2 & 16) === 0)
        return;
      t1._state = (t2 | 42) >>> 0;
      t1._zone.runGuarded$1(t1._onDone);
      t1._state = (t1._state & 4294967263) >>> 0;
    }
  },
  _StreamImpl: {
    "": "Stream;",
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      var subscription = this._createSubscription$1(true === cancelOnError);
      subscription.onData$1(onData);
      subscription.onError$1(subscription, onError);
      subscription.onDone$1(onDone);
      return subscription;
    },
    _createSubscription$1: function(cancelOnError) {
      var t1, t2;
      t1 = $.Zone__current;
      t2 = cancelOnError ? 1 : 0;
      return new P._BufferingStreamSubscription(null, null, null, t1, t2, null, null);
    },
    $asStream: null
  },
  _DelayedEvent: {
    "": "Object;next@"
  },
  _DelayedData: {
    "": "_DelayedEvent;value,next",
    perform$1: function(dispatch) {
      dispatch._sendData$1(this.value);
    }
  },
  _DelayedDone: {
    "": "Object;",
    perform$1: function(dispatch) {
      dispatch._sendDone$0();
    },
    get$next: function() {
      return;
    },
    set$next: function(_) {
      throw H.wrapException(P.StateError$("No events after a done."));
    }
  },
  _PendingEvents: {
    "": "Object;",
    schedule$1: function(dispatch) {
      var t1 = this._state;
      if (t1 === 1)
        return;
      if (t1 >= 1) {
        this._state = 1;
        return;
      }
      P.scheduleMicrotask(new P._PendingEvents_schedule_closure(this, dispatch));
      this._state = 1;
    },
    cancelSchedule$0: function() {
      if (this._state === 1)
        this._state = 3;
    }
  },
  _PendingEvents_schedule_closure: {
    "": "Closure:9;this_0,dispatch_1",
    call$0: function() {
      var t1, oldState;
      t1 = this.this_0;
      oldState = t1._state;
      t1._state = 0;
      if (oldState === 3)
        return;
      t1.handleNext$1(this.dispatch_1);
    }
  },
  _StreamImplEvents: {
    "": "_PendingEvents;firstPendingEvent,lastPendingEvent,_state",
    get$isEmpty: function(_) {
      return this.lastPendingEvent == null;
    },
    add$1: function(_, $event) {
      var t1 = this.lastPendingEvent;
      if (t1 == null) {
        this.lastPendingEvent = $event;
        this.firstPendingEvent = $event;
      } else {
        t1.set$next($event);
        this.lastPendingEvent = $event;
      }
    },
    handleNext$1: function(dispatch) {
      var $event, t1;
      $event = this.firstPendingEvent;
      t1 = $event.get$next();
      this.firstPendingEvent = t1;
      if (t1 == null)
        this.lastPendingEvent = null;
      $event.perform$1(dispatch);
    }
  },
  _cancelAndError_closure: {
    "": "Closure:9;future_0,error_1,stackTrace_2",
    call$0: function() {
      return this.future_0._completeError$2(this.error_1, this.stackTrace_2);
    }
  },
  _cancelAndErrorClosure_closure: {
    "": "Closure:16;subscription_0,future_1",
    call$2: function(error, stackTrace) {
      return P._cancelAndError(this.subscription_0, this.future_1, error, stackTrace);
    }
  },
  _BaseZone: {
    "": "Object;",
    runGuarded$1: function(f) {
      var e, s, t1, exception;
      try {
        t1 = this.run$1(f);
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        return this.handleUncaughtError$2(e, s);
      }

    },
    runUnaryGuarded$2: function(f, arg) {
      var e, s, t1, exception;
      try {
        t1 = this.runUnary$2(f, arg);
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        return this.handleUncaughtError$2(e, s);
      }

    },
    bindCallback$2$runGuarded: function(f, runGuarded) {
      var registered = this.registerCallback$1(f);
      if (runGuarded)
        return new P._BaseZone_bindCallback_closure(this, registered);
      else
        return new P._BaseZone_bindCallback_closure0(this, registered);
    },
    bindCallback$1: function(f) {
      return this.bindCallback$2$runGuarded(f, true);
    },
    bindUnaryCallback$2$runGuarded: function(f, runGuarded) {
      var registered = this.registerUnaryCallback$1(f);
      if (runGuarded)
        return new P._BaseZone_bindUnaryCallback_closure(this, registered);
      else
        return new P._BaseZone_bindUnaryCallback_closure0(this, registered);
    }
  },
  _BaseZone_bindCallback_closure: {
    "": "Closure:9;this_0,registered_1",
    call$0: function() {
      return this.this_0.runGuarded$1(this.registered_1);
    }
  },
  _BaseZone_bindCallback_closure0: {
    "": "Closure:9;this_2,registered_3",
    call$0: function() {
      return this.this_2.run$1(this.registered_3);
    }
  },
  _BaseZone_bindUnaryCallback_closure: {
    "": "Closure:11;this_0,registered_1",
    call$1: function(arg) {
      return this.this_0.runUnaryGuarded$2(this.registered_1, arg);
    }
  },
  _BaseZone_bindUnaryCallback_closure0: {
    "": "Closure:11;this_2,registered_3",
    call$1: function(arg) {
      return this.this_2.runUnary$2(this.registered_3, arg);
    }
  },
  _rootHandleUncaughtError_closure: {
    "": "Closure:9;error_0,stackTrace_1",
    call$0: function() {
      P._scheduleAsyncCallback(new P._rootHandleUncaughtError__closure(this.error_0, this.stackTrace_1));
    }
  },
  _rootHandleUncaughtError__closure: {
    "": "Closure:9;error_2,stackTrace_3",
    call$0: function() {
      var t1, trace, t2;
      t1 = this.error_2;
      P.print("Uncaught Error: " + H.S(t1));
      trace = this.stackTrace_3;
      if (trace == null) {
        t2 = J.getInterceptor(t1);
        t2 = typeof t1 === "object" && t1 !== null && !!t2.$isError;
      } else
        t2 = false;
      if (t2)
        trace = t1.get$stackTrace();
      if (trace != null)
        P.print("Stack Trace: \n" + H.S(trace) + "\n");
      throw H.wrapException(t1);
    }
  },
  _RootZone: {
    "": "_BaseZone;",
    $index: function(_, key) {
      return;
    },
    handleUncaughtError$2: function(error, stackTrace) {
      return P._rootHandleUncaughtError(this, null, this, error, stackTrace);
    },
    run$1: function(f) {
      return P._rootRun(this, null, this, f);
    },
    runUnary$2: function(f, arg) {
      return P._rootRunUnary(this, null, this, f, arg);
    },
    registerCallback$1: function(f) {
      return f;
    },
    registerUnaryCallback$1: function(f) {
      return f;
    }
  }
}],
["dart.collection", "dart:collection", , P, {
  "": "",
  _HashSet__newHashTable: function() {
    var table = Object.create(null);
    table["<non-identifier-key>"] = table;
    delete table["<non-identifier-key>"];
    return table;
  },
  _defaultEquals: [function(a, b) {
    return J.$eq(a, b);
  }, "call$2", "_defaultEquals$closure", 4, 0, 4],
  _defaultHashCode: [function(a) {
    return J.get$hashCode$(a);
  }, "call$1", "_defaultHashCode$closure", 2, 0, 5],
  HashMap_HashMap: function(equals, hashCode, isValidKey, $K, $V) {
    return H.setRuntimeTypeInfo(new P._HashMap(0, null, null, null, null), [$K, $V]);
  },
  HashSet_HashSet$identity: function($E) {
    return H.setRuntimeTypeInfo(new P._IdentityHashSet(0, null, null, null, null), [$E]);
  },
  _iterableToString: function(iterable) {
    var parts, t1;
    t1 = $.get$_toStringVisiting();
    if (t1.contains$1(t1, iterable))
      return "(...)";
    t1 = $.get$_toStringVisiting();
    t1.add$1(t1, iterable);
    parts = [];
    try {
      P._iterablePartsToStrings(iterable, parts);
    } finally {
      t1 = $.get$_toStringVisiting();
      t1.remove$1(t1, iterable);
    }
    t1 = P.StringBuffer$("(");
    t1.writeAll$2(parts, ", ");
    t1.write$1(")");
    return t1._contents;
  },
  _iterablePartsToStrings: function(iterable, parts) {
    var it, $length, count, next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision;
    it = iterable.get$iterator(iterable);
    $length = 0;
    count = 0;
    while (true) {
      if (!($length < 80 || count < 3))
        break;
      if (!it.moveNext$0())
        return;
      next = H.S(it.get$current());
      parts.push(next);
      $length += next.length + 2;
      ++count;
    }
    if (!it.moveNext$0()) {
      if (count <= 5)
        return;
      if (0 >= parts.length)
        return H.ioore(parts, 0);
      ultimateString = parts.pop();
      if (0 >= parts.length)
        return H.ioore(parts, 0);
      penultimateString = parts.pop();
    } else {
      penultimate = it.get$current();
      ++count;
      if (!it.moveNext$0()) {
        if (count <= 4) {
          parts.push(H.S(penultimate));
          return;
        }
        ultimateString = H.S(penultimate);
        if (0 >= parts.length)
          return H.ioore(parts, 0);
        penultimateString = parts.pop();
        $length += ultimateString.length + 2;
      } else {
        ultimate = it.get$current();
        ++count;
        for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
          ultimate0 = it.get$current();
          ++count;
          if (count > 100) {
            while (true) {
              if (!($length > 75 && count > 3))
                break;
              if (0 >= parts.length)
                return H.ioore(parts, 0);
              $length -= parts.pop().length + 2;
              --count;
            }
            parts.push("...");
            return;
          }
        }
        penultimateString = H.S(penultimate);
        ultimateString = H.S(ultimate);
        $length += ultimateString.length + penultimateString.length + 4;
      }
    }
    if (count > parts.length + 2) {
      $length += 5;
      elision = "...";
    } else
      elision = null;
    while (true) {
      if (!($length > 80 && parts.length > 3))
        break;
      if (0 >= parts.length)
        return H.ioore(parts, 0);
      $length -= parts.pop().length + 2;
      if (elision == null) {
        $length += 5;
        elision = "...";
      }
    }
    if (elision != null)
      parts.push(elision);
    parts.push(penultimateString);
    parts.push(ultimateString);
  },
  LinkedHashMap_LinkedHashMap: function(equals, hashCode, isValidKey, $K, $V) {
    return H.setRuntimeTypeInfo(new P._LinkedHashMap(0, null, null, null, null, null, 0), [$K, $V]);
  },
  LinkedHashSet_LinkedHashSet: function(equals, hashCode, isValidKey, $E) {
    return H.setRuntimeTypeInfo(new P._LinkedHashSet(0, null, null, null, null, null, 0), [$E]);
  },
  Maps_mapToString: function(m) {
    var t1, result, i, t2;
    t1 = {};
    for (i = 0; t2 = $.get$Maps__toStringList(), i < t2.length; ++i)
      if (t2[i] === m)
        return "{...}";
    result = P.StringBuffer$("");
    try {
      $.get$Maps__toStringList().push(m);
      result.write$1("{");
      t1.first_0 = true;
      J.forEach$1$ax(m, new P.Maps_mapToString_closure(t1, result));
      result.write$1("}");
    } finally {
      t1 = $.get$Maps__toStringList();
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t1.pop();
    }
    return result.get$_contents();
  },
  _HashMap: {
    "": "Object;_length,_strings,_nums,_rest,_keys",
    get$length: function(_) {
      return this._length;
    },
    get$keys: function() {
      return H.setRuntimeTypeInfo(new P.HashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]);
    },
    get$values: function(_) {
      return H.MappedIterable_MappedIterable(H.setRuntimeTypeInfo(new P.HashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]), new P._HashMap_values_closure(this), H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1));
    },
    $index: function(_, key) {
      var strings, t1, entry, nums, rest, bucket, index;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null)
          t1 = null;
        else {
          entry = strings[key];
          t1 = entry === strings ? null : entry;
        }
        return t1;
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null)
          t1 = null;
        else {
          entry = nums[key];
          t1 = entry === nums ? null : entry;
        }
        return t1;
      } else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(key)];
        index = this._findBucketIndex$2(bucket, key);
        return index < 0 ? null : bucket[index + 1];
      }
    },
    $indexSet: function(_, key, value) {
      var strings, nums, rest, hash, bucket, index;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null) {
          strings = P._HashMap__newHashTable();
          this._strings = strings;
        }
        this._addHashTableEntry$3(strings, key, value);
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null) {
          nums = P._HashMap__newHashTable();
          this._nums = nums;
        }
        this._addHashTableEntry$3(nums, key, value);
      } else {
        rest = this._rest;
        if (rest == null) {
          rest = P._HashMap__newHashTable();
          this._rest = rest;
        }
        hash = this._computeHashCode$1(key);
        bucket = rest[hash];
        if (bucket == null) {
          P._HashMap__setTableEntry(rest, hash, [key, value]);
          this._length = this._length + 1;
          this._keys = null;
        } else {
          index = this._findBucketIndex$2(bucket, key);
          if (index >= 0)
            bucket[index + 1] = value;
          else {
            bucket.push(key, value);
            this._length = this._length + 1;
            this._keys = null;
          }
        }
      }
    },
    forEach$1: function(_, action) {
      var keys, $length, i, key;
      keys = this._computeKeys$0();
      for ($length = keys.length, i = 0; i < $length; ++i) {
        key = keys[i];
        action.call$2(key, this.$index(this, key));
        if (keys !== this._keys)
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
    },
    _computeKeys$0: function() {
      var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
      t1 = this._keys;
      if (t1 != null)
        return t1;
      result = Array(this._length);
      result.fixed$length = init;
      strings = this._strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = this._nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = this._rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; i0 += 2) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      this._keys = result;
      return result;
    },
    _addHashTableEntry$3: function(table, key, value) {
      if (table[key] == null) {
        this._length = this._length + 1;
        this._keys = null;
      }
      P._HashMap__setTableEntry(table, key, value);
    },
    _computeHashCode$1: function(key) {
      return J.get$hashCode$(key) & 0x3ffffff;
    },
    _findBucketIndex$2: function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2)
        if (J.$eq(bucket[i], key))
          return i;
      return -1;
    },
    $isMap: true,
    static: {_HashMap__setTableEntry: function(table, key, value) {
        if (value == null)
          table[key] = table;
        else
          table[key] = value;
      }, _HashMap__newHashTable: function() {
        var table = Object.create(null);
        P._HashMap__setTableEntry(table, "<non-identifier-key>", table);
        delete table["<non-identifier-key>"];
        return table;
      }}
  },
  _HashMap_values_closure: {
    "": "Closure:11;this_0",
    call$1: function(each) {
      var t1 = this.this_0;
      return t1.$index(t1, each);
    }
  },
  HashMapKeyIterable: {
    "": "IterableBase;_map",
    get$length: function(_) {
      return this._map._length;
    },
    get$iterator: function(_) {
      var t1 = this._map;
      return new P.HashMapKeyIterator(t1, t1._computeKeys$0(), 0, null);
    },
    forEach$1: function(_, f) {
      var t1, keys, $length, i;
      t1 = this._map;
      keys = t1._computeKeys$0();
      for ($length = keys.length, i = 0; i < $length; ++i) {
        f.call$1(keys[i]);
        if (keys !== t1._keys)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
      }
    },
    $asIterableBase: null
  },
  HashMapKeyIterator: {
    "": "Object;_map,_keys,_offset,_collection$_current",
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: function() {
      var keys, offset, t1;
      keys = this._keys;
      offset = this._offset;
      t1 = this._map;
      if (keys !== t1._keys)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else if (offset >= keys.length) {
        this._collection$_current = null;
        return false;
      } else {
        this._collection$_current = keys[offset];
        this._offset = offset + 1;
        return true;
      }
    }
  },
  _LinkedHashMap: {
    "": "Object;_length,_strings,_nums,_rest,_first,_last,_modifications",
    get$length: function(_) {
      return this._length;
    },
    get$keys: function() {
      return H.setRuntimeTypeInfo(new P.LinkedHashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]);
    },
    get$values: function(_) {
      return H.MappedIterable_MappedIterable(H.setRuntimeTypeInfo(new P.LinkedHashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]), new P._LinkedHashMap_values_closure(this), H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1));
    },
    containsKey$1: function(key) {
      var nums, rest;
      if ((key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return false;
        return nums[key] != null;
      } else {
        rest = this._rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(key)], key) >= 0;
      }
    },
    $index: function(_, key) {
      var strings, cell, nums, rest, bucket, index;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null)
          return;
        cell = strings[key];
        return cell == null ? null : cell.get$_collection$_value();
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return;
        cell = nums[key];
        return cell == null ? null : cell.get$_collection$_value();
      } else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(key)];
        index = this._findBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        return bucket[index].get$_collection$_value();
      }
    },
    $indexSet: function(_, key, value) {
      var strings, nums, rest, hash, bucket, index;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null) {
          strings = P._LinkedHashMap__newHashTable();
          this._strings = strings;
        }
        this._addHashTableEntry$3(strings, key, value);
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null) {
          nums = P._LinkedHashMap__newHashTable();
          this._nums = nums;
        }
        this._addHashTableEntry$3(nums, key, value);
      } else {
        rest = this._rest;
        if (rest == null) {
          rest = P._LinkedHashMap__newHashTable();
          this._rest = rest;
        }
        hash = this._computeHashCode$1(key);
        bucket = rest[hash];
        if (bucket == null)
          rest[hash] = [this._newLinkedCell$2(key, value)];
        else {
          index = this._findBucketIndex$2(bucket, key);
          if (index >= 0)
            bucket[index].set$_collection$_value(value);
          else
            bucket.push(this._newLinkedCell$2(key, value));
        }
      }
    },
    remove$1: function(_, key) {
      var rest, bucket, index, cell;
      if (typeof key === "string" && key !== "__proto__")
        return this._removeHashTableEntry$2(this._strings, key);
      else if (typeof key === "number" && (key & 0x3ffffff) === key)
        return this._removeHashTableEntry$2(this._nums, key);
      else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(key)];
        index = this._findBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        cell = bucket.splice(index, 1)[0];
        this._unlinkCell$1(cell);
        return cell.get$_collection$_value();
      }
    },
    forEach$1: function(_, action) {
      var cell, modifications;
      cell = this._first;
      modifications = this._modifications;
      for (; cell != null;) {
        action.call$2(cell.get$_key(), cell._collection$_value);
        if (modifications !== this._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(this));
        cell = cell._next;
      }
    },
    _addHashTableEntry$3: function(table, key, value) {
      var cell = table[key];
      if (cell == null)
        table[key] = this._newLinkedCell$2(key, value);
      else
        cell.set$_collection$_value(value);
    },
    _removeHashTableEntry$2: function(table, key) {
      var cell;
      if (table == null)
        return;
      cell = table[key];
      if (cell == null)
        return;
      this._unlinkCell$1(cell);
      delete table[key];
      return cell.get$_collection$_value();
    },
    _newLinkedCell$2: function(key, value) {
      var cell, last;
      cell = new P.LinkedHashMapCell(key, value, null, null);
      if (this._first == null) {
        this._last = cell;
        this._first = cell;
      } else {
        last = this._last;
        cell._previous = last;
        last.set$_next(cell);
        this._last = cell;
      }
      this._length = this._length + 1;
      this._modifications = this._modifications + 1 & 67108863;
      return cell;
    },
    _unlinkCell$1: function(cell) {
      var previous, next;
      previous = cell.get$_previous();
      next = cell.get$_next();
      if (previous == null)
        this._first = next;
      else
        previous.set$_next(next);
      if (next == null)
        this._last = previous;
      else
        next.set$_previous(previous);
      this._length = this._length - 1;
      this._modifications = this._modifications + 1 & 67108863;
    },
    _computeHashCode$1: function(key) {
      return J.get$hashCode$(key) & 0x3ffffff;
    },
    _findBucketIndex$2: function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq(bucket[i].get$_key(), key))
          return i;
      return -1;
    },
    toString$0: function(_) {
      return P.Maps_mapToString(this);
    },
    $isMap: true,
    static: {_LinkedHashMap__newHashTable: function() {
        var table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        return table;
      }}
  },
  _LinkedHashMap_values_closure: {
    "": "Closure:11;this_0",
    call$1: function(each) {
      var t1 = this.this_0;
      return t1.$index(t1, each);
    }
  },
  LinkedHashMapCell: {
    "": "Object;_key<,_collection$_value@,_next@,_previous@"
  },
  LinkedHashMapKeyIterable: {
    "": "IterableBase;_map",
    get$length: function(_) {
      return this._map._length;
    },
    get$iterator: function(_) {
      var t1, t2;
      t1 = this._map;
      t2 = new P.LinkedHashMapKeyIterator(t1, t1._modifications, null, null);
      t2._cell = t1._first;
      return t2;
    },
    forEach$1: function(_, f) {
      var t1, cell, modifications;
      t1 = this._map;
      cell = t1._first;
      modifications = t1._modifications;
      for (; cell != null;) {
        f.call$1(cell.get$_key());
        if (modifications !== t1._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
        cell = cell._next;
      }
    },
    $asIterableBase: null
  },
  LinkedHashMapKeyIterator: {
    "": "Object;_map,_modifications,_cell,_collection$_current",
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: function() {
      var t1 = this._map;
      if (this._modifications !== t1._modifications)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = this._cell;
        if (t1 == null) {
          this._collection$_current = null;
          return false;
        } else {
          this._collection$_current = t1.get$_key();
          this._cell = t1._next;
          return true;
        }
      }
    }
  },
  _HashSet: {
    "": "_HashSetBase;",
    get$iterator: function(_) {
      return new P.HashSetIterator(this, this._computeElements$0(), 0, null);
    },
    get$length: function(_) {
      return this._length;
    },
    contains$1: function(_, object) {
      var strings, nums, rest;
      if (typeof object === "string" && object !== "__proto__") {
        strings = this._strings;
        return strings == null ? false : strings[object] != null;
      } else if (typeof object === "number" && (object & 0x3ffffff) === object) {
        nums = this._nums;
        return nums == null ? false : nums[object] != null;
      } else {
        rest = this._rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
      }
    },
    lookup$1: function(object) {
      var t1, rest, bucket, index;
      if (!(typeof object === "string" && object !== "__proto__"))
        t1 = typeof object === "number" && (object & 0x3ffffff) === object;
      else
        t1 = true;
      if (t1)
        return this.contains$1(this, object) ? object : null;
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[this._computeHashCode$1(object)];
      index = this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return;
      return J.$index$asx(bucket, index);
    },
    add$1: function(_, element) {
      var strings, nums, rest, hash, bucket;
      if (typeof element === "string" && element !== "__proto__") {
        strings = this._strings;
        if (strings == null) {
          strings = P._HashSet__newHashTable();
          this._strings = strings;
        }
        return this._addHashTableEntry$2(strings, element);
      } else if (typeof element === "number" && (element & 0x3ffffff) === element) {
        nums = this._nums;
        if (nums == null) {
          nums = P._HashSet__newHashTable();
          this._nums = nums;
        }
        return this._addHashTableEntry$2(nums, element);
      } else {
        rest = this._rest;
        if (rest == null) {
          rest = P._HashSet__newHashTable();
          this._rest = rest;
        }
        hash = this._computeHashCode$1(element);
        bucket = rest[hash];
        if (bucket == null)
          rest[hash] = [element];
        else {
          if (this._findBucketIndex$2(bucket, element) >= 0)
            return false;
          bucket.push(element);
        }
        this._length = this._length + 1;
        this._elements = null;
        return true;
      }
    },
    remove$1: function(_, object) {
      var rest, bucket, index;
      rest = this._rest;
      if (rest == null)
        return false;
      bucket = rest[this._computeHashCode$1(object)];
      index = this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      this._length = this._length - 1;
      this._elements = null;
      bucket.splice(index, 1);
      return true;
    },
    _computeElements$0: function() {
      var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
      t1 = this._elements;
      if (t1 != null)
        return t1;
      result = Array(this._length);
      result.fixed$length = init;
      strings = this._strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = this._nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = this._rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; ++i0) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      this._elements = result;
      return result;
    },
    _addHashTableEntry$2: function(table, element) {
      if (table[element] != null)
        return false;
      table[element] = 0;
      this._length = this._length + 1;
      this._elements = null;
      return true;
    },
    _computeHashCode$1: function(element) {
      return J.get$hashCode$(element) & 0x3ffffff;
    },
    _findBucketIndex$2: function(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq(bucket[i], element))
          return i;
      return -1;
    },
    $as_HashSetBase: null
  },
  _IdentityHashSet: {
    "": "_HashSet;_length,_strings,_nums,_rest,_elements",
    _computeHashCode$1: function(key) {
      return H.objectHashCode(key) & 0x3ffffff;
    },
    _findBucketIndex$2: function(bucket, element) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i) {
        t1 = bucket[i];
        if (t1 == null ? element == null : t1 === element)
          return i;
      }
      return -1;
    },
    $as_HashSet: null
  },
  HashSetIterator: {
    "": "Object;_set,_elements,_offset,_collection$_current",
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: function() {
      var elements, offset, t1;
      elements = this._elements;
      offset = this._offset;
      t1 = this._set;
      if (elements !== t1._elements)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else if (offset >= elements.length) {
        this._collection$_current = null;
        return false;
      } else {
        this._collection$_current = elements[offset];
        this._offset = offset + 1;
        return true;
      }
    }
  },
  _LinkedHashSet: {
    "": "_HashSetBase;_length,_strings,_nums,_rest,_first,_last,_modifications",
    get$iterator: function(_) {
      var t1 = new P.LinkedHashSetIterator(this, this._modifications, null, null);
      t1._cell = this._first;
      return t1;
    },
    get$length: function(_) {
      return this._length;
    },
    contains$1: function(_, object) {
      var strings, nums, rest;
      if (typeof object === "string" && object !== "__proto__") {
        strings = this._strings;
        if (strings == null)
          return false;
        return strings[object] != null;
      } else if (typeof object === "number" && (object & 0x3ffffff) === object) {
        nums = this._nums;
        if (nums == null)
          return false;
        return nums[object] != null;
      } else {
        rest = this._rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
      }
    },
    lookup$1: function(object) {
      var t1, rest, bucket, index;
      if (!(typeof object === "string" && object !== "__proto__"))
        t1 = typeof object === "number" && (object & 0x3ffffff) === object;
      else
        t1 = true;
      if (t1)
        return this.contains$1(this, object) ? object : null;
      else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(object)];
        index = this._findBucketIndex$2(bucket, object);
        if (index < 0)
          return;
        return J.$index$asx(bucket, index).get$_element();
      }
    },
    forEach$1: function(_, action) {
      var cell, modifications;
      cell = this._first;
      modifications = this._modifications;
      for (; cell != null;) {
        action.call$1(cell.get$_element());
        if (modifications !== this._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(this));
        cell = cell._next;
      }
    },
    add$1: function(_, element) {
      var strings, nums, rest, hash, bucket;
      if (typeof element === "string" && element !== "__proto__") {
        strings = this._strings;
        if (strings == null) {
          strings = P._LinkedHashSet__newHashTable();
          this._strings = strings;
        }
        return this._addHashTableEntry$2(strings, element);
      } else if (typeof element === "number" && (element & 0x3ffffff) === element) {
        nums = this._nums;
        if (nums == null) {
          nums = P._LinkedHashSet__newHashTable();
          this._nums = nums;
        }
        return this._addHashTableEntry$2(nums, element);
      } else {
        rest = this._rest;
        if (rest == null) {
          rest = P._LinkedHashSet__newHashTable();
          this._rest = rest;
        }
        hash = this._computeHashCode$1(element);
        bucket = rest[hash];
        if (bucket == null)
          rest[hash] = [this._newLinkedCell$1(element)];
        else {
          if (this._findBucketIndex$2(bucket, element) >= 0)
            return false;
          bucket.push(this._newLinkedCell$1(element));
        }
        return true;
      }
    },
    _addHashTableEntry$2: function(table, element) {
      if (table[element] != null)
        return false;
      table[element] = this._newLinkedCell$1(element);
      return true;
    },
    _newLinkedCell$1: function(element) {
      var cell, last;
      cell = new P.LinkedHashSetCell(element, null, null);
      if (this._first == null) {
        this._last = cell;
        this._first = cell;
      } else {
        last = this._last;
        cell._previous = last;
        last.set$_next(cell);
        this._last = cell;
      }
      this._length = this._length + 1;
      this._modifications = this._modifications + 1 & 67108863;
      return cell;
    },
    _computeHashCode$1: function(element) {
      return J.get$hashCode$(element) & 0x3ffffff;
    },
    _findBucketIndex$2: function(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq(bucket[i].get$_element(), element))
          return i;
      return -1;
    },
    $as_HashSetBase: null,
    static: {_LinkedHashSet__newHashTable: function() {
        var table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        return table;
      }}
  },
  LinkedHashSetCell: {
    "": "Object;_element<,_next@,_previous@"
  },
  LinkedHashSetIterator: {
    "": "Object;_set,_modifications,_cell,_collection$_current",
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: function() {
      var t1 = this._set;
      if (this._modifications !== t1._modifications)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = this._cell;
        if (t1 == null) {
          this._collection$_current = null;
          return false;
        } else {
          this._collection$_current = t1.get$_element();
          this._cell = t1._next;
          return true;
        }
      }
    }
  },
  _HashSetBase: {
    "": "IterableBase;",
    toString$0: function(_) {
      return H.IterableMixinWorkaround_toStringIterable(this, "{", "}");
    },
    $asIterableBase: null
  },
  IterableBase: {
    "": "Object;",
    forEach$1: function(_, f) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        f.call$1(t1.get$current());
    },
    get$length: function(_) {
      var it, count;
      it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    elementAt$1: function(_, index) {
      var t1, remaining, element;
      if (index < 0)
        throw H.wrapException(P.RangeError$value(index));
      for (t1 = this.get$iterator(this), remaining = index; t1.moveNext$0();) {
        element = t1.get$current();
        if (remaining === 0)
          return element;
        --remaining;
      }
      throw H.wrapException(P.RangeError$value(index));
    },
    toString$0: function(_) {
      return P._iterableToString(this);
    }
  },
  ListMixin: {
    "": "Object;",
    get$iterator: function(receiver) {
      return new H.ListIterator(receiver, this.get$length(receiver), 0, null);
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    forEach$1: function(receiver, action) {
      var $length, t1, i;
      $length = this.get$length(receiver);
      for (t1 = receiver.length, i = 0; i < $length; ++i) {
        if (i >= t1)
          return H.ioore(receiver, i);
        action.call$1(receiver[i]);
        if ($length !== t1)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
    },
    toString$0: function(receiver) {
      var result, t1;
      t1 = $.get$_toStringVisiting();
      if (t1.contains$1(t1, receiver))
        return "[...]";
      result = P.StringBuffer$("");
      try {
        t1 = $.get$_toStringVisiting();
        t1.add$1(t1, receiver);
        result.write$1("[");
        result.writeAll$2(receiver, ", ");
        result.write$1("]");
      } finally {
        t1 = $.get$_toStringVisiting();
        t1.remove$1(t1, receiver);
      }
      return result.get$_contents();
    },
    $isList: true,
    $asList: null
  },
  Maps_mapToString_closure: {
    "": "Closure:10;box_0,result_1",
    call$2: function(k, v) {
      var t1 = this.box_0;
      if (!t1.first_0)
        this.result_1.write$1(", ");
      t1.first_0 = false;
      t1 = this.result_1;
      t1.write$1(k);
      t1.write$1(": ");
      t1.write$1(v);
    }
  },
  ListQueue: {
    "": "IterableBase;_table,_head,_tail,_modificationCount",
    get$iterator: function(_) {
      return new P._ListQueueIterator(this, this._tail, this._modificationCount, this._head, null);
    },
    forEach$1: function(_, action) {
      var modificationCount, i, t1;
      modificationCount = this._modificationCount;
      for (i = this._head; i !== this._tail; i = (i + 1 & this._table.length - 1) >>> 0) {
        t1 = this._table;
        if (i < 0 || i >= t1.length)
          return H.ioore(t1, i);
        action.call$1(t1[i]);
        if (modificationCount !== this._modificationCount)
          H.throwExpression(P.ConcurrentModificationError$(this));
      }
    },
    get$length: function(_) {
      return (this._tail - this._head & this._table.length - 1) >>> 0;
    },
    toString$0: function(_) {
      return H.IterableMixinWorkaround_toStringIterable(this, "{", "}");
    },
    removeFirst$0: function() {
      var t1, t2, t3, result;
      t1 = this._head;
      if (t1 === this._tail)
        throw H.wrapException(P.StateError$("No elements"));
      this._modificationCount = this._modificationCount + 1;
      t2 = this._table;
      t3 = t2.length;
      if (t1 >= t3)
        return H.ioore(t2, t1);
      result = t2[t1];
      this._head = (t1 + 1 & t3 - 1) >>> 0;
      return result;
    },
    _add$1: function(element) {
      var t1, t2, t3, newTable, split;
      t1 = this._table;
      t2 = this._tail;
      t3 = t1.length;
      if (t2 >= t3)
        return H.ioore(t1, t2);
      t1[t2] = element;
      t2 = (t2 + 1 & t3 - 1) >>> 0;
      this._tail = t2;
      if (this._head === t2) {
        t1 = Array(t3 * 2);
        t1.fixed$length = init;
        newTable = H.setRuntimeTypeInfo(t1, [H.getTypeArgumentByIndex(this, 0)]);
        t1 = this._table;
        t2 = this._head;
        split = t1.length - t2;
        H.IterableMixinWorkaround_setRangeList(newTable, 0, split, t1, t2);
        t1 = this._head;
        t2 = this._table;
        H.IterableMixinWorkaround_setRangeList(newTable, split, split + t1, t2, 0);
        this._head = 0;
        this._tail = this._table.length;
        this._table = newTable;
      }
      this._modificationCount = this._modificationCount + 1;
    },
    ListQueue$1: function(initialCapacity, $E) {
      var t1 = Array(8);
      t1.fixed$length = init;
      this._table = H.setRuntimeTypeInfo(t1, [$E]);
    },
    $asIterableBase: null,
    static: {"": "ListQueue__INITIAL_CAPACITY"}
  },
  _ListQueueIterator: {
    "": "Object;_queue,_end,_modificationCount,_position,_collection$_current",
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: function() {
      var t1, t2, t3;
      t1 = this._queue;
      if (this._modificationCount !== t1._modificationCount)
        H.throwExpression(P.ConcurrentModificationError$(t1));
      t2 = this._position;
      if (t2 === this._end) {
        this._collection$_current = null;
        return false;
      }
      t1 = t1._table;
      t3 = t1.length;
      if (t2 >= t3)
        return H.ioore(t1, t2);
      this._collection$_current = t1[t2];
      this._position = (t2 + 1 & t3 - 1) >>> 0;
      return true;
    }
  }
}],
["dart.convert", "dart:convert", , P, {
  "": "",
  _convertJsonToDart: function(json, reviver) {
    var revive = new P._convertJsonToDart_closure();
    return revive.call$2(null, new P._convertJsonToDart_walk(revive).call$1(json));
  },
  _parseJson: function(source, reviver) {
    var parsed, e, t1, exception;
    t1 = source;
    if (typeof t1 !== "string")
      throw H.wrapException(new P.ArgumentError(source));
    parsed = null;
    try {
      parsed = JSON.parse(source);
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      throw H.wrapException(P.FormatException$(String(e)));
    }

    return P._convertJsonToDart(parsed, reviver);
  },
  _convertJsonToDart_closure: {
    "": "Closure:10;",
    call$2: function(key, value) {
      return value;
    }
  },
  _convertJsonToDart_walk: {
    "": "Closure:11;revive_0",
    call$1: function(e) {
      var list, t1, i, keys, map, key, proto;
      if (e == null || typeof e != "object")
        return e;
      if (Object.getPrototypeOf(e) === Array.prototype) {
        list = e;
        for (t1 = this.revive_0, i = 0; i < list.length; ++i)
          list[i] = t1.call$2(i, this.call$1(list[i]));
        return list;
      }
      keys = Object.keys(e);
      map = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
      for (t1 = this.revive_0, i = 0; i < keys.length; ++i) {
        key = keys[i];
        map.$indexSet(map, key, t1.call$2(key, this.call$1(e[key])));
      }
      proto = e.__proto__;
      if (typeof proto !== "undefined" && proto !== Object.prototype)
        map.$indexSet(map, "__proto__", t1.call$2("__proto__", this.call$1(proto)));
      return map;
    }
  },
  Codec: {
    "": "Object;"
  },
  Converter: {
    "": "Object;"
  },
  JsonCodec: {
    "": "Codec;",
    decode$2$reviver: function(source, reviver) {
      return P._parseJson(source, C.JsonDecoder_null._reviver);
    },
    decode$1: function(source) {
      return this.decode$2$reviver(source, null);
    }
  },
  JsonDecoder: {
    "": "Converter;_reviver"
  }
}],
["dart.core", "dart:core", , P, {
  "": "",
  _symbolToString: function(symbol) {
    return H.Symbol_getName(symbol);
  },
  Error_safeToString: function(object) {
    var buffer, t1, i, t2, codeUnit, charCodes;
    if (typeof object === "number" || typeof object === "boolean" || null == object)
      return J.toString$0(object);
    if (typeof object === "string") {
      buffer = new P.StringBuffer("");
      buffer._contents = "\"";
      for (t1 = object.length, i = 0, t2 = "\""; i < t1; ++i) {
        codeUnit = C.JSString_methods.codeUnitAt$1(object, i);
        if (codeUnit <= 31)
          if (codeUnit === 10) {
            t2 = buffer._contents + "\\n";
            buffer._contents = t2;
          } else if (codeUnit === 13) {
            t2 = buffer._contents + "\\r";
            buffer._contents = t2;
          } else if (codeUnit === 9) {
            t2 = buffer._contents + "\\t";
            buffer._contents = t2;
          } else {
            t2 = buffer._contents + "\\x";
            buffer._contents = t2;
            if (codeUnit < 16)
              buffer._contents = t2 + "0";
            else {
              buffer._contents = t2 + "1";
              codeUnit -= 16;
            }
            t2 = codeUnit < 10 ? 48 + codeUnit : 87 + codeUnit;
            charCodes = P.List_List$filled(1, t2, J.JSInt);
            t2 = H.Primitives_stringFromCharCodes(charCodes);
            t2 = buffer._contents + t2;
            buffer._contents = t2;
          }
        else if (codeUnit === 92) {
          t2 = buffer._contents + "\\\\";
          buffer._contents = t2;
        } else if (codeUnit === 34) {
          t2 = buffer._contents + "\\\"";
          buffer._contents = t2;
        } else {
          charCodes = P.List_List$filled(1, codeUnit, J.JSInt);
          t2 = H.Primitives_stringFromCharCodes(charCodes);
          t2 = buffer._contents + t2;
          buffer._contents = t2;
        }
      }
      t1 = t2 + "\"";
      buffer._contents = t1;
      return t1;
    }
    return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
  },
  Exception_Exception: function(message) {
    return new P._ExceptionImplementation(message);
  },
  identical: [function(a, b) {
    return a == null ? b == null : a === b;
  }, "call$2", "identical$closure", 4, 0, 6],
  identityHashCode: [function(object) {
    return H.objectHashCode(object);
  }, "call$1", "identityHashCode$closure", 2, 0, 7],
  List_List$filled: function($length, fill, $E) {
    var result, t1, i;
    result = J.JSArray_JSArray$fixed($length, $E);
    if ($length !== 0 && true)
      for (t1 = result.length, i = 0; i < t1; ++i)
        result[i] = fill;
    return result;
  },
  List_List$from: function(other, growable, $E) {
    var list, t1, $length, fixedList, t2, i, t3;
    list = H.setRuntimeTypeInfo([], [$E]);
    for (t1 = J.get$iterator$ax(other); t1.moveNext$0();)
      list.push(t1.get$current());
    if (growable)
      return list;
    $length = list.length;
    t1 = Array($length);
    t1.fixed$length = init;
    fixedList = H.setRuntimeTypeInfo(t1, [$E]);
    for (t1 = list.length, t2 = fixedList.length, i = 0; i < $length; ++i) {
      if (i >= t1)
        return H.ioore(list, i);
      t3 = list[i];
      if (i >= t2)
        return H.ioore(fixedList, i);
      fixedList[i] = t3;
    }
    return fixedList;
  },
  print: function(object) {
    var line = H.S(object);
    H.printString(line);
  },
  NoSuchMethodError_toString_closure: {
    "": "Closure:17;box_0",
    call$2: function(key, value) {
      var t1 = this.box_0;
      if (t1.i_1 > 0)
        t1.sb_0.write$1(", ");
      t1.sb_0.write$1(P._symbolToString(key));
    }
  },
  DateTime: {
    "": "Object;millisecondsSinceEpoch,isUtc",
    $eq: function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isDateTime)
        return false;
      return this.millisecondsSinceEpoch === other.millisecondsSinceEpoch && this.isUtc === other.isUtc;
    },
    get$hashCode: function(_) {
      return this.millisecondsSinceEpoch;
    },
    toString$0: function(_) {
      var t1, t2, t3, y, m, d, h, min, sec, ms;
      t1 = new P.DateTime_toString_twoDigits();
      t2 = this.isUtc;
      t3 = t2 ? H.Primitives_lazyAsJsDate(this).getUTCFullYear() + 0 : H.Primitives_lazyAsJsDate(this).getFullYear() + 0;
      y = new P.DateTime_toString_fourDigits().call$1(t3);
      m = t1.call$1(t2 ? H.Primitives_lazyAsJsDate(this).getUTCMonth() + 1 : H.Primitives_lazyAsJsDate(this).getMonth() + 1);
      d = t1.call$1(t2 ? H.Primitives_lazyAsJsDate(this).getUTCDate() + 0 : H.Primitives_lazyAsJsDate(this).getDate() + 0);
      h = t1.call$1(t2 ? H.Primitives_lazyAsJsDate(this).getUTCHours() + 0 : H.Primitives_lazyAsJsDate(this).getHours() + 0);
      min = t1.call$1(t2 ? H.Primitives_lazyAsJsDate(this).getUTCMinutes() + 0 : H.Primitives_lazyAsJsDate(this).getMinutes() + 0);
      sec = t1.call$1(t2 ? H.Primitives_lazyAsJsDate(this).getUTCSeconds() + 0 : H.Primitives_lazyAsJsDate(this).getSeconds() + 0);
      t1 = t2 ? H.Primitives_lazyAsJsDate(this).getUTCMilliseconds() + 0 : H.Primitives_lazyAsJsDate(this).getMilliseconds() + 0;
      ms = new P.DateTime_toString_threeDigits().call$1(t1);
      if (t2)
        return H.S(y) + "-" + H.S(m) + "-" + H.S(d) + " " + H.S(h) + ":" + H.S(min) + ":" + H.S(sec) + "." + H.S(ms) + "Z";
      else
        return H.S(y) + "-" + H.S(m) + "-" + H.S(d) + " " + H.S(h) + ":" + H.S(min) + ":" + H.S(sec) + "." + H.S(ms);
    },
    DateTime$_now$0: function() {
      H.Primitives_lazyAsJsDate(this);
    },
    $isDateTime: true,
    static: {"": "DateTime_MONDAY,DateTime_TUESDAY,DateTime_WEDNESDAY,DateTime_THURSDAY,DateTime_FRIDAY,DateTime_SATURDAY,DateTime_SUNDAY,DateTime_DAYS_PER_WEEK,DateTime_JANUARY,DateTime_FEBRUARY,DateTime_MARCH,DateTime_APRIL,DateTime_MAY,DateTime_JUNE,DateTime_JULY,DateTime_AUGUST,DateTime_SEPTEMBER,DateTime_OCTOBER,DateTime_NOVEMBER,DateTime_DECEMBER,DateTime_MONTHS_PER_YEAR,DateTime__MAX_MILLISECONDS_SINCE_EPOCH"}
  },
  DateTime_toString_fourDigits: {
    "": "Closure:18;",
    call$1: function(n) {
      var absN, sign;
      absN = Math.abs(n);
      sign = n < 0 ? "-" : "";
      if (absN >= 1000)
        return "" + n;
      if (absN >= 100)
        return sign + "0" + H.S(absN);
      if (absN >= 10)
        return sign + "00" + H.S(absN);
      return sign + "000" + H.S(absN);
    }
  },
  DateTime_toString_threeDigits: {
    "": "Closure:18;",
    call$1: function(n) {
      if (n >= 100)
        return "" + n;
      if (n >= 10)
        return "0" + n;
      return "00" + n;
    }
  },
  DateTime_toString_twoDigits: {
    "": "Closure:18;",
    call$1: function(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    }
  },
  Duration: {
    "": "Object;_duration<",
    $add: function(_, other) {
      return P.Duration$(0, 0, C.JSInt_methods.$add(this._duration, other.get$_duration()), 0, 0, 0);
    },
    $sub: function(_, other) {
      return P.Duration$(0, 0, this._duration - other.get$_duration(), 0, 0, 0);
    },
    $lt: function(_, other) {
      return C.JSInt_methods.$lt(this._duration, other.get$_duration());
    },
    $ge: function(_, other) {
      return C.JSInt_methods.$ge(this._duration, other.get$_duration());
    },
    $eq: function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isDuration)
        return false;
      return this._duration === other._duration;
    },
    get$hashCode: function(_) {
      return this._duration & 0x1FFFFFFF;
    },
    toString$0: function(_) {
      var t1, t2, twoDigitMinutes, twoDigitSeconds, sixDigitUs;
      t1 = new P.Duration_toString_twoDigits();
      t2 = this._duration;
      if (t2 < 0)
        return "-" + H.S(P.Duration$(0, 0, -t2, 0, 0, 0));
      twoDigitMinutes = t1.call$1(C.JSInt_methods.remainder$1(C.JSInt_methods._tdivFast$1(t2, 60000000), 60));
      twoDigitSeconds = t1.call$1(C.JSInt_methods.remainder$1(C.JSInt_methods._tdivFast$1(t2, 1000000), 60));
      sixDigitUs = new P.Duration_toString_sixDigits().call$1(C.JSInt_methods.remainder$1(t2, 1000000));
      return "" + C.JSInt_methods._tdivFast$1(t2, 3600000000) + ":" + H.S(twoDigitMinutes) + ":" + H.S(twoDigitSeconds) + "." + H.S(sixDigitUs);
    },
    $isDuration: true,
    static: {"": "Duration_MICROSECONDS_PER_MILLISECOND,Duration_MILLISECONDS_PER_SECOND,Duration_SECONDS_PER_MINUTE,Duration_MINUTES_PER_HOUR,Duration_HOURS_PER_DAY,Duration_MICROSECONDS_PER_SECOND,Duration_MICROSECONDS_PER_MINUTE,Duration_MICROSECONDS_PER_HOUR,Duration_MICROSECONDS_PER_DAY,Duration_MILLISECONDS_PER_MINUTE,Duration_MILLISECONDS_PER_HOUR,Duration_MILLISECONDS_PER_DAY,Duration_SECONDS_PER_HOUR,Duration_SECONDS_PER_DAY,Duration_MINUTES_PER_DAY,Duration_ZERO", Duration$: function(days, hours, microseconds, milliseconds, minutes, seconds) {
        return new P.Duration(days * 86400000000 + hours * 3600000000 + minutes * 60000000 + seconds * 1000000 + milliseconds * 1000 + microseconds);
      }}
  },
  Duration_toString_sixDigits: {
    "": "Closure:18;",
    call$1: function(n) {
      if (n >= 100000)
        return "" + n;
      if (n >= 10000)
        return "0" + n;
      if (n >= 1000)
        return "00" + n;
      if (n >= 100)
        return "000" + n;
      if (n > 10)
        return "0000" + n;
      return "00000" + n;
    }
  },
  Duration_toString_twoDigits: {
    "": "Closure:18;",
    call$1: function(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    }
  },
  Error: {
    "": "Object;",
    get$stackTrace: function() {
      return new H._StackTrace(this.$thrownJsError, null);
    },
    $isError: true
  },
  NullThrownError: {
    "": "Error;",
    toString$0: function(_) {
      return "Throw of null.";
    }
  },
  ArgumentError: {
    "": "Error;message",
    toString$0: function(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Illegal argument(s): " + H.S(t1);
      return "Illegal argument(s)";
    },
    static: {ArgumentError$: function(message) {
        return new P.ArgumentError(message);
      }}
  },
  RangeError: {
    "": "ArgumentError;message",
    toString$0: function(_) {
      return "RangeError: " + H.S(this.message);
    },
    static: {RangeError$value: function(value) {
        return new P.RangeError("value " + H.S(value));
      }, RangeError$range: function(value, start, end) {
        return new P.RangeError("value " + H.S(value) + " not in range " + start + ".." + H.S(end));
      }}
  },
  UnsupportedError: {
    "": "Error;message",
    toString$0: function(_) {
      return "Unsupported operation: " + this.message;
    },
    static: {UnsupportedError$: function(message) {
        return new P.UnsupportedError(message);
      }}
  },
  UnimplementedError: {
    "": "Error;message",
    toString$0: function(_) {
      var t1 = this.message;
      return t1 != null ? "UnimplementedError: " + H.S(t1) : "UnimplementedError";
    },
    $isError: true,
    static: {UnimplementedError$: function(message) {
        return new P.UnimplementedError(message);
      }}
  },
  StateError: {
    "": "Error;message",
    toString$0: function(_) {
      return "Bad state: " + this.message;
    },
    static: {StateError$: function(message) {
        return new P.StateError(message);
      }}
  },
  ConcurrentModificationError: {
    "": "Error;modifiedObject",
    toString$0: function(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + H.S(P.Error_safeToString(t1)) + ".";
    },
    static: {ConcurrentModificationError$: function(modifiedObject) {
        return new P.ConcurrentModificationError(modifiedObject);
      }}
  },
  StackOverflowError: {
    "": "Object;",
    toString$0: function(_) {
      return "Stack Overflow";
    },
    get$stackTrace: function() {
      return;
    },
    $isError: true
  },
  CyclicInitializationError: {
    "": "Error;variableName",
    toString$0: function(_) {
      return "Reading static variable '" + this.variableName + "' during its initialization";
    },
    static: {CyclicInitializationError$: function(variableName) {
        return new P.CyclicInitializationError(variableName);
      }}
  },
  _ExceptionImplementation: {
    "": "Object;message",
    toString$0: function(_) {
      var t1 = this.message;
      if (t1 == null)
        return "Exception";
      return "Exception: " + H.S(t1);
    }
  },
  FormatException: {
    "": "Object;message",
    toString$0: function(_) {
      return "FormatException: " + this.message;
    },
    static: {FormatException$: function(message) {
        return new P.FormatException(message);
      }}
  },
  Expando: {
    "": "Object;name",
    toString$0: function(_) {
      return "Expando:" + H.S(this.name);
    },
    $index: function(_, object) {
      var values = H.Primitives_getProperty(object, "expando$values");
      return values == null ? null : H.Primitives_getProperty(values, this._getKey$0());
    },
    $indexSet: function(_, object, value) {
      var values = H.Primitives_getProperty(object, "expando$values");
      if (values == null) {
        values = new P.Object();
        H.Primitives_setProperty(object, "expando$values", values);
      }
      H.Primitives_setProperty(values, this._getKey$0(), value);
    },
    _getKey$0: function() {
      var key, t1;
      key = H.Primitives_getProperty(this, "expando$key");
      if (key == null) {
        t1 = $.Expando__keyCount;
        $.Expando__keyCount = t1 + 1;
        key = "expando$key$" + t1;
        H.Primitives_setProperty(this, "expando$key", key);
      }
      return key;
    },
    static: {"": "Expando__KEY_PROPERTY_NAME,Expando__EXPANDO_PROPERTY_NAME,Expando__keyCount"}
  },
  Iterator: {
    "": "Object;"
  },
  Null: {
    "": "Object;",
    toString$0: function(_) {
      return "null";
    }
  },
  Object: {
    "": ";",
    $eq: function(_, other) {
      return this === other;
    },
    get$hashCode: function(_) {
      return H.Primitives_objectHashCode(this);
    },
    toString$0: function(_) {
      return H.Primitives_objectToString(this);
    }
  },
  StackTrace: {
    "": "Object;"
  },
  StringBuffer: {
    "": "Object;_contents<",
    get$length: function(_) {
      return this._contents.length;
    },
    write$1: function(obj) {
      var str = typeof obj === "string" ? obj : H.S(obj);
      this._contents = this._contents + str;
    },
    writeAll$2: function(objects, separator) {
      var iterator, str;
      iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return;
      if (separator.length === 0)
        do {
          str = iterator.get$current();
          str = typeof str === "string" ? str : H.S(str);
          this._contents = this._contents + str;
        } while (iterator.moveNext$0());
      else {
        this.write$1(iterator.get$current());
        for (; iterator.moveNext$0();) {
          this._contents = this._contents + separator;
          str = iterator.get$current();
          str = typeof str === "string" ? str : H.S(str);
          this._contents = this._contents + str;
        }
      }
    },
    toString$0: function(_) {
      return this._contents;
    },
    StringBuffer$1: function($content) {
      this._contents = $content;
    },
    static: {StringBuffer$: function($content) {
        var t1 = new P.StringBuffer("");
        t1.StringBuffer$1($content);
        return t1;
      }}
  },
  Symbol: {
    "": "Object;"
  }
}],
["dart.dom.html", "dart:html", , W, {
  "": "",
  Element__determineMouseWheelEventType: [function(e) {
    if (e.onwheel !== undefined)
      return "wheel";
    else if (e.onmousewheel !== undefined)
      return "mousewheel";
    else
      return "DOMMouseScroll";
  }, "call$1", "Element__determineMouseWheelEventType$closure", 2, 0, 8],
  ImageElement_ImageElement: function(height, src, width) {
    var e = document.createElement("img", null);
    return e;
  },
  Window__isDartLocation: function(thing) {
    var t1, t2, exception;
    try {
      t1 = thing;
      t2 = J.getInterceptor(t1);
      return typeof t1 === "object" && t1 !== null && !!t2.$isLocation;
    } catch (exception) {
      H.unwrapException(exception);
      return false;
    }

  },
  _wrapZone: function(callback) {
    var t1 = $.Zone__current;
    if (t1 === C.C__RootZone)
      return callback;
    return t1.bindUnaryCallback$2$runGuarded(callback, true);
  },
  HtmlElement: {
    "": "Element;",
    "%": "HTMLAppletElement|HTMLBRElement|HTMLBaseFontElement|HTMLButtonElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDialogElement|HTMLDirectoryElement|HTMLDivElement|HTMLFieldSetElement|HTMLFontElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLMapElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLShadowElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableDataCellElement|HTMLTableElement|HTMLTableHeaderCellElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTemplateElement|HTMLTextAreaElement|HTMLTitleElement|HTMLUListElement|HTMLUnknownElement;HTMLElement"
  },
  AnchorElement: {
    "": "HtmlElement;href=",
    toString$0: function(receiver) {
      return receiver.toString();
    },
    "%": "HTMLAnchorElement"
  },
  AreaElement: {
    "": "HtmlElement;href=",
    "%": "HTMLAreaElement"
  },
  BaseElement: {
    "": "HtmlElement;href=",
    "%": "HTMLBaseElement"
  },
  BodyElement: {
    "": "HtmlElement;",
    get$onLoad: function(receiver) {
      return C.EventStreamProvider_load.forElement$1(receiver);
    },
    "%": "HTMLBodyElement"
  },
  CanvasElement: {
    "": "HtmlElement;height%,width%",
    getContext$2: function(receiver, contextId, attrs) {
      return receiver.getContext(contextId);
    },
    getContext$1: function($receiver, contextId) {
      return this.getContext$2($receiver, contextId, null);
    },
    $isCanvasElement: true,
    "%": "HTMLCanvasElement"
  },
  CanvasRenderingContext: {
    "": "Interceptor;",
    "%": "CanvasRenderingContext2D;CanvasRenderingContext"
  },
  DomException: {
    "": "Interceptor;",
    toString$0: function(receiver) {
      return receiver.toString();
    },
    "%": "DOMException"
  },
  Element: {
    "": "Node;",
    toString$0: function(receiver) {
      return receiver.localName;
    },
    get$onLoad: function(receiver) {
      return C.EventStreamProvider_load.forElement$1(receiver);
    },
    "%": ";Element"
  },
  EmbedElement: {
    "": "HtmlElement;height%,src%,width%",
    "%": "HTMLEmbedElement"
  },
  ErrorEvent: {
    "": "Event;error=",
    "%": "ErrorEvent"
  },
  Event: {
    "": "Interceptor;",
    preventDefault$0: function(receiver) {
      return receiver.preventDefault();
    },
    "%": "AudioProcessingEvent|AutocompleteErrorEvent|BeforeLoadEvent|BeforeUnloadEvent|CSSFontFaceLoadEvent|CloseEvent|CustomEvent|DeviceMotionEvent|DeviceOrientationEvent|HashChangeEvent|IDBVersionChangeEvent|MIDIConnectionEvent|MIDIMessageEvent|MediaKeyEvent|MediaKeyMessageEvent|MediaKeyNeededEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OfflineAudioCompletionEvent|OverflowEvent|PageTransitionEvent|PopStateEvent|ProgressEvent|RTCDTMFToneChangeEvent|RTCDataChannelEvent|RTCIceCandidateEvent|ResourceProgressEvent|SecurityPolicyViolationEvent|SpeechInputEvent|SpeechRecognitionEvent|SpeechSynthesisEvent|StorageEvent|TrackEvent|TransitionEvent|WebGLContextEvent|WebKitAnimationEvent|WebKitTransitionEvent|XMLHttpRequestProgressEvent;Event"
  },
  EventTarget: {
    "": "Interceptor;",
    addEventListener$3: function(receiver, type, listener, useCapture) {
      return receiver.addEventListener(type, H.convertDartClosureToJS(listener, 1), useCapture);
    },
    removeEventListener$3: function(receiver, type, listener, useCapture) {
      return receiver.removeEventListener(type, H.convertDartClosureToJS(listener, 1), useCapture);
    },
    "%": "MediaController|MediaStream;EventTarget"
  },
  FormElement: {
    "": "HtmlElement;length=",
    "%": "HTMLFormElement"
  },
  IFrameElement: {
    "": "HtmlElement;height%,src%,width%",
    "%": "HTMLIFrameElement"
  },
  ImageElement: {
    "": "HtmlElement;height%,src%,width%",
    $isImageElement: true,
    "%": "HTMLImageElement"
  },
  InputElement: {
    "": "HtmlElement;height%,src%,width%",
    "%": "HTMLInputElement"
  },
  KeyboardEvent: {
    "": "UIEvent;",
    get$keyCode: function(receiver) {
      return receiver.keyCode;
    },
    "%": "KeyboardEvent"
  },
  LinkElement: {
    "": "HtmlElement;href=",
    "%": "HTMLLinkElement"
  },
  Location: {
    "": "Interceptor;href=",
    toString$0: function(receiver) {
      return receiver.toString();
    },
    $isLocation: true,
    "%": "Location"
  },
  MediaElement: {
    "": "HtmlElement;error=,src%",
    "%": "HTMLAudioElement;HTMLMediaElement"
  },
  MouseEvent: {
    "": "UIEvent;",
    get$movement: function(receiver) {
      return H.setRuntimeTypeInfo(new P.Point(receiver.webkitMovementX, receiver.webkitMovementY), [null]);
    },
    "%": ";DragEvent|MSPointerEvent|MouseEvent|PointerEvent"
  },
  Node: {
    "": "EventTarget;",
    toString$0: function(receiver) {
      var t1 = receiver.nodeValue;
      return t1 == null ? J.Interceptor.prototype.toString$0.call(this, receiver) : t1;
    },
    "%": "Document|HTMLDocument;Node"
  },
  ObjectElement: {
    "": "HtmlElement;height%,width%",
    "%": "HTMLObjectElement"
  },
  ScriptElement: {
    "": "HtmlElement;src%",
    "%": "HTMLScriptElement"
  },
  SelectElement: {
    "": "HtmlElement;length=",
    "%": "HTMLSelectElement"
  },
  SourceElement: {
    "": "HtmlElement;src%",
    "%": "HTMLSourceElement"
  },
  SpeechRecognitionError: {
    "": "Event;error=",
    "%": "SpeechRecognitionError"
  },
  TrackElement: {
    "": "HtmlElement;src%",
    "%": "HTMLTrackElement"
  },
  UIEvent: {
    "": "Event;",
    "%": "CompositionEvent|FocusEvent|SVGZoomEvent|TextEvent|TouchEvent;UIEvent"
  },
  VideoElement: {
    "": "MediaElement;height%,width%",
    $isVideoElement: true,
    "%": "HTMLVideoElement"
  },
  WheelEvent: {
    "": "MouseEvent;",
    get$deltaY: function(receiver) {
      var detail;
      if (receiver.deltaY !== undefined)
        return receiver.deltaY;
      else if (receiver.wheelDelta !== undefined)
        return -receiver.wheelDelta;
      else if (receiver.detail !== undefined) {
        if (receiver.axis == MouseScrollEvent.VERTICAL_AXIS) {
          detail = receiver.detail;
          if (Math.abs(detail) < 100)
            return -detail * 40;
          return -detail;
        }
        return 0;
      }
      throw H.wrapException(P.UnsupportedError$("deltaY is not supported"));
    },
    get$deltaX: function(receiver) {
      var detail;
      if (receiver.deltaX !== undefined)
        return receiver.deltaX;
      else if (receiver.wheelDeltaX !== undefined)
        return -receiver.wheelDeltaX;
      else if (receiver.detail !== undefined) {
        if (receiver.axis !== undefined && receiver.axis == MouseScrollEvent.HORIZONTAL_AXIS) {
          detail = receiver.detail;
          if (detail < 100)
            return -detail * 40;
          return -detail;
        }
        return 0;
      }
      throw H.wrapException(P.UnsupportedError$("deltaX is not supported"));
    },
    $isWheelEvent: true,
    "%": "MouseScrollEvent|MouseWheelEvent|WheelEvent"
  },
  Window: {
    "": "EventTarget;",
    get$location: function(receiver) {
      var result = receiver.location;
      if (W.Window__isDartLocation(result) === true)
        return result;
      if (null == receiver._location_wrapper)
        receiver._location_wrapper = new W._LocationWrapper(result);
      return receiver._location_wrapper;
    },
    _requestAnimationFrame$1: function(receiver, callback) {
      return receiver.requestAnimationFrame(H.convertDartClosureToJS(callback, 1));
    },
    _ensureRequestAnimationFrame$0: function(receiver) {
      if (!!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame))
        return;
        (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(receiver);
    },
    toString$0: function(receiver) {
      return receiver.toString();
    },
    "%": "DOMWindow|Window"
  },
  ImageData: {
    "": "Interceptor;"
  },
  EventStreamProvider: {
    "": "Object;_eventType",
    forTarget$2$useCapture: function(e, useCapture) {
      return H.setRuntimeTypeInfo(new W._EventStream(e, this._eventType, useCapture), [null]);
    },
    forTarget$1: function(e) {
      return this.forTarget$2$useCapture(e, false);
    },
    forElement$2$useCapture: function(e, useCapture) {
      return H.setRuntimeTypeInfo(new W._ElementEventStreamImpl(e, this._eventType, useCapture), [null]);
    },
    forElement$1: function(e) {
      return this.forElement$2$useCapture(e, false);
    }
  },
  _EventStream: {
    "": "Stream;_target,_eventType,_useCapture",
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      var t1 = new W._EventStreamSubscription(0, this._target, this._eventType, W._wrapZone(onData), this._useCapture);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      t1._tryResume$0();
      return t1;
    },
    $asStream: null
  },
  _ElementEventStreamImpl: {
    "": "_EventStream;_target,_eventType,_useCapture",
    $as_EventStream: null
  },
  _EventStreamSubscription: {
    "": "StreamSubscription;_pauseCount,_target,_eventType,_onData,_useCapture",
    cancel$0: function() {
      if (this._target == null)
        return;
      this._unlisten$0();
      this._target = null;
      this._onData = null;
    },
    _tryResume$0: function() {
      var t1 = this._onData;
      if (t1 != null && this._pauseCount <= 0)
        J.addEventListener$3$x(this._target, this._eventType, t1, this._useCapture);
    },
    _unlisten$0: function() {
      var t1 = this._onData;
      if (t1 != null)
        J.removeEventListener$3$x(this._target, this._eventType, t1, this._useCapture);
    },
    $asStreamSubscription: null
  },
  _CustomEventStreamProvider: {
    "": "Object;_eventTypeGetter",
    _eventTypeGetter$1: function(arg0) {
      return this._eventTypeGetter.call$1(arg0);
    },
    forTarget$2$useCapture: function(e, useCapture) {
      return H.setRuntimeTypeInfo(new W._EventStream(e, this._eventTypeGetter$1(e), useCapture), [null]);
    },
    forTarget$1: function(e) {
      return this.forTarget$2$useCapture(e, false);
    }
  },
  _LocationWrapper: {
    "": "Object;_ptr",
    get$href: function(_) {
      return this._ptr.href;
    },
    toString$0: function(_) {
      return this._ptr.toString();
    },
    $isLocation: true
  }
}],
["dart.dom.svg", "dart:svg", , P, {
  "": "",
  AElement: {
    "": "GraphicsElement;href=",
    "%": "SVGAElement"
  },
  AltGlyphElement: {
    "": "TextPositioningElement;href=",
    "%": "SVGAltGlyphElement"
  },
  FEBlendElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEBlendElement"
  },
  FEColorMatrixElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEColorMatrixElement"
  },
  FEComponentTransferElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEComponentTransferElement"
  },
  FECompositeElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFECompositeElement"
  },
  FEConvolveMatrixElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEConvolveMatrixElement"
  },
  FEDiffuseLightingElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEDiffuseLightingElement"
  },
  FEDisplacementMapElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEDisplacementMapElement"
  },
  FEFloodElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEFloodElement"
  },
  FEGaussianBlurElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEGaussianBlurElement"
  },
  FEImageElement: {
    "": "SvgElement;height=,width=,x=,y=,href=",
    "%": "SVGFEImageElement"
  },
  FEMergeElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEMergeElement"
  },
  FEMorphologyElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEMorphologyElement"
  },
  FEOffsetElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEOffsetElement"
  },
  FEPointLightElement: {
    "": "SvgElement;x=,y=",
    "%": "SVGFEPointLightElement"
  },
  FESpecularLightingElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFESpecularLightingElement"
  },
  FESpotLightElement: {
    "": "SvgElement;x=,y=",
    "%": "SVGFESpotLightElement"
  },
  FETileElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFETileElement"
  },
  FETurbulenceElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFETurbulenceElement"
  },
  FilterElement: {
    "": "SvgElement;height=,width=,x=,y=,href=",
    "%": "SVGFilterElement"
  },
  ForeignObjectElement: {
    "": "GraphicsElement;height=,width=,x=,y=",
    "%": "SVGForeignObjectElement"
  },
  GraphicsElement: {
    "": "SvgElement;",
    "%": "SVGCircleElement|SVGClipPathElement|SVGDefsElement|SVGEllipseElement|SVGGElement|SVGLineElement|SVGPathElement|SVGPolygonElement|SVGPolylineElement|SVGSwitchElement;SVGGraphicsElement"
  },
  ImageElement0: {
    "": "GraphicsElement;height=,width=,x=,y=,href=",
    "%": "SVGImageElement"
  },
  MaskElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGMaskElement"
  },
  PatternElement: {
    "": "SvgElement;height=,width=,x=,y=,href=",
    "%": "SVGPatternElement"
  },
  Rect: {
    "": "Interceptor;x=,y=",
    "%": "SVGRect"
  },
  RectElement: {
    "": "GraphicsElement;height=,width=,x=,y=",
    "%": "SVGRectElement"
  },
  ScriptElement0: {
    "": "SvgElement;href=",
    "%": "SVGScriptElement"
  },
  SvgElement: {
    "": "Element;",
    "%": "SVGAltGlyphDefElement|SVGAltGlyphItemElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGAnimationElement|SVGComponentTransferFunctionElement|SVGCursorElement|SVGDescElement|SVGFEDistantLightElement|SVGFEDropShadowElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGFEMergeNodeElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGGlyphElement|SVGGlyphRefElement|SVGHKernElement|SVGMPathElement|SVGMarkerElement|SVGMetadataElement|SVGMissingGlyphElement|SVGSetElement|SVGStopElement|SVGStyleElement|SVGSymbolElement|SVGTitleElement|SVGVKernElement|SVGViewElement;SVGElement"
  },
  SvgSvgElement: {
    "": "GraphicsElement;height=,width=,x=,y=",
    "%": "SVGSVGElement"
  },
  TextContentElement: {
    "": "GraphicsElement;",
    "%": ";SVGTextContentElement"
  },
  TextPathElement: {
    "": "TextContentElement;href=",
    "%": "SVGTextPathElement"
  },
  TextPositioningElement: {
    "": "TextContentElement;x=,y=",
    "%": "SVGTSpanElement|SVGTextElement;SVGTextPositioningElement"
  },
  UseElement: {
    "": "GraphicsElement;height=,width=,x=,y=,href=",
    "%": "SVGUseElement"
  },
  _GradientElement: {
    "": "SvgElement;href=",
    "%": "SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement"
  }
}],
["dart.dom.web_gl", "dart:web_gl", , P, {
  "": "",
  RenderingContext: {
    "": "CanvasRenderingContext;",
    bindBuffer$2: function(receiver, target, buffer) {
      return receiver.bindBuffer(target, buffer);
    },
    bindTexture$2: function(receiver, target, texture) {
      return receiver.bindTexture(target, texture);
    },
    clear$1: function(receiver, mask) {
      return receiver.clear(mask);
    },
    clearColor$4: function(receiver, red, green, blue, alpha) {
      return receiver.clearColor(red, green, blue, alpha);
    },
    clearDepth$1: function(receiver, depth) {
      return receiver.clearDepth(depth);
    },
    createBuffer$0: function(receiver) {
      return receiver.createBuffer();
    },
    createProgram$0: function(receiver) {
      return receiver.createProgram();
    },
    createShader$1: function(receiver, type) {
      return receiver.createShader(type);
    },
    createTexture$0: function(receiver) {
      return receiver.createTexture();
    },
    disable$1: function(receiver, cap) {
      return receiver.disable(cap);
    },
    enable$1: function(receiver, cap) {
      return receiver.enable(cap);
    },
    getAttribLocation$2: function(receiver, program, $name) {
      return receiver.getAttribLocation(program, $name);
    },
    getUniformLocation$2: function(receiver, program, $name) {
      return receiver.getUniformLocation(program, $name);
    },
    texImage2D$9: function(receiver, target, level, internalformat, format_OR_width, height_OR_type, border_OR_canvas_OR_image_OR_pixels_OR_video, format, type, pixels) {
      var t1, t2;
      t1 = J.getInterceptor(border_OR_canvas_OR_image_OR_pixels_OR_video);
      if (!!t1.$isImageElement || false)
        t2 = true;
      else
        t2 = false;
      if (t2) {
        receiver.texImage2D(target, level, internalformat, format_OR_width, height_OR_type, border_OR_canvas_OR_image_OR_pixels_OR_video);
        return;
      }
      if (!!t1.$isCanvasElement || false)
        t2 = true;
      else
        t2 = false;
      if (t2) {
        receiver.texImage2D(target, level, internalformat, format_OR_width, height_OR_type, border_OR_canvas_OR_image_OR_pixels_OR_video);
        return;
      }
      if (!!t1.$isVideoElement || false)
        t1 = true;
      else
        t1 = false;
      if (t1) {
        receiver.texImage2D(target, level, internalformat, format_OR_width, height_OR_type, border_OR_canvas_OR_image_OR_pixels_OR_video);
        return;
      }
      throw H.wrapException(new P.ArgumentError("Incorrect number or type of arguments"));
    },
    texImage2D$6: function($receiver, target, level, internalformat, format_OR_width, height_OR_type, border_OR_canvas_OR_image_OR_pixels_OR_video) {
      return this.texImage2D$9($receiver, target, level, internalformat, format_OR_width, height_OR_type, border_OR_canvas_OR_image_OR_pixels_OR_video, null, null, null);
    },
    uniform4fv$2: function(receiver, $location, v) {
      return receiver.uniform4fv($location, v);
    },
    uniformMatrix4fv$3: function(receiver, $location, transpose, array) {
      return receiver.uniformMatrix4fv($location, transpose, array);
    },
    useProgram$1: function(receiver, program) {
      return receiver.useProgram(program);
    },
    viewport$4: function(receiver, x, y, width, height) {
      return receiver.viewport(x, y, width, height);
    },
    "%": "WebGLRenderingContext"
  }
}],
["dart.math", "dart:math", , P, {
  "": "",
  _JenkinsSmiHash_combine: function(hash, value) {
    hash = 536870911 & hash + value;
    hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
    return hash ^ hash >>> 6;
  },
  _JenkinsSmiHash_finish: function(hash) {
    hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash ^= hash >>> 11;
    return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
  },
  _JSRandom: {
    "": "Object;",
    nextDouble$0: function() {
      return Math.random();
    }
  },
  Point: {
    "": "Object;x>,y>",
    toString$0: function(_) {
      return "Point(" + H.S(this.x) + ", " + H.S(this.y) + ")";
    },
    $eq: function(_, other) {
      var t1, t2;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isPoint)
        return false;
      t1 = this.x;
      t2 = other.x;
      if (t1 == null ? t2 == null : t1 === t2) {
        t1 = this.y;
        t2 = other.y;
        t2 = t1 == null ? t2 == null : t1 === t2;
        t1 = t2;
      } else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var t1, t2;
      t1 = J.get$hashCode$(this.x);
      t2 = J.get$hashCode$(this.y);
      return P._JenkinsSmiHash_finish(P._JenkinsSmiHash_combine(P._JenkinsSmiHash_combine(0, t1), t2));
    },
    $add: function(_, other) {
      var t1, t2, t3;
      t1 = this.x;
      t2 = other.get$x(other);
      if (typeof t1 !== "number")
        return t1.$add();
      t2 = C.JSNumber_methods.$add(t1, t2);
      t1 = this.y;
      t3 = other.get$y(other);
      if (typeof t1 !== "number")
        return t1.$add();
      t3 = new P.Point(t2, C.JSNumber_methods.$add(t1, t3));
      t3.$builtinTypeInfo = this.$builtinTypeInfo;
      return t3;
    },
    $sub: function(_, other) {
      var t1, t2, t3, t4;
      t1 = this.x;
      t2 = J.getInterceptor$x(other);
      t3 = t2.get$x(other);
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t3 !== "number")
        return H.iae(t3);
      t4 = this.y;
      t2 = t2.get$y(other);
      if (typeof t4 !== "number")
        return t4.$sub();
      if (typeof t2 !== "number")
        return H.iae(t2);
      t2 = new P.Point(t1 - t3, t4 - t2);
      t2.$builtinTypeInfo = this.$builtinTypeInfo;
      return t2;
    },
    $isPoint: true
  },
  _RectangleBase: {
    "": "Object;",
    toString$0: function(_) {
      return "Rectangle (" + H.S(this.get$left()) + ", " + H.S(this.top) + ") " + H.S(this.width) + " x " + H.S(this.height);
    },
    $eq: function(_, other) {
      var t1, t2;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isRectangle)
        return false;
      t1 = this.get$left();
      t2 = other.left;
      if (t1 == null ? t2 == null : t1 === t2) {
        t1 = this.top;
        t2 = other.top;
        if (t1 == null ? t2 == null : t1 === t2) {
          t1 = this.width;
          t2 = other.width;
          if (t1 == null ? t2 == null : t1 === t2) {
            t1 = this.height;
            t2 = other.height;
            t2 = t1 == null ? t2 == null : t1 === t2;
            t1 = t2;
          } else
            t1 = false;
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var t1, t2, t3, t4;
      t1 = J.get$hashCode$(this.get$left());
      t2 = J.get$hashCode$(this.top);
      t3 = J.get$hashCode$(this.width);
      t4 = J.get$hashCode$(this.height);
      return P._JenkinsSmiHash_finish(P._JenkinsSmiHash_combine(P._JenkinsSmiHash_combine(P._JenkinsSmiHash_combine(P._JenkinsSmiHash_combine(0, t1), t2), t3), t4));
    }
  },
  Rectangle: {
    "": "_RectangleBase;left<,top,width,height",
    $isRectangle: true,
    $as_RectangleBase: null
  }
}],
["dart.typed_data", "dart:typed_data", , P, {
  "": "",
  _ensureNativeList: function(list) {
    var t1, t2, result, i, t3;
    t1 = J.getInterceptor$asx(list);
    if (typeof list === "object" && list !== null && !!t1.$isJSIndexable)
      return list;
    t2 = t1.get$length(list);
    if (typeof t2 !== "number")
      return H.iae(t2);
    result = Array(t2);
    result.fixed$length = init;
    t2 = result.length;
    i = 0;
    while (true) {
      t3 = t1.get$length(list);
      if (typeof t3 !== "number")
        return H.iae(t3);
      if (!(i < t3))
        break;
      t3 = t1.$index(list, i);
      if (i >= t2)
        return H.ioore(result, i);
      result[i] = t3;
      ++i;
    }
    return result;
  },
  TypedData: {
    "": "Interceptor;",
    _invalidIndex$2: function(receiver, index, $length) {
      var t1 = J.getInterceptor$n(index);
      if (t1.$lt(index, 0) || t1.$ge(index, $length))
        throw H.wrapException(P.RangeError$range(index, 0, $length));
      else
        throw H.wrapException(new P.ArgumentError("Invalid list index " + H.S(index)));
    },
    "%": "DataView;ArrayBufferView;_NativeTypedArray|_NativeTypedArray_ListMixin|_NativeTypedArray_ListMixin_FixedLengthListMixin|_NativeTypedArrayOfDouble|_NativeTypedArray_ListMixin0|_NativeTypedArray_ListMixin_FixedLengthListMixin0|_NativeTypedArrayOfInt"
  },
  Float32List: {
    "": "_NativeTypedArrayOfDouble;",
    $index: function(receiver, index) {
      var t1, t2;
      t1 = receiver.length;
      if (!(index >>> 0 != index)) {
        if (typeof index !== "number")
          return index.$ge();
        t2 = index >= t1;
      } else
        t2 = true;
      if (t2)
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    },
    "%": "Float32Array"
  },
  Float64List: {
    "": "_NativeTypedArrayOfDouble;",
    $index: function(receiver, index) {
      var t1, t2;
      t1 = receiver.length;
      if (!(index >>> 0 != index)) {
        if (typeof index !== "number")
          return index.$ge();
        t2 = index >= t1;
      } else
        t2 = true;
      if (t2)
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    },
    "%": "Float64Array"
  },
  Int16List: {
    "": "_NativeTypedArrayOfInt;",
    $index: function(receiver, index) {
      var t1, t2;
      t1 = receiver.length;
      if (!(index >>> 0 != index)) {
        if (typeof index !== "number")
          return index.$ge();
        t2 = index >= t1;
      } else
        t2 = true;
      if (t2)
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    },
    "%": "Int16Array"
  },
  Int32List: {
    "": "_NativeTypedArrayOfInt;",
    $index: function(receiver, index) {
      var t1, t2;
      t1 = receiver.length;
      if (!(index >>> 0 != index)) {
        if (typeof index !== "number")
          return index.$ge();
        t2 = index >= t1;
      } else
        t2 = true;
      if (t2)
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    },
    "%": "Int32Array"
  },
  Int8List: {
    "": "_NativeTypedArrayOfInt;",
    $index: function(receiver, index) {
      var t1, t2;
      t1 = receiver.length;
      if (!(index >>> 0 != index)) {
        if (typeof index !== "number")
          return index.$ge();
        t2 = index >= t1;
      } else
        t2 = true;
      if (t2)
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    },
    "%": "Int8Array"
  },
  Uint16List: {
    "": "_NativeTypedArrayOfInt;",
    $index: function(receiver, index) {
      var t1, t2;
      t1 = receiver.length;
      if (!(index >>> 0 != index)) {
        if (typeof index !== "number")
          return index.$ge();
        t2 = index >= t1;
      } else
        t2 = true;
      if (t2)
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    },
    "%": "Uint16Array"
  },
  Uint32List: {
    "": "_NativeTypedArrayOfInt;",
    $index: function(receiver, index) {
      var t1, t2;
      t1 = receiver.length;
      if (!(index >>> 0 != index)) {
        if (typeof index !== "number")
          return index.$ge();
        t2 = index >= t1;
      } else
        t2 = true;
      if (t2)
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    },
    "%": "Uint32Array"
  },
  Uint8ClampedList: {
    "": "_NativeTypedArrayOfInt;",
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      var t1, t2;
      t1 = receiver.length;
      if (!(index >>> 0 != index)) {
        if (typeof index !== "number")
          return index.$ge();
        t2 = index >= t1;
      } else
        t2 = true;
      if (t2)
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    },
    "%": "CanvasPixelArray|Uint8ClampedArray"
  },
  Uint8List: {
    "": "_NativeTypedArrayOfInt;",
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      var t1, t2;
      t1 = receiver.length;
      if (!(index >>> 0 != index)) {
        if (typeof index !== "number")
          return index.$ge();
        t2 = index >= t1;
      } else
        t2 = true;
      if (t2)
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    },
    "%": ";Uint8Array"
  },
  _NativeTypedArray: {
    "": "TypedData;",
    get$length: function(receiver) {
      return receiver.length;
    },
    $isJavaScriptIndexingBehavior: true,
    $isJSIndexable: true
  },
  _NativeTypedArrayOfDouble: {
    "": "_NativeTypedArray_ListMixin_FixedLengthListMixin;",
    $isList: true,
    $asList: function() {
      return [J.JSDouble];
    }
  },
  _NativeTypedArray_ListMixin: {
    "": "_NativeTypedArray+ListMixin;",
    $isList: true,
    $asList: function() {
      return [J.JSDouble];
    }
  },
  _NativeTypedArray_ListMixin_FixedLengthListMixin: {
    "": "_NativeTypedArray_ListMixin+FixedLengthListMixin;"
  },
  _NativeTypedArrayOfInt: {
    "": "_NativeTypedArray_ListMixin_FixedLengthListMixin0;",
    $isList: true,
    $asList: function() {
      return [J.JSInt];
    }
  },
  _NativeTypedArray_ListMixin0: {
    "": "_NativeTypedArray+ListMixin;",
    $isList: true,
    $asList: function() {
      return [J.JSInt];
    }
  },
  _NativeTypedArray_ListMixin_FixedLengthListMixin0: {
    "": "_NativeTypedArray_ListMixin0+FixedLengthListMixin;"
  }
}],
["dart2js._js_primitives", "dart:_js_primitives", , H, {
  "": "",
  printString: function(string) {
    if (typeof dartPrint == "function") {
      dartPrint(string);
      return;
    }
    if (typeof console == "object" && typeof console.log == "function") {
      console.log(string);
      return;
    }
    if (typeof window == "object")
      return;
    if (typeof print == "function") {
      print(string);
      return;
    }
    throw "Unable to print message: " + String(string);
  }
}],
["solar3d", "solar.dart", , G, {
  "": "",
  printLog: function(log) {
  },
  main: [function() {
    $.get$application().startup$1("#container");
  }, "call$0", "main$closure", 0, 0, 0],
  Camera: {
    "": "Object;eyePosition,upDirection,lookAtPosition,zNear,zFar,aspectRatio,fOV",
    toString$0: function(_) {
      return H.S(this.eyePosition) + " -> " + H.S(this.lookAtPosition);
    },
    Camera$0: function() {
      var t1 = new T.Vector3(new Float32Array(3));
      t1.setValues$3(0, 2, 0);
      this.eyePosition = t1;
      t1 = new T.Vector3(new Float32Array(3));
      t1.setValues$3(1, 2, -1);
      this.lookAtPosition = t1;
      t1 = new T.Vector3(new Float32Array(3));
      t1.setValues$3(0, 1, 0);
      this.upDirection = t1;
      this.fOV = 0.35;
      this.zNear = 1;
      this.zFar = 1000;
      this.aspectRatio = 1.7777778;
    }
  },
  OrbitPath: {
    "": "Object;_gl,_vertexBuffer,shader,_vertexStride,_vertexCount,_radiusLocation,_originLocation,_colorLocation,_cameraLocation,_positionAttributeIndex",
    _makeShader$0: function() {
      var t1, t2;
      t1 = new G.Shader("      precision highp float;\n      attribute vec3 vPosition;\n\n      uniform vec4 origin;\n      uniform float radius;\n\n      uniform mat4 cameraTransform;\n      void main() {\n        vec4 vPosition4 = vec4(vPosition.x*radius,\n                               vPosition.y*radius,\n                               vPosition.z*radius, 1.0);\n        vPosition4 += origin;\n        gl_Position = cameraTransform*vPosition4;\n      }\n", "      precision highp float;\n      uniform vec4 color;\n      void main() {\n        gl_FragColor = color;\n      }\n", null, null, null);
      this.shader = t1;
      t2 = this._gl;
      t1.compile$1(t2);
      this.shader.link$1(t2);
      this._cameraLocation = J.getUniformLocation$2$x(t2, this.shader.program, "cameraTransform");
      this._originLocation = t2.getUniformLocation(this.shader.program, "origin");
      this._radiusLocation = t2.getUniformLocation(this.shader.program, "radius");
      this._colorLocation = t2.getUniformLocation(this.shader.program, "color");
      this._positionAttributeIndex = t2.getAttribLocation(this.shader.program, "vPosition");
    },
    _makePath$0: function() {
      var center, _circle_u, _circle_v, last, vertexPositions, alpha, t1, t2, p, vertexData;
      center = new T.Vector3(new Float32Array(3));
      _circle_u = new T.Vector3(new Float32Array(3));
      _circle_u.setValues$3(1, 0, 0);
      _circle_v = new T.Vector3(new Float32Array(3));
      _circle_v.setValues$3(0, 0, 1);
      last = center.$add(center, _circle_u.$mul(_circle_u, 1));
      vertexPositions = H.setRuntimeTypeInfo([], [J.JSDouble]);
      for (alpha = 0.09817477042468103; alpha <= 6.283185307179586; alpha += 0.09817477042468103, last = p) {
        t1 = Math.cos(alpha);
        t2 = new T.Vector3(new Float32Array(3));
        t2.setFrom$1(_circle_u);
        p = center.$add(center, t2.scale$1(t2, 1 * t1));
        t1 = Math.sin(alpha);
        t2 = new T.Vector3(new Float32Array(3));
        t2.setFrom$1(_circle_v);
        p = p.$add(p, t2.scale$1(t2, 1 * t1));
        t1 = p.storage;
        vertexPositions.push(t1[0]);
        vertexPositions.push(t1[1]);
        vertexPositions.push(t1[2]);
        t1 = last.storage;
        vertexPositions.push(t1[0]);
        vertexPositions.push(t1[1]);
        vertexPositions.push(t1[2]);
      }
      t1 = center.$add(center, _circle_u.$mul(_circle_u, 1)).storage;
      vertexPositions.push(t1[0]);
      vertexPositions.push(t1[1]);
      vertexPositions.push(t1[2]);
      t1 = last.storage;
      vertexPositions.push(t1[0]);
      vertexPositions.push(t1[1]);
      vertexPositions.push(t1[2]);
      vertexData = new Float32Array(P._ensureNativeList(vertexPositions));
      t1 = this._gl;
      t2 = J.createBuffer$0$x(t1);
      this._vertexBuffer = t2;
      t1.bindBuffer(34962, t2);
      t1.bufferData(34962, vertexData, 35044);
      this._vertexCount = C.JSInt_methods._tdivFast$1(vertexPositions.length, 3);
      this._vertexStride = 12;
    }
  },
  PlanetShader: {
    "": "Object;shader,gl,cameraTransformLocation,objectTransformLocation,viewTransformLocation,objectScaleLocation,planetIndexLocation,_cameraTransform,_objectTransform,_viewTransform,_objectScale",
    set$objectScale: function(m) {
      var t1 = this._objectScale;
      t1[0] = m;
      t1[1] = m;
      t1[2] = m;
      t1[3] = 1;
      J.uniform4fv$2$x(this.gl, this.objectScaleLocation, t1);
    },
    PlanetShader$1: function(gl) {
      this.shader = new G.Shader("precision highp float;\n\nattribute vec3 vPosition;\nattribute vec3 vNormal;\nattribute vec2 vTexCoord;\n\nuniform mat4 objectTransform;\nuniform vec4 objectScale;\nuniform mat4 cameraTransform;\nuniform mat4 viewTransform;\n\nvarying vec2 samplePoint;\nvarying vec3 normal;\nvarying vec3 lightDir;\nvarying float lightDistance;\n\nvoid main() {\n  // modelView goes from model space to view space.\n  mat4 modelView = viewTransform*objectTransform;\n  // Transform light position into view space.\n  vec4 lightPosition = viewTransform * vec4(0.0, 0.0, 0.0, 1.0);\n  vec4 vPosition4 = vec4(vPosition.x*objectScale.x,\n                         vPosition.y*objectScale.y,\n                         vPosition.z*objectScale.z, 1.0);\n  // Vertex position in view space.\n  vec4 ecPos = modelView*vPosition4;\n  // Vector from light position to vertex position (both in view space).\n  vec3 aux = vec3(lightPosition-ecPos);\n  lightDistance = length(aux);\n  lightDir = normalize(aux);\n  // Translate normal by object's transformation.\n  vec4 vNormal4 = vec4(vNormal.x, vNormal.y, vNormal.z, 0.0);\n  normal = (modelView*vNormal4).xyz;\n  samplePoint = vTexCoord;\n  gl_Position = cameraTransform*objectTransform*vPosition4;\n}\n", "precision mediump float;\n\nvarying vec2 samplePoint;\nvarying vec3 normal;\nvarying vec3 lightDir;\n\nuniform sampler2D diffuse;\nuniform sampler2D clouds;\nuniform int planetIndex;\n\nvoid main() {\n  vec4 mix = texture2D(diffuse, samplePoint);\n  vec3 n = normalize(normal);\n  vec3 ldn = normalize(lightDir);\n  float NdotL = max(dot(n, ldn), 0.0);\n  if (NdotL > 0.0) {\n    mix += NdotL * vec4(1.0, 0.5, 0.0, 0.0);\n  }\n  gl_FragColor = mix;\n}\n", null, null, null);
      this._cameraTransform = new Float32Array(16);
      this._objectTransform = new Float32Array(16);
      this._viewTransform = new Float32Array(16);
      this._objectScale = new Float32Array(4);
    }
  },
  Shader: {
    "": "Object;vertexShaderSource,fragmentShaderSource,vertexShader,fragmentShader,program",
    compile$1: function(gl) {
      var t1 = J.createShader$1$x(gl, 35633);
      this.vertexShader = t1;
      gl.shaderSource(t1, this.vertexShaderSource);
      gl.compileShader(this.vertexShader);
      G.printLog(gl.getShaderInfoLog(this.vertexShader));
      t1 = gl.createShader(35632);
      this.fragmentShader = t1;
      gl.shaderSource(t1, this.fragmentShaderSource);
      gl.compileShader(this.fragmentShader);
      G.printLog(gl.getShaderInfoLog(this.fragmentShader));
    },
    link$1: function(gl) {
      var t1 = J.createProgram$0$x(gl);
      this.program = t1;
      gl.attachShader(t1, this.vertexShader);
      gl.attachShader(this.program, this.fragmentShader);
      gl.linkProgram(this.program);
      G.printLog(gl.getProgramInfoLog(this.program));
      this.dumpUniforms$1(gl);
      this.dumpAttributes$1(gl);
    },
    dumpUniforms$1: function(gl) {
      var numUniforms, i, uniform;
      numUniforms = gl.getProgramParameter(this.program, 35718);
      G.printLog("Dumping active uniforms:");
      if (typeof numUniforms !== "number")
        return H.iae(numUniforms);
      i = 0;
      for (; i < numUniforms; ++i) {
        uniform = gl.getActiveUniform(this.program, i);
        "" + i;
        uniform.name;
      }
    },
    dumpAttributes$1: function(gl) {
      var numAttributes, i, attribute;
      numAttributes = gl.getProgramParameter(this.program, 35721);
      G.printLog("Dumping active attributes:");
      if (typeof numAttributes !== "number")
        return H.iae(numAttributes);
      i = 0;
      for (; i < numAttributes; ++i) {
        attribute = gl.getActiveAttrib(this.program, i);
        "" + i;
        attribute.name;
      }
    }
  },
  Skybox: {
    "": "Object;gl,indexBuffer,vertexBuffer,vertexShader,fragmentShader,program,_cameraTransformLocation,_positionAttributeIndex,_textureAttributeIndex,_vertexCount,_vertexStride,_cameraTransform",
    _setupBuffers$0: function() {
      var vertexData, writeCursor, i, writeCursor0, t1, t2, t3, t4;
      vertexData = new Float32Array(144);
      for (writeCursor = 0, i = 0; i < 72; i += 3) {
        writeCursor0 = writeCursor + 1;
        t1 = C.List_KIf[i];
        if (writeCursor >= 144)
          return H.ioore(vertexData, writeCursor);
        vertexData[writeCursor] = t1;
        writeCursor = writeCursor0 + 1;
        t2 = i + 1;
        if (t2 >= 72)
          return H.ioore(C.List_KIf, t2);
        t3 = C.List_KIf[t2];
        if (writeCursor0 >= 144)
          return H.ioore(vertexData, writeCursor0);
        vertexData[writeCursor0] = t3;
        writeCursor0 = writeCursor + 1;
        t3 = i + 2;
        if (t3 >= 72)
          return H.ioore(C.List_KIf, t3);
        t4 = C.List_KIf[t3];
        if (writeCursor >= 144)
          return H.ioore(vertexData, writeCursor);
        vertexData[writeCursor] = t4;
        writeCursor = writeCursor0 + 1;
        if (writeCursor0 >= 144)
          return H.ioore(vertexData, writeCursor0);
        vertexData[writeCursor0] = t1;
        writeCursor0 = writeCursor + 1;
        t2 = C.List_KIf[t2];
        if (writeCursor >= 144)
          return H.ioore(vertexData, writeCursor);
        vertexData[writeCursor] = t2;
        writeCursor = writeCursor0 + 1;
        t3 = C.List_KIf[t3];
        if (writeCursor0 >= 144)
          return H.ioore(vertexData, writeCursor0);
        vertexData[writeCursor0] = t3;
      }
      t1 = this.gl;
      t2 = J.createBuffer$0$x(t1);
      this.vertexBuffer = t2;
      t1.bindBuffer(34962, t2);
      t1.bufferData(34962, vertexData, 35044);
      t2 = t1.createBuffer();
      this.indexBuffer = t2;
      t1.bindBuffer(34963, t2);
      t1.bufferData(34963, new Uint16Array(P._ensureNativeList(C.List_5ST)), 35044);
      this._vertexCount = 36;
      this._vertexStride = 24;
    },
    _setupProgram$0: function() {
      var t1, t2;
      t1 = this.gl;
      t2 = J.createShader$1$x(t1, 35633);
      this.vertexShader = t2;
      t1.shaderSource(t2, "      attribute vec3 vPosition;\n      attribute vec3 vTexCoord;\n      uniform mat4 cameraTransform;\n\n      varying vec3 samplePoint;\n\n      void main(void)\n      {\n        vec4 vPosition4 = vec4(vPosition.x*512.0,\n                               vPosition.y*512.0,\n                               vPosition.z*512.0,\n                               1.0);\n        gl_Position = cameraTransform*vPosition4;\n        samplePoint = vTexCoord;\n      }\n    ");
      t1.compileShader(this.vertexShader);
      G.printLog(t1.getShaderInfoLog(this.vertexShader));
      t2 = t1.createShader(35632);
      this.fragmentShader = t2;
      t1.shaderSource(t2, "      precision highp float;\n      varying vec3 samplePoint;\n      uniform samplerCube skyMap;\n\n      void main(void)\n      {\n        vec4 color = textureCube(skyMap, samplePoint);\n        //gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n        gl_FragColor = vec4(color.xyz, 1.0);\n      }\n    ");
      t1.compileShader(this.fragmentShader);
      G.printLog(t1.getShaderInfoLog(this.fragmentShader));
      t2 = t1.createProgram();
      this.program = t2;
      t1.attachShader(t2, this.vertexShader);
      t1.attachShader(this.program, this.fragmentShader);
      t1.linkProgram(this.program);
      G.printLog(t1.getProgramInfoLog(this.program));
      this._cameraTransformLocation = t1.getUniformLocation(this.program, "cameraTransform");
      this._positionAttributeIndex = t1.getAttribLocation(this.program, "vPosition");
      this._textureAttributeIndex = t1.getAttribLocation(this.program, "vTexCoord");
    }
  },
  Solar3DApplication: {
    "": "Object;glContext,canvas,planetShader,textureManager,random,camera,skyBox,controller,solarSystem,orbitPath,ownMouse,keyCodeLeft,keyCodeRight,keyCodeE,keyCodeF,keyCodeJ,keyCodeS,renderTime",
    startup$1: function(canvasId) {
      var t1, $location, t2, baseUrl, indexList, t3, futures;
      t1 = document.querySelector(canvasId);
      this.canvas = t1;
      t1 = J.getContext$1$x(t1, "experimental-webgl");
      this.glContext = t1;
      if (t1 == null) {
        this.canvas.parentElement.textContent = ">>> Browser does not support WebGL <<<";
        return;
      }
      $location = J.get$href$x(C.Window_methods.get$location(window));
      t1 = J.getInterceptor$asx($location);
      t2 = t1.get$length($location);
      if (typeof t2 !== "number")
        return t2.$sub();
      baseUrl = t1.substring$2($location, 0, t2 - 10) + "textures/";
      t2 = new G.TextureManager(this.glContext, baseUrl, null);
      t2.textures = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, G.Texture);
      this.textureManager = t2;
      this.solarSystem = new G.SolarSystem(null, 0.1, 0, H.setRuntimeTypeInfo([], [G.PlanetaryBody]), null);
      t2 = new G.Skybox(this.glContext, null, null, null, null, null, null, null, null, null, null, null);
      t2._setupBuffers$0();
      t2._setupProgram$0();
      t2._cameraTransform = new Float32Array(16);
      this.skyBox = t2;
      t2 = new G.OrbitPath(this.glContext, null, null, null, null, null, null, null, null, null);
      t2._makePath$0();
      t2._makeShader$0();
      this.orbitPath = t2;
      t2 = this.canvas;
      t1 = t2.parentElement;
      J.set$width$x(t2, H.setRuntimeTypeInfo(new P.Rectangle(t1.clientLeft, t1.clientTop, t1.clientWidth, t1.clientHeight), [null]).width);
      J.set$height$x(this.canvas, 400);
      t1 = this.glContext;
      t2 = J.createBuffer$0$x(t1);
      $.SphereModel_indexBuffer = t2;
      t1.bindBuffer(34963, t2);
      t2 = $.get$_sphereData();
      indexList = J.$index$asx(J.$index$asx(J.$index$asx(t2, "meshes"), 0), "indices");
      t1.bufferData(34963, new Uint16Array(P._ensureNativeList(indexList)), 35044);
      $.SphereModel__vertexCount = J.get$length$asx(indexList);
      $.SphereModel__vertexStride = J.$index$asx(J.$index$asx(J.$index$asx(J.$index$asx(J.$index$asx(t2, "meshes"), 0), "attributes"), "POSITION"), "stride");
      t3 = t1.createBuffer();
      $.SphereModel_vertexBuffer = t3;
      t1.bindBuffer(34962, t3);
      t1.bufferData(34962, new Float32Array(P._ensureNativeList(J.$index$asx(J.$index$asx(J.$index$asx(t2, "meshes"), 0), "vertices"))), 35044);
      t2 = this.glContext;
      t1 = new G.PlanetShader(null, t2, null, null, null, null, null, null, null, null, null);
      t1.PlanetShader$1(t2);
      this.planetShader = t1;
      t1.shader.compile$1(t2);
      t1.shader.link$1(t2);
      t1.cameraTransformLocation = J.getUniformLocation$2$x(t2, t1.shader.program, "cameraTransform");
      t1.objectTransformLocation = t2.getUniformLocation(t1.shader.program, "objectTransform");
      t1.objectScaleLocation = t2.getUniformLocation(t1.shader.program, "objectScale");
      t1.viewTransformLocation = t2.getUniformLocation(t1.shader.program, "viewTransform");
      t1.planetIndexLocation = t2.getUniformLocation(t1.shader.program, "planetIndex");
      t2.useProgram(t1.shader.program);
      t2.uniform1i(t2.getUniformLocation(t1.shader.program, "diffuse"), 0);
      t2.uniform1i(t2.getUniformLocation(t1.shader.program, "clouds"), 1);
      t1 = this.glContext;
      t2 = this.planetShader.shader.program;
      $.SphereModel__positionAttributeIndex = J.getAttribLocation$2$x(t1, t2, "vPosition");
      $.SphereModel__textureAttributeIndex = t1.getAttribLocation(t2, "vTexCoord");
      $.SphereModel__normalAttributeIndex = t1.getAttribLocation(t2, "vNormal");
      futures = H.setRuntimeTypeInfo([], [P.Future]);
      t2 = this.textureManager;
      futures.push(t2.load$1(t2, "earth_diffuse.jpg"));
      t2 = this.textureManager;
      futures.push(t2.load$1(t2, "sun_diffuse.jpg"));
      t2 = this.textureManager;
      futures.push(t2.load$1(t2, "mars_diffuse.jpg"));
      t2 = this.textureManager;
      futures.push(t2.load$1(t2, "venus_diffuse.jpg"));
      t2 = this.textureManager;
      futures.push(t2.load$1(t2, "mercury_diffuse.jpg"));
      t2 = this.textureManager;
      futures.push(t2.load$1(t2, "moon_diffuse.jpg"));
      t2 = this.textureManager;
      futures.push(t2.load$1(t2, "jupiter_diffuse.jpg"));
      t2 = this.textureManager;
      futures.push(t2.load$1(t2, "saturn_diffuse.jpg"));
      t2 = this.textureManager;
      futures.push(t2.load$1(t2, "uranus_diffuse.jpg"));
      t2 = this.textureManager;
      futures.push(t2.load$1(t2, "neptune_diffuse.jpg"));
      futures.push(this.textureManager.loadCube$2("Sky", ["positiveX.jpg", "negativeX.jpg", "positiveY.jpg", "negativeY.jpg", "positiveZ.jpg", "negativeZ.jpg"]));
      P.Future_wait(futures, false).then$1(new G.Solar3DApplication_startup_closure(this));
    },
    clicked$1: [function($event) {
      this.canvas.webkitRequestPointerLock();
    }, "call$1", "get$clicked", 2, 0, 19],
    pointerLockChange$1: [function($event) {
      var t1, t2;
      t1 = this.canvas;
      t2 = document.webkitPointerLockElement;
      this.ownMouse = t1 == null ? t2 == null : t1 === t2;
    }, "call$1", "get$pointerLockChange", 2, 0, 19],
    keydown$1: [function($event) {
      if (!this.ownMouse)
        return;
    }, "call$1", "get$keydown", 2, 0, 20],
    keyup$1: [function($event) {
      var t1, t2;
      if (!this.ownMouse)
        return;
      if (J.get$keyCode$x($event) === this.keyCodeLeft) {
        t1 = this.solarSystem;
        t1.selectedPlanet = C.JSInt_methods.$mod(t1.selectedPlanet - 1, t1.planets.length);
      }
      if ($event.keyCode === this.keyCodeRight) {
        t1 = this.solarSystem;
        t1.selectedPlanet = C.JSInt_methods.$mod(t1.selectedPlanet + 1, t1.planets.length);
      }
      if ($event.keyCode === this.keyCodeJ)
        this.solarSystem.selectPlanet$1("Jupiter");
      if ($event.keyCode === this.keyCodeS)
        this.solarSystem.selectPlanet$1("Sun");
      if ($event.keyCode === this.keyCodeF) {
        t1 = this.canvas;
        t2 = document.webkitFullscreenElement;
        if (t1 == null ? t2 == null : t1 === t2)
          document.cancelFullScreen$0();
        else
          t1.webkitRequestFullscreen();
      }
      if ($event.keyCode === this.keyCodeE)
        this.solarSystem.selectPlanet$1("Earth");
    }, "call$1", "get$keyup", 2, 0, 20],
    mouseMove$1: [function($event) {
      var t1, t2, t3;
      if (!this.ownMouse)
        return;
      t1 = this.controller;
      t2 = t1.accumScroll;
      t3 = J.get$movement$x($event).y;
      if (typeof t3 !== "number")
        return H.iae(t3);
      t1.accumScroll = t2 + t3;
      $event.preventDefault();
    }, "call$1", "get$mouseMove", 2, 0, 21],
    mouseWheel$1: [function($event) {
      var t1, t2, t3, t4;
      if (!this.ownMouse)
        return;
      t1 = J.getInterceptor($event);
      if (typeof $event === "object" && $event !== null && !!t1.$isWheelEvent) {
        t2 = this.controller;
        t2.mouseSensitivity = 720;
        t3 = t2.accumDX;
        t4 = t1.get$deltaX($event);
        if (typeof t4 !== "number")
          return H.iae(t4);
        t2.accumDX = t3 - t4;
        t4 = t2.accumDY;
        t3 = C.WheelEvent_methods.get$deltaY($event);
        if (typeof t3 !== "number")
          return H.iae(t3);
        t2.accumDY = t4 + t3;
      }
      t1.preventDefault$0($event);
    }, "call$1", "get$mouseWheel", 2, 0, 21],
    fullscreenChange$1: [function($event) {
      var t1, t2, t3;
      t1 = this.canvas;
      t2 = t1.parentElement;
      J.set$width$x(t1, H.setRuntimeTypeInfo(new P.Rectangle(t2.clientLeft, t2.clientTop, t2.clientWidth, t2.clientHeight), [null]).width);
      t2 = this.canvas;
      t1 = t2.parentElement;
      J.set$height$x(t2, H.setRuntimeTypeInfo(new P.Rectangle(t1.clientLeft, t1.clientTop, t1.clientWidth, t1.clientHeight), [null]).height);
      t1 = this.canvas;
      t2 = J.getInterceptor$x(t1);
      t3 = t2.get$width(t1);
      t1 = t2.get$height(t1);
      if (typeof t3 !== "number")
        return t3.$div();
      if (typeof t1 !== "number")
        return H.iae(t1);
      this.camera.aspectRatio = t3 / t1;
    }, "call$1", "get$fullscreenChange", 2, 0, 19],
    update$1: [function(time) {
      var t1, t2, t3, $P, t4, t5;
      t1 = Date.now();
      new P.DateTime(t1, false).DateTime$_now$0();
      t2 = this.renderTime;
      if (t2 != null) {
        if (typeof t2 !== "number")
          return H.iae(t2);
        t2 = C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(1000 / (t1 - t2)));
        t3 = $.fpsAverage;
        if (t3 == null) {
          $.fpsAverage = t2;
          t3 = t2;
        }
        if (typeof t3 !== "number")
          return t3.$mul();
        $.fpsAverage = t2 * 0.05 + t3 * 0.95;
        document.querySelector("#notes").textContent = "" + C.JSNumber_methods.toInt$0(J.roundToDouble$0$n($.fpsAverage)) + " fps";
      }
      this.renderTime = t1;
      t1 = this.glContext;
      t2 = this.canvas;
      t3 = J.getInterceptor$x(t2);
      J.viewport$4$x(t1, 0, 0, t3.get$width(t2), t3.get$height(t2));
      J.clearColor$4$x(this.glContext, 0, 0, 0, 1);
      J.clearDepth$1$x(this.glContext, 1);
      J.clear$1$ax(this.glContext, 16640);
      J.disable$1$x(this.glContext, 2884);
      J.disable$1$x(this.glContext, 2929);
      this.textureManager.bind$1("Sky");
      t2 = this.skyBox;
      t3 = t2.gl;
      J.bindBuffer$2$x(t3, 34962, t2.vertexBuffer);
      t3.enableVertexAttribArray(t2._positionAttributeIndex);
      t3.vertexAttribPointer(t2._positionAttributeIndex, 3, 5126, false, t2._vertexStride, 0);
      t3.bindBuffer(34962, t2.vertexBuffer);
      t3.enableVertexAttribArray(t2._textureAttributeIndex);
      t3.vertexAttribPointer(t2._textureAttributeIndex, 3, 5126, false, t2._vertexStride, 12);
      t2 = this.skyBox;
      t3 = this.camera;
      t2.toString;
      $P = T.makePerspectiveMatrix(t3.fOV, t3.aspectRatio, t3.zNear, t3.zFar);
      t1 = new Float32Array(3);
      t4 = t3.lookAtPosition;
      t4 = t4.$sub(t4, t3.eyePosition);
      t5 = new T.Vector3(new Float32Array(3));
      t5.setValues$3(0, 1, 0);
      $P.multiply$1(T.makeViewMatrix(new T.Vector3(t1), t4, t5));
      $P.copyIntoArray$2(t2._cameraTransform, 0);
      t5 = t2.gl;
      J.useProgram$1$x(t5, t2.program);
      t5.uniformMatrix4fv(t2._cameraTransformLocation, false, t2._cameraTransform);
      t5.bindBuffer(34963, t2.indexBuffer);
      t5.drawElements(4, t2._vertexCount, 5123, 0);
      J.enable$1$x(this.glContext, 2884);
      J.enable$1$x(this.glContext, 2929);
      this.solarSystem.draw$4(this.glContext, this.controller, t3, time);
      t3 = window;
      t2 = this.get$update();
      C.Window_methods._ensureRequestAnimationFrame$0(t3);
      C.Window_methods._requestAnimationFrame$1(t3, W._wrapZone(t2));
    }, "call$1", "get$update", 2, 0, 22]
  },
  Solar3DApplication_startup_closure: {
    "": "Closure:11;this_0",
    call$1: function(_) {
      var t1, t2, t3, t4, planet, earth;
      t1 = this.this_0;
      t2 = C.EventStreamProvider_webkitpointerlockchange.forTarget$1(document);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t2._target, t2._eventType, W._wrapZone(t1.get$pointerLockChange()), t2._useCapture), [H.getTypeArgumentByIndex(t2, 0)])._tryResume$0();
      t2 = t1.canvas;
      t2.toString;
      t2 = C.EventStreamProvider_click.forElement$1(t2);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t2._target, t2._eventType, W._wrapZone(t1.get$clicked()), t2._useCapture), [H.getTypeArgumentByIndex(t2, 0)])._tryResume$0();
      t2 = C.EventStreamProvider_keydown.forTarget$1(document);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t2._target, t2._eventType, W._wrapZone(t1.get$keydown()), t2._useCapture), [H.getTypeArgumentByIndex(t2, 0)])._tryResume$0();
      t2 = C.EventStreamProvider_keyup.forTarget$1(document);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t2._target, t2._eventType, W._wrapZone(t1.get$keyup()), t2._useCapture), [H.getTypeArgumentByIndex(t2, 0)])._tryResume$0();
      t2 = C.EventStreamProvider_mousemove.forTarget$1(document);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t2._target, t2._eventType, W._wrapZone(t1.get$mouseMove()), t2._useCapture), [H.getTypeArgumentByIndex(t2, 0)])._tryResume$0();
      t2 = C._CustomEventStreamProvider__determineMouseWheelEventType.forTarget$1(window);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t2._target, t2._eventType, W._wrapZone(t1.get$mouseWheel()), t2._useCapture), [H.getTypeArgumentByIndex(t2, 0)])._tryResume$0();
      t2 = C.EventStreamProvider_webkitfullscreenchange.forTarget$1(document);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t2._target, t2._eventType, W._wrapZone(t1.get$fullscreenChange()), t2._useCapture), [H.getTypeArgumentByIndex(t2, 0)])._tryResume$0();
      t2 = t1.canvas;
      t3 = J.getInterceptor$x(t2);
      t4 = t3.get$width(t2);
      t2 = t3.get$height(t2);
      if (typeof t4 !== "number")
        return t4.$div();
      if (typeof t2 !== "number")
        return H.iae(t2);
      t1.camera.aspectRatio = t4 / t2;
      t2 = t1.solarSystem;
      t2.toString;
      t4 = G.PlanetaryBody$(t2, "Sun", "sun_diffuse.jpg", 50, 0, 0);
      t2.sun = t4;
      t2.planets.push(t4);
      planet = G.PlanetaryBody$(t2, "Mercury", "mercury_diffuse.jpg", 4, 57, 0.241);
      t2.planets.push(planet);
      t2.sun.planets.push(planet);
      planet = G.PlanetaryBody$(t2, "Venus", "venus_diffuse.jpg", 8, 100, 0.615);
      t2.sun.planets.push(planet);
      t2.planets.push(planet);
      earth = G.PlanetaryBody$(t2, "Earth", "earth_diffuse.jpg", 30, 130, 1);
      t2.sun.planets.push(earth);
      t2.planets.push(earth);
      planet = G.PlanetaryBody$(t2, "Moon", "moon_diffuse.jpg", 1, 20, 0.075);
      t2.planets.push(planet);
      earth.planets.push(planet);
      planet = G.PlanetaryBody$(t2, "Mars", "mars_diffuse.jpg", 6, 180, 1.88);
      t2.sun.planets.push(planet);
      t2.planets.push(planet);
      planet = G.PlanetaryBody$(t2, "Jupiter", "jupiter_diffuse.jpg", 20, 300, 11.86);
      t2.sun.planets.push(planet);
      t2.planets.push(planet);
      planet = G.PlanetaryBody$(t2, "Saturn", "saturn_diffuse.jpg", 17, 400, 9.86);
      t2.sun.planets.push(planet);
      t2.planets.push(planet);
      planet = G.PlanetaryBody$(t2, "Uranus", "uranus_diffuse.jpg", 10, 450, 15.86);
      t2.sun.planets.push(planet);
      t2.planets.push(planet);
      planet = G.PlanetaryBody$(t2, "Neptune", "neptune_diffuse.jpg", 10, 500, 8.86);
      t2.sun.planets.push(planet);
      t2.planets.push(planet);
      t2 = window;
      t1 = t1.get$update();
      C.Window_methods._ensureRequestAnimationFrame$0(t2);
      C.Window_methods._requestAnimationFrame$1(t2, W._wrapZone(t1));
    }
  },
  SolarSystem: {
    "": "Object;sun,globalScale,selectedPlanet,planets,lastTime",
    selectPlanet$1: function(planetName) {
      var t1, t2, i;
      for (t1 = this.planets, t2 = t1.length, i = 0; i < t2; ++i)
        if (t1[i].name === planetName) {
          this.selectedPlanet = i;
          break;
        }
    },
    draw$4: function(gl, controller, camera, t) {
      var t1, dt, t2, planet, t3, t4, cosUpAngle, sinUpAngle, cosSideAngle, sinSideAngle, projectionMatrix, viewMatrix, v;
      t1 = this.lastTime;
      if (t1 == null) {
        this.lastTime = t;
        return;
      }
      dt = J.$div$n(J.$sub$n(t, t1), 1000);
      this.lastTime = t;
      t1 = this.planets;
      t2 = this.selectedPlanet;
      if (t2 < 0 || t2 >= t1.length)
        return H.ioore(t1, t2);
      planet = t1[t2];
      t2 = planet.bodySize * 2 + 0.5;
      controller._minRadius = t2;
      if (controller.radius < t2)
        controller.radius = t2;
      t1 = controller._origin;
      t1.setFrom$1(planet.position);
      t2 = controller.accumScroll;
      if (typeof dt !== "number")
        return H.iae(dt);
      t2 = controller.radius + t2 * controller.zoomVelocity * dt;
      controller.radius = t2;
      t3 = controller._minRadius;
      if (t2 < t3)
        controller.radius = t3;
      t2 = controller.accumDX;
      t3 = controller.mouseSensitivity;
      t4 = controller.accumDY;
      t4 = controller.sideAngle + t4 / t3;
      controller.sideAngle = t4;
      if (t4 < 1.04719)
        controller.sideAngle = 1.04719;
      else if (t4 > 2.09438)
        controller.sideAngle = 2.09438;
      controller.upAngle = controller.upAngle + t2 / t3;
      t2 = new T.Vector3(new Float32Array(3));
      t2.setFrom$1(t1);
      camera.lookAtPosition = t2;
      t2 = controller.upAngle;
      cosUpAngle = Math.cos(t2);
      t1 = controller.upAngle;
      sinUpAngle = Math.sin(t1);
      t1 = controller.sideAngle;
      cosSideAngle = Math.cos(t1);
      t1 = controller.sideAngle;
      sinSideAngle = Math.sin(t1);
      t1 = controller.radius;
      t2 = t1 * sinSideAngle;
      t3 = camera.lookAtPosition;
      t4 = new T.Vector3(new Float32Array(3));
      t4.setValues$3(t2 * cosUpAngle, t1 * cosSideAngle, t2 * sinUpAngle);
      camera.eyePosition = t3.$add(t3, t4);
      controller.accumDX = 0;
      controller.accumDY = 0;
      controller.accumScroll = 0;
      projectionMatrix = T.makePerspectiveMatrix(camera.fOV, camera.aspectRatio, camera.zNear, camera.zFar);
      viewMatrix = T.makeViewMatrix(camera.eyePosition, camera.lookAtPosition, camera.upDirection);
      projectionMatrix.multiply$1(viewMatrix);
      t4 = $.get$application().planetShader;
      J.useProgram$1$x(t4.gl, t4.shader.program);
      t4 = $.get$application().planetShader;
      projectionMatrix.copyIntoArray$1(t4._cameraTransform);
      J.uniformMatrix4fv$3$x(t4.gl, t4.cameraTransformLocation, false, t4._cameraTransform);
      t4 = $.get$application().planetShader;
      viewMatrix.copyIntoArray$1(t4._viewTransform);
      J.uniformMatrix4fv$3$x(t4.gl, t4.viewTransformLocation, false, t4._viewTransform);
      $.get$application().planetShader.set$objectScale(1);
      t4 = $.get$application().orbitPath;
      t4.toString;
      v = new Float32Array(16);
      projectionMatrix.copyIntoArray$1(v);
      t3 = t4._gl;
      J.useProgram$1$x(t3, t4.shader.program);
      t3.uniformMatrix4fv(t4._cameraLocation, false, v);
      this.sun.draw$3(gl, 0, 0);
    }
  },
  PlanetaryBody: {
    "": "Object;name,texture,orbitPeriod,solarSystem,height,bodySize,angle,orbitRadius,orbitSpeed,position,planets",
    draw$3: function(context, x, y) {
      var t1, t2, t3, t4, t5, $T, cosAngle, sinAngle, t6, t7, t8, t9, t10, t11;
      t1 = this._calculatePos$2(x, y).storage;
      t2 = t1[0];
      t3 = t1[1];
      $.get$application().textureManager.bind$1(this.texture);
      t4 = this.height;
      t5 = new Float32Array(16);
      $T = new T.Matrix4(t5);
      $T.setIdentity$0();
      $T.setTranslationRaw$3(t2, t4, t3);
      t4 = this.position.storage;
      t4[0] = t2;
      t4[1] = this.height;
      t4[2] = t3;
      t3 = this.angle + 0.002;
      this.angle = t3;
      cosAngle = Math.cos(t3);
      sinAngle = Math.sin(t3);
      t2 = t5[0];
      t3 = t5[8];
      t4 = t5[1];
      t6 = t5[9];
      t7 = t5[2];
      t8 = t5[10];
      t9 = t5[3];
      t10 = t5[11];
      t11 = -sinAngle;
      t5[0] = t2 * cosAngle + t3 * sinAngle;
      t5[1] = t4 * cosAngle + t6 * sinAngle;
      t5[2] = t7 * cosAngle + t8 * sinAngle;
      t5[3] = t9 * cosAngle + t10 * sinAngle;
      t5[8] = t2 * t11 + t3 * cosAngle;
      t5[9] = t4 * t11 + t6 * cosAngle;
      t5[10] = t7 * t11 + t8 * cosAngle;
      t5[11] = t9 * t11 + t10 * cosAngle;
      t10 = $.get$application().planetShader;
      J.useProgram$1$x(t10.gl, t10.shader.program);
      $.get$application().planetShader.set$objectScale(this.bodySize);
      t10 = $.get$application().planetShader;
      $T.copyIntoArray$1(t10._objectTransform);
      J.uniformMatrix4fv$3$x(t10.gl, t10.objectTransformLocation, false, t10._objectTransform);
      J.bindBuffer$2$x(context, 34962, $.SphereModel_vertexBuffer);
      context.enableVertexAttribArray($.SphereModel__positionAttributeIndex);
      context.vertexAttribPointer($.SphereModel__positionAttributeIndex, 3, 5126, false, $.SphereModel__vertexStride, 0);
      context.bindBuffer(34962, $.SphereModel_vertexBuffer);
      context.enableVertexAttribArray($.SphereModel__normalAttributeIndex);
      context.vertexAttribPointer($.SphereModel__normalAttributeIndex, 3, 5126, false, $.SphereModel__vertexStride, 12);
      context.bindBuffer(34962, $.SphereModel_vertexBuffer);
      context.enableVertexAttribArray($.SphereModel__textureAttributeIndex);
      context.vertexAttribPointer($.SphereModel__textureAttributeIndex, 2, 5126, false, $.SphereModel__vertexStride, 48);
      context.bindBuffer(34963, $.SphereModel_indexBuffer);
      context.drawElements(4, $.SphereModel__vertexCount, 5123, 0);
      t10 = $.get$application().orbitPath;
      t11 = t10._gl;
      J.bindBuffer$2$x(t11, 34962, t10._vertexBuffer);
      t11.enableVertexAttribArray(t10._positionAttributeIndex);
      t11.vertexAttribPointer(t10._positionAttributeIndex, 3, 5126, false, t10._vertexStride, 0);
      t10 = $.get$application().orbitPath;
      t11 = this.orbitRadius;
      t9 = this.height;
      t5 = new Float32Array(3);
      new T.Vector3(t5).setValues$3(x, t9, y);
      t9 = new Float32Array(4);
      new T.Vector4(t9).setValues$4(1, 1, 0.8, 1);
      t8 = t10._gl;
      J.useProgram$1$x(t8, t10.shader.program);
      t8.uniform4f(t10._originLocation, t5[0], t5[1], t5[2], 0);
      t8.uniform4f(t10._colorLocation, t9[0], t9[1], t9[2], t9[3]);
      t8.uniform1f(t10._radiusLocation, t11);
      t8.drawArrays(1, 0, t10._vertexCount);
      this.drawChildren$3(context, t1[0], t1[1]);
    },
    drawChildren$3: function(context, x, y) {
      var t1;
      for (t1 = this.planets, t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();)
        t1._current.draw$3(context, x, y);
    },
    _calculateSpeed$1: function(period) {
      if (period === 0)
        return 0;
      else
        return 1 / (2880 * period);
    },
    _calculatePos$2: function(x, y) {
      var t1, t2, angle, t3, t4, t5;
      t1 = this.orbitSpeed;
      if (t1 === 0) {
        t1 = new Float32Array(2);
        t1[0] = x;
        t1[1] = y;
        return new T.Vector2(t1);
      } else {
        t2 = $.get$application().renderTime;
        if (typeof t2 !== "number")
          return t2.$mul();
        if (typeof t1 !== "number")
          return H.iae(t1);
        angle = t2 * t1;
        t1 = this.orbitRadius;
        t2 = Math.cos(angle);
        t3 = this.orbitRadius;
        t4 = Math.sin(angle);
        t5 = new Float32Array(2);
        t5[0] = t1 * t2 + x;
        t5[1] = t3 * t4 + y;
        return new T.Vector2(t5);
      }
    },
    PlanetaryBody$6: function(solarSystem, $name, texture, bodySize, orbitRadius, orbitPeriod) {
      var t1;
      this.planets = [];
      this.angle = 0;
      this.height = $.get$application().random.nextDouble$0();
      t1 = this.solarSystem.globalScale;
      this.bodySize = t1 * this.bodySize;
      this.orbitRadius = t1 * this.orbitRadius;
      this.orbitSpeed = this._calculateSpeed$1(this.orbitPeriod);
      this.position = new T.Vector3(new Float32Array(3));
    },
    static: {PlanetaryBody$: function(solarSystem, $name, texture, bodySize, orbitRadius, orbitPeriod) {
        var t1 = new G.PlanetaryBody($name, texture, orbitPeriod, solarSystem, null, bodySize, null, orbitRadius, null, null, null);
        t1.PlanetaryBody$6(solarSystem, $name, texture, bodySize, orbitRadius, orbitPeriod);
        return t1;
      }}
  },
  MouseSphereCameraController: {
    "": "Object;zoomVelocity,mouseSensitivity,upAngle,sideAngle,radius,accumDX,accumDY,accumScroll,_origin,_minRadius"
  },
  Texture: {
    "": "Object;bindingPoint<,texture"
  },
  TextureManager: {
    "": "Object;gl,baseURL,textures",
    load$1: function(_, $name) {
      var t1, t2, t, img, c, t3;
      t1 = {};
      t2 = this.textures;
      t = t2.$index(t2, $name);
      t1.t_0 = t;
      if (t == null) {
        t = new G.Texture(3553, null);
        t1.t_0 = t;
        t.texture = J.createTexture$0$x(this.gl);
        t2 = this.textures;
        t2.$indexSet(t2, $name, t1.t_0);
      }
      img = W.ImageElement_ImageElement(null, null, null);
      c = H.setRuntimeTypeInfo(new P._AsyncCompleter(P._Future$(null)), [null]);
      t2 = J.getInterceptor$x(img);
      t3 = t2.get$onLoad(img);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t3._target, t3._eventType, W._wrapZone(new G.TextureManager_load_closure(t1, this, img, c)), t3._useCapture), [H.getTypeArgumentByIndex(t3, 0)])._tryResume$0();
      t2.set$src(img, this.baseURL + $name);
      return c.future;
    },
    loadCube$2: function($name, sides) {
      var t1, t2, t, t3, sideTargets, futures, box_0, box_00, img, c, t4, t5, t6, t7;
      t1 = {};
      t2 = this.textures;
      t = t2.$index(t2, $name);
      t1.t_1 = t;
      if (t == null) {
        t = new G.Texture(34067, null);
        t1.t_1 = t;
        t2 = this.gl;
        t.texture = J.createTexture$0$x(t2);
        t3 = t1.t_1;
        t2.bindTexture(t3.get$bindingPoint(), t3.texture);
        t2.texParameteri(t1.t_1.get$bindingPoint(), 10241, 9729);
        t2.texParameteri(t1.t_1.get$bindingPoint(), 10240, 9729);
        t2 = this.textures;
        t2.$indexSet(t2, $name, t1.t_1);
      }
      sideTargets = [34069, 34070, 34071, 34072, 34073, 34074];
      futures = H.setRuntimeTypeInfo([], [P.Future]);
      box_0 = {};
      for (box_0.i_0 = 0, t2 = this.baseURL; box_0.i_0 < 6; box_00 = {}, t3 = box_0.i_0, box_00.i_0 = t3, box_00.i_0 = t3 + 1, box_0 = box_00) {
        img = W.ImageElement_ImageElement(null, null, null);
        t3 = new P._Future(0, $.Zone__current, null, null, null, null, null, null);
        t3.$builtinTypeInfo = [null];
        c = new P._AsyncCompleter(t3);
        c.$builtinTypeInfo = [null];
        futures.push(t3);
        t3 = J.getInterceptor$x(img);
        t4 = t3.get$onLoad(img);
        t5 = t4._eventType;
        t6 = t4._useCapture;
        t7 = new W._EventStreamSubscription(0, t4._target, t5, W._wrapZone(new G.TextureManager_loadCube_closure(t1, box_0, this, sideTargets, img, c)), t6);
        t7.$builtinTypeInfo = [H.getTypeArgumentByIndex(t4, 0)];
        t4 = t7._onData;
        if (t4 != null && t7._pauseCount <= 0)
          J.addEventListener$3$x(t7._target, t5, t4, t6);
        t4 = box_0.i_0;
        if (t4 >= 6)
          return H.ioore(sides, t4);
        t3.set$src(img, t2 + sides[t4]);
      }
      return P.Future_wait(futures, false);
    },
    bind$1: function($name) {
      var t1, t;
      t1 = this.textures;
      t = t1.$index(t1, $name);
      if (t == null) {
        P.print("Cannot find texture " + $name);
        return;
      }
      t1 = this.gl;
      J.bindTexture$2$x(t1, 3553, null);
      t1.bindTexture(34067, null);
      t1.bindTexture(t.get$bindingPoint(), t.texture);
    }
  },
  TextureManager_load_closure: {
    "": "Closure:11;box_0,this_1,img_2,c_3",
    call$1: function(_) {
      var t1, t2, t3;
      t1 = this.this_1.gl;
      t2 = this.box_0;
      t3 = t2.t_0;
      J.getInterceptor$x(t1).bindTexture$2(t1, t3.get$bindingPoint(), t3.texture);
      t3 = this.img_2;
      C.RenderingContext_methods.texImage2D$6(t1, t2.t_0.get$bindingPoint(), 0, 6408, 6408, 5121, t3);
      t1.generateMipmap(t2.t_0.get$bindingPoint());
      t3 = J.get$src$x(t3);
      t1 = this.c_3.future;
      if (t1._state !== 0)
        H.throwExpression(P.StateError$("Future already completed"));
      t1._asyncComplete$1(t3);
    }
  },
  TextureManager_loadCube_closure: {
    "": "Closure:11;box_1,box_0,this_2,sideTargets_3,img_4,c_5",
    call$1: function(_) {
      var t1, t2, t3, t4;
      t1 = this.this_2.gl;
      J.getInterceptor$x(t1).bindTexture$2(t1, 3553, null);
      t1.bindTexture(34067, null);
      t2 = this.box_1.t_1;
      t1.bindTexture(t2.get$bindingPoint(), t2.texture);
      t2 = this.sideTargets_3;
      t3 = this.box_0.i_0;
      if (t3 >= 6)
        return H.ioore(t2, t3);
      t4 = this.img_4;
      C.RenderingContext_methods.texImage2D$6(t1, t2[t3], 0, 6408, 6408, 5121, t4);
      t4 = J.get$src$x(t4);
      t1 = this.c_5.future;
      if (t1._state !== 0)
        H.throwExpression(P.StateError$("Future already completed"));
      t1._asyncComplete$1(t4);
    }
  }
},
1],
["vector_math", "package:vector_math/vector_math.dart", , T, {
  "": "",
  makeViewMatrix: function(cameraPosition, cameraFocusPosition, upDirection) {
    var t1, r, z, x, y, t2, temp, t3, rotatedEye;
    t1 = new Float32Array(16);
    r = new T.Matrix4(t1);
    z = cameraPosition.$sub(cameraPosition, cameraFocusPosition);
    z.normalize$0();
    x = upDirection.cross$1(z);
    x.normalize$0();
    y = z.cross$1(x);
    y.normalize$0();
    r.setZero$0();
    t1[15] = 1;
    t2 = x.storage;
    t1[0] = t2[0];
    t1[1] = t2[1];
    t1[2] = t2[2];
    t2 = y.storage;
    t1[4] = t2[0];
    t1[5] = t2[1];
    t1[6] = t2[2];
    t2 = z.storage;
    t1[8] = t2[0];
    t1[9] = t2[1];
    t1[10] = t2[2];
    temp = t1[4];
    t1[4] = t1[1];
    t1[1] = temp;
    temp = t1[8];
    t1[8] = t1[2];
    t1[2] = temp;
    temp = t1[12];
    t1[12] = t1[3];
    t1[3] = temp;
    temp = t1[9];
    t1[9] = t1[6];
    t1[6] = temp;
    temp = t1[13];
    t1[13] = t1[7];
    t1[7] = temp;
    temp = t1[14];
    t1[14] = t1[11];
    t1[11] = temp;
    t2 = cameraPosition.storage;
    t3 = new T.Vector3(new Float32Array(3));
    t3.setValues$3(-t2[0], -t2[1], -t2[2]);
    rotatedEye = r.$mul(r, t3);
    t1[12] = rotatedEye.get$x(rotatedEye);
    t1[13] = rotatedEye.get$y(rotatedEye);
    t1[14] = rotatedEye.get$z(rotatedEye);
    return r;
  },
  makePerspectiveMatrix: function(fovYRadians, aspectRatio, zNear, zFar) {
    var height, width, left, bottom, view, two_near, right_minus_left, top_minus_bottom, far_minus_near, t1;
    height = Math.tan(fovYRadians * 0.5) * zNear;
    width = height * aspectRatio;
    left = -width;
    bottom = -height;
    view = new T.Matrix4(new Float32Array(16));
    two_near = 2 * zNear;
    right_minus_left = width - left;
    top_minus_bottom = height - bottom;
    far_minus_near = zFar - zNear;
    t1 = view.setZero$0().storage;
    t1[0] = two_near / right_minus_left;
    t1[5] = two_near / top_minus_bottom;
    t1[8] = (width + left) / right_minus_left;
    t1[9] = (height + bottom) / top_minus_bottom;
    t1[10] = -(zFar + zNear) / far_minus_near;
    t1[11] = -1;
    t1[14] = -(two_near * zFar) / far_minus_near;
    return view;
  },
  Matrix4: {
    "": "Object;storage<",
    toString$0: function(_) {
      return "[0] " + H.S(this.getRow$1(0)) + "\n[1] " + H.S(this.getRow$1(1)) + "\n[2] " + H.S(this.getRow$1(2)) + "\n[3] " + H.S(this.getRow$1(3)) + "\n";
    },
    $index: function(_, i) {
      var t1 = this.storage;
      if (i >>> 0 !== i || i >= 16)
        return H.ioore(t1, i);
      return t1[i];
    },
    $indexSet: function(_, i, v) {
      var t1 = this.storage;
      if (i >>> 0 !== i || i >= 16)
        return H.ioore(t1, i);
      t1[i] = v;
    },
    getRow$1: function(row) {
      var t1, t2, t3;
      t1 = new Float32Array(4);
      t2 = this.storage;
      t3 = 0 + row;
      if (t3 >= 16)
        return H.ioore(t2, t3);
      t1[0] = t2[t3];
      t3 = 4 + row;
      if (t3 >= 16)
        return H.ioore(t2, t3);
      t1[1] = t2[t3];
      t3 = 8 + row;
      if (t3 >= 16)
        return H.ioore(t2, t3);
      t1[2] = t2[t3];
      t3 = 12 + row;
      if (t3 >= 16)
        return H.ioore(t2, t3);
      t1[3] = t2[t3];
      return new T.Vector4(t1);
    },
    $mul: function(_, arg) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9;
      t1 = new Float32Array(3);
      t2 = this.storage;
      t3 = t2[0];
      t4 = arg.storage;
      t5 = t4[0];
      t6 = t2[4];
      t7 = t4[1];
      t8 = t2[8];
      t9 = t4[2];
      t1[0] = t3 * t5 + t6 * t7 + t8 * t9 + t2[12];
      t8 = t2[1];
      t6 = t4[0];
      t1[1] = t8 * t6 + t2[5] * t7 + t2[9] * t9 + t2[13];
      t1[2] = t2[2] * t6 + t2[6] * t4[1] + t2[10] * t9 + t2[14];
      return new T.Vector3(t1);
    },
    $add: function(_, arg) {
      var t1, t2, t3, t4;
      t1 = new Float32Array(16);
      t2 = this.storage;
      t3 = t2[0];
      t4 = arg.get$storage();
      t1[0] = C.JSNumber_methods.$add(t3, t4.$index(t4, 0));
      t1[1] = C.JSNumber_methods.$add(t2[1], t4.$index(t4, 1));
      t1[2] = C.JSNumber_methods.$add(t2[2], t4.$index(t4, 2));
      t1[3] = C.JSNumber_methods.$add(t2[3], t4.$index(t4, 3));
      t1[4] = C.JSNumber_methods.$add(t2[4], t4.$index(t4, 4));
      t1[5] = C.JSNumber_methods.$add(t2[5], t4.$index(t4, 5));
      t1[6] = C.JSNumber_methods.$add(t2[6], t4.$index(t4, 6));
      t1[7] = C.JSNumber_methods.$add(t2[7], t4.$index(t4, 7));
      t1[8] = C.JSNumber_methods.$add(t2[8], t4.$index(t4, 8));
      t1[9] = C.JSNumber_methods.$add(t2[9], t4.$index(t4, 9));
      t1[10] = C.JSNumber_methods.$add(t2[10], t4.$index(t4, 10));
      t1[11] = C.JSNumber_methods.$add(t2[11], t4.$index(t4, 11));
      t1[12] = C.JSNumber_methods.$add(t2[12], t4.$index(t4, 12));
      t1[13] = C.JSNumber_methods.$add(t2[13], t4.$index(t4, 13));
      t1[14] = C.JSNumber_methods.$add(t2[14], t4.$index(t4, 14));
      t1[15] = C.JSNumber_methods.$add(t2[15], t4.$index(t4, 15));
      return new T.Matrix4(t1);
    },
    $sub: function(_, arg) {
      var t1, t2, t3, t4, t5;
      t1 = new Float32Array(16);
      t2 = this.storage;
      t3 = t2[0];
      t4 = arg.get$storage();
      t5 = t4.length;
      if (0 >= t5)
        return H.ioore(t4, 0);
      t1[0] = t3 - t4[0];
      t3 = t2[1];
      if (1 >= t5)
        return H.ioore(t4, 1);
      t1[1] = t3 - t4[1];
      t3 = t2[2];
      if (2 >= t5)
        return H.ioore(t4, 2);
      t1[2] = t3 - t4[2];
      t3 = t2[3];
      if (3 >= t5)
        return H.ioore(t4, 3);
      t1[3] = t3 - t4[3];
      t3 = t2[4];
      if (4 >= t5)
        return H.ioore(t4, 4);
      t1[4] = t3 - t4[4];
      t3 = t2[5];
      if (5 >= t5)
        return H.ioore(t4, 5);
      t1[5] = t3 - t4[5];
      t3 = t2[6];
      if (6 >= t5)
        return H.ioore(t4, 6);
      t1[6] = t3 - t4[6];
      t3 = t2[7];
      if (7 >= t5)
        return H.ioore(t4, 7);
      t1[7] = t3 - t4[7];
      t3 = t2[8];
      if (8 >= t5)
        return H.ioore(t4, 8);
      t1[8] = t3 - t4[8];
      t3 = t2[9];
      if (9 >= t5)
        return H.ioore(t4, 9);
      t1[9] = t3 - t4[9];
      t3 = t2[10];
      if (10 >= t5)
        return H.ioore(t4, 10);
      t1[10] = t3 - t4[10];
      t3 = t2[11];
      if (11 >= t5)
        return H.ioore(t4, 11);
      t1[11] = t3 - t4[11];
      t3 = t2[12];
      if (12 >= t5)
        return H.ioore(t4, 12);
      t1[12] = t3 - t4[12];
      t3 = t2[13];
      if (13 >= t5)
        return H.ioore(t4, 13);
      t1[13] = t3 - t4[13];
      t3 = t2[14];
      if (14 >= t5)
        return H.ioore(t4, 14);
      t1[14] = t3 - t4[14];
      t2 = t2[15];
      if (15 >= t5)
        return H.ioore(t4, 15);
      t1[15] = t2 - t4[15];
      return new T.Matrix4(t1);
    },
    setZero$0: function() {
      var t1 = this.storage;
      t1[0] = 0;
      t1[1] = 0;
      t1[2] = 0;
      t1[3] = 0;
      t1[4] = 0;
      t1[5] = 0;
      t1[6] = 0;
      t1[7] = 0;
      t1[8] = 0;
      t1[9] = 0;
      t1[10] = 0;
      t1[11] = 0;
      t1[12] = 0;
      t1[13] = 0;
      t1[14] = 0;
      t1[15] = 0;
      return this;
    },
    setIdentity$0: function() {
      var t1 = this.storage;
      t1[0] = 1;
      t1[1] = 0;
      t1[2] = 0;
      t1[3] = 0;
      t1[4] = 0;
      t1[5] = 1;
      t1[6] = 0;
      t1[7] = 0;
      t1[8] = 0;
      t1[9] = 0;
      t1[10] = 1;
      t1[11] = 0;
      t1[12] = 0;
      t1[13] = 0;
      t1[14] = 0;
      t1[15] = 1;
      return this;
    },
    setTranslationRaw$3: function(x, y, z) {
      var t1 = this.storage;
      t1[14] = z;
      t1[13] = y;
      t1[12] = x;
    },
    multiply$1: function(arg) {
      var t1, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33, t2, n00, n01, n02, n03, n10, n11, n12, n13, n20, n21, n22, n23, n30, n31, n32, n33;
      t1 = this.storage;
      m00 = t1[0];
      m01 = t1[4];
      m02 = t1[8];
      m03 = t1[12];
      m10 = t1[1];
      m11 = t1[5];
      m12 = t1[9];
      m13 = t1[13];
      m20 = t1[2];
      m21 = t1[6];
      m22 = t1[10];
      m23 = t1[14];
      m30 = t1[3];
      m31 = t1[7];
      m32 = t1[11];
      m33 = t1[15];
      t2 = arg.storage;
      n00 = t2[0];
      n01 = t2[4];
      n02 = t2[8];
      n03 = t2[12];
      n10 = t2[1];
      n11 = t2[5];
      n12 = t2[9];
      n13 = t2[13];
      n20 = t2[2];
      n21 = t2[6];
      n22 = t2[10];
      n23 = t2[14];
      n30 = t2[3];
      n31 = t2[7];
      n32 = t2[11];
      n33 = t2[15];
      t1[0] = m00 * n00 + m01 * n10 + m02 * n20 + m03 * n30;
      t1[4] = m00 * n01 + m01 * n11 + m02 * n21 + m03 * n31;
      t1[8] = m00 * n02 + m01 * n12 + m02 * n22 + m03 * n32;
      t1[12] = m00 * n03 + m01 * n13 + m02 * n23 + m03 * n33;
      t1[1] = m10 * n00 + m11 * n10 + m12 * n20 + m13 * n30;
      t1[5] = m10 * n01 + m11 * n11 + m12 * n21 + m13 * n31;
      t1[9] = m10 * n02 + m11 * n12 + m12 * n22 + m13 * n32;
      t1[13] = m10 * n03 + m11 * n13 + m12 * n23 + m13 * n33;
      t1[2] = m20 * n00 + m21 * n10 + m22 * n20 + m23 * n30;
      t1[6] = m20 * n01 + m21 * n11 + m22 * n21 + m23 * n31;
      t1[10] = m20 * n02 + m21 * n12 + m22 * n22 + m23 * n32;
      t1[14] = m20 * n03 + m21 * n13 + m22 * n23 + m23 * n33;
      t1[3] = m30 * n00 + m31 * n10 + m32 * n20 + m33 * n30;
      t1[7] = m30 * n01 + m31 * n11 + m32 * n21 + m33 * n31;
      t1[11] = m30 * n02 + m31 * n12 + m32 * n22 + m33 * n32;
      t1[15] = m30 * n03 + m31 * n13 + m32 * n23 + m33 * n33;
      return this;
    },
    copyIntoArray$2: function(array, offset) {
      var t1, t2, t3;
      t1 = offset + 15;
      t2 = this.storage;
      t3 = t2[15];
      array.length;
      if (t1 >= 16)
        return H.ioore(array, t1);
      array[t1] = t3;
      t3 = offset + 14;
      t1 = t2[14];
      if (t3 >= 16)
        return H.ioore(array, t3);
      array[t3] = t1;
      t1 = offset + 13;
      t3 = t2[13];
      if (t1 >= 16)
        return H.ioore(array, t1);
      array[t1] = t3;
      t3 = offset + 12;
      t1 = t2[12];
      if (t3 >= 16)
        return H.ioore(array, t3);
      array[t3] = t1;
      t1 = offset + 11;
      t3 = t2[11];
      if (t1 >= 16)
        return H.ioore(array, t1);
      array[t1] = t3;
      t3 = offset + 10;
      t1 = t2[10];
      if (t3 >= 16)
        return H.ioore(array, t3);
      array[t3] = t1;
      t1 = offset + 9;
      t3 = t2[9];
      if (t1 >= 16)
        return H.ioore(array, t1);
      array[t1] = t3;
      t3 = offset + 8;
      t1 = t2[8];
      if (t3 >= 16)
        return H.ioore(array, t3);
      array[t3] = t1;
      t1 = offset + 7;
      t3 = t2[7];
      if (t1 >= 16)
        return H.ioore(array, t1);
      array[t1] = t3;
      t3 = offset + 6;
      t1 = t2[6];
      if (t3 >= 16)
        return H.ioore(array, t3);
      array[t3] = t1;
      t1 = offset + 5;
      t3 = t2[5];
      if (t1 >= 16)
        return H.ioore(array, t1);
      array[t1] = t3;
      t3 = offset + 4;
      t1 = t2[4];
      if (t3 >= 16)
        return H.ioore(array, t3);
      array[t3] = t1;
      t1 = offset + 3;
      t3 = t2[3];
      if (t1 >= 16)
        return H.ioore(array, t1);
      array[t1] = t3;
      t3 = offset + 2;
      t1 = t2[2];
      if (t3 >= 16)
        return H.ioore(array, t3);
      array[t3] = t1;
      t1 = offset + 1;
      t3 = t2[1];
      if (t1 >= 16)
        return H.ioore(array, t1);
      array[t1] = t3;
      t3 = offset + 0;
      t2 = t2[0];
      if (t3 >= 16)
        return H.ioore(array, t3);
      array[t3] = t2;
    },
    copyIntoArray$1: function(array) {
      return this.copyIntoArray$2(array, 0);
    }
  },
  Vector2: {
    "": "Object;storage<",
    toString$0: function(_) {
      var t1 = this.storage;
      return "[" + H.S(t1[0]) + "," + H.S(t1[1]) + "]";
    },
    $sub: function(_, other) {
      var t1, t2, t3, t4, t5;
      t1 = this.storage;
      t2 = t1[0];
      t3 = other.get$storage();
      t4 = t3.length;
      if (0 >= t4)
        return H.ioore(t3, 0);
      t5 = t3[0];
      t1 = t1[1];
      if (1 >= t4)
        return H.ioore(t3, 1);
      t3 = t3[1];
      t4 = new Float32Array(2);
      t4[0] = t2 - t5;
      t4[1] = t1 - t3;
      return new T.Vector2(t4);
    },
    $add: function(_, other) {
      var t1, t2, t3;
      t1 = this.storage;
      t2 = t1[0];
      t3 = other.get$storage();
      t2 = C.JSNumber_methods.$add(t2, t3.$index(t3, 0));
      t3 = C.JSNumber_methods.$add(t1[1], t3.$index(t3, 1));
      t1 = new Float32Array(2);
      t1[0] = t2;
      t1[1] = t3;
      return new T.Vector2(t1);
    },
    $div: function(_, scale) {
      var o, t1, t2, t3;
      o = 1 / scale;
      t1 = this.storage;
      t2 = t1[0];
      t1 = t1[1];
      t3 = new Float32Array(2);
      t3[0] = t2 * o;
      t3[1] = t1 * o;
      return new T.Vector2(t3);
    },
    $index: function(_, i) {
      var t1 = this.storage;
      if (i >>> 0 !== i || i >= 2)
        return H.ioore(t1, i);
      return t1[i];
    },
    $indexSet: function(_, i, v) {
      var t1 = this.storage;
      if (i >>> 0 !== i || i >= 2)
        return H.ioore(t1, i);
      t1[i] = v;
    },
    get$length: function(_) {
      var t1, t2;
      t1 = this.storage;
      t2 = t1[0];
      t1 = t1[1];
      return Math.sqrt(t2 * t2 + t1 * t1);
    },
    get$x: function(_) {
      return this.storage[0];
    },
    get$y: function(_) {
      return this.storage[1];
    }
  },
  Vector3: {
    "": "Object;storage<",
    setValues$3: function(x_, y_, z_) {
      var t1 = this.storage;
      t1[0] = x_;
      t1[1] = y_;
      t1[2] = z_;
      return this;
    },
    setFrom$1: function(other) {
      var t1, t2;
      t1 = this.storage;
      t2 = other.storage;
      t1[0] = t2[0];
      t1[1] = t2[1];
      t1[2] = t2[2];
      return this;
    },
    toString$0: function(_) {
      var t1 = this.storage;
      return "[" + H.S(t1[0]) + "," + H.S(t1[1]) + "," + H.S(t1[2]) + "]";
    },
    $sub: function(_, other) {
      var t1, t2, t3, t4, t5, t6, t7;
      t1 = this.storage;
      t2 = t1[0];
      t3 = other.get$storage();
      t4 = t3.length;
      if (0 >= t4)
        return H.ioore(t3, 0);
      t5 = t3[0];
      t6 = t1[1];
      if (1 >= t4)
        return H.ioore(t3, 1);
      t7 = t3[1];
      t1 = t1[2];
      if (2 >= t4)
        return H.ioore(t3, 2);
      t4 = new T.Vector3(new Float32Array(3));
      t4.setValues$3(t2 - t5, t6 - t7, t1 - t3[2]);
      return t4;
    },
    $add: function(_, other) {
      var t1, t2, t3;
      t1 = this.storage;
      t2 = other.storage;
      t3 = new T.Vector3(new Float32Array(3));
      t3.setValues$3(t1[0] + other.get$storage()[0], t1[1] + t2[1], t1[2] + t2[2]);
      return t3;
    },
    $div: function(_, scale) {
      var o, t1, t2;
      o = 1 / scale;
      t1 = this.storage;
      t2 = new T.Vector3(new Float32Array(3));
      t2.setValues$3(t1[0] * o, t1[1] * o, t1[2] * o);
      return t2;
    },
    $mul: function(_, scale) {
      var t1, t2;
      t1 = this.storage;
      t2 = new T.Vector3(new Float32Array(3));
      t2.setValues$3(t1[0] * scale, t1[1] * scale, t1[2] * scale);
      return t2;
    },
    $index: function(_, i) {
      var t1 = this.storage;
      if (i >>> 0 !== i || i >= 3)
        return H.ioore(t1, i);
      return t1[i];
    },
    $indexSet: function(_, i, v) {
      var t1 = this.storage;
      if (i >>> 0 !== i || i >= 3)
        return H.ioore(t1, i);
      t1[i] = v;
    },
    get$length: function(_) {
      var t1, t2, t3;
      t1 = this.storage;
      t2 = t1[0];
      t3 = t1[1];
      t1 = t1[2];
      return Math.sqrt(t2 * t2 + t3 * t3 + t1 * t1);
    },
    normalize$0: function() {
      var l, t1;
      l = this.get$length(this);
      if (l === 0)
        return this;
      l = 1 / l;
      t1 = this.storage;
      t1[0] = t1[0] * l;
      t1[1] = t1[1] * l;
      t1[2] = t1[2] * l;
      return this;
    },
    cross$1: function(other) {
      var t1, _x, _y, _z, ox, oy, oz;
      t1 = this.storage;
      _x = t1[0];
      _y = t1[1];
      _z = t1[2];
      t1 = other.storage;
      ox = t1[0];
      oy = t1[1];
      oz = t1[2];
      t1 = new T.Vector3(new Float32Array(3));
      t1.setValues$3(_y * oz - _z * oy, _z * ox - _x * oz, _x * oy - _y * ox);
      return t1;
    },
    scale$1: function(_, arg) {
      var t1 = this.storage;
      t1[2] = t1[2] * arg;
      t1[1] = t1[1] * arg;
      t1[0] = t1[0] * arg;
      return this;
    },
    get$x: function(_) {
      return this.storage[0];
    },
    get$y: function(_) {
      return this.storage[1];
    },
    get$z: function(_) {
      return this.storage[2];
    }
  },
  Vector4: {
    "": "Object;storage<",
    setValues$4: function(x_, y_, z_, w_) {
      var t1 = this.storage;
      t1[3] = w_;
      t1[2] = z_;
      t1[1] = y_;
      t1[0] = x_;
      return this;
    },
    toString$0: function(_) {
      var t1 = this.storage;
      return H.S(t1[0]) + "," + H.S(t1[1]) + "," + H.S(t1[2]) + "," + H.S(t1[3]);
    },
    $sub: function(_, other) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9;
      t1 = this.storage;
      t2 = t1[0];
      t3 = other.get$storage();
      t4 = t3.length;
      if (0 >= t4)
        return H.ioore(t3, 0);
      t5 = t3[0];
      t6 = t1[1];
      if (1 >= t4)
        return H.ioore(t3, 1);
      t7 = t3[1];
      t8 = t1[2];
      if (2 >= t4)
        return H.ioore(t3, 2);
      t9 = t3[2];
      t1 = t1[3];
      if (3 >= t4)
        return H.ioore(t3, 3);
      t4 = new T.Vector4(new Float32Array(4));
      t4.setValues$4(t2 - t5, t6 - t7, t8 - t9, t1 - t3[3]);
      return t4;
    },
    $add: function(_, other) {
      var t1, t2, t3, t4;
      t1 = this.storage;
      t2 = t1[0];
      t3 = other.get$storage();
      t4 = new T.Vector4(new Float32Array(4));
      t4.setValues$4(C.JSNumber_methods.$add(t2, t3.$index(t3, 0)), C.JSNumber_methods.$add(t1[1], t3.$index(t3, 1)), C.JSNumber_methods.$add(t1[2], t3.$index(t3, 2)), C.JSNumber_methods.$add(t1[3], t3.$index(t3, 3)));
      return t4;
    },
    $div: function(_, scale) {
      var o, t1, t2;
      o = 1 / scale;
      t1 = this.storage;
      t2 = new T.Vector4(new Float32Array(4));
      t2.setValues$4(t1[0] * o, t1[1] * o, t1[2] * o, t1[3] * o);
      return t2;
    },
    $index: function(_, i) {
      var t1 = this.storage;
      if (i >>> 0 !== i || i >= 4)
        return H.ioore(t1, i);
      return t1[i];
    },
    $indexSet: function(_, i, v) {
      var t1 = this.storage;
      if (i >>> 0 !== i || i >= 4)
        return H.ioore(t1, i);
      t1[i] = v;
    },
    get$length: function(_) {
      var t1, t2, t3, t4;
      t1 = this.storage;
      t2 = t1[0];
      t3 = t1[1];
      t4 = t1[2];
      t1 = t1[3];
      return Math.sqrt(t2 * t2 + t3 * t3 + t4 * t4 + t1 * t1);
    },
    get$x: function(_) {
      return this.storage[0];
    },
    get$y: function(_) {
      return this.storage[1];
    },
    get$z: function(_) {
      return this.storage[2];
    }
  }
}],
]);
Isolate.$finishClasses($$, $, null);
$$ = null;

// Runtime type support
J.JSDouble.$isdouble = true;
J.JSDouble.$isObject = true;
J.JSInt.$isint = true;
J.JSInt.$isObject = true;
J.JSString.$isString = true;
J.JSString.$isObject = true;
J.JSNumber.$isObject = true;
P.Duration.$isDuration = true;
P.Duration.$isObject = true;
P.Object.$isObject = true;
G.PlanetaryBody.$isObject = true;
P.Future.$isFuture = true;
P.Future.$isObject = true;
G.Texture.$isObject = true;
J.JSArray.$isObject = true;
W.Event.$isEvent = true;
W.Event.$isObject = true;
W.MouseEvent.$isMouseEvent = true;
W.MouseEvent.$isEvent = true;
W.MouseEvent.$isObject = true;
W.KeyboardEvent.$isKeyboardEvent = true;
W.KeyboardEvent.$isEvent = true;
W.KeyboardEvent.$isObject = true;
W.WheelEvent.$isMouseEvent = true;
W.WheelEvent.$isEvent = true;
W.WheelEvent.$isObject = true;
H.RawReceivePortImpl.$isObject = true;
H._IsolateEvent.$isObject = true;
H._IsolateContext.$isObject = true;
P.Symbol.$isSymbol = true;
P.Symbol.$isObject = true;
P.StackTrace.$isStackTrace = true;
P.StackTrace.$isObject = true;
J.JSBool.$isbool = true;
J.JSBool.$isObject = true;
W.EventTarget.$isEventTarget = true;
W.EventTarget.$isObject = true;
W.ImageData.$isImageData = true;
W.ImageData.$isObject = true;
P._EventSink.$is_EventSink = true;
P._EventSink.$isObject = true;
P._DelayedEvent.$is_DelayedEvent = true;
P._DelayedEvent.$isObject = true;
T.Vector4.$isVector4 = true;
T.Vector4.$isObject = true;
T.Matrix4.$isMatrix4 = true;
T.Matrix4.$isObject = true;
T.Vector3.$isVector3 = true;
T.Vector3.$isObject = true;
P.DateTime.$isDateTime = true;
P.DateTime.$isObject = true;
P.StreamSubscription.$isStreamSubscription = true;
P.StreamSubscription.$isObject = true;
T.Vector2.$isVector2 = true;
T.Vector2.$isObject = true;
$.$signature_args2 = {func: "args2", args: [null, null]};
$.$signature_args1 = {func: "args1", args: [null]};
// getInterceptor methods
J.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return J.JSInt.prototype;
    return J.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return J.JSNull.prototype;
  if (typeof receiver == "boolean")
    return J.JSBool.prototype;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.getInterceptor$asx = function(receiver) {
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.getInterceptor$ax = function(receiver) {
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.getInterceptor$n = function(receiver) {
  if (typeof receiver == "number")
    return J.JSNumber.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$ns = function(receiver) {
  if (typeof receiver == "number")
    return J.JSNumber.prototype;
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$s = function(receiver) {
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$x = function(receiver) {
  if (receiver == null)
    return receiver;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.$add$ns = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver + a0;
  return J.getInterceptor$ns(receiver).$add(receiver, a0);
};
J.$div$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver / a0;
  return J.getInterceptor$n(receiver).$div(receiver, a0);
};
J.$eq = function(receiver, a0) {
  if (receiver == null)
    return a0 == null;
  if (typeof receiver != "object")
    return a0 != null && receiver === a0;
  return J.getInterceptor(receiver).$eq(receiver, a0);
};
J.$ge$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver >= a0;
  return J.getInterceptor$n(receiver).$ge(receiver, a0);
};
J.$index$asx = function(receiver, a0) {
  if (receiver.constructor == Array || typeof receiver == "string" || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
    if (a0 >>> 0 === a0 && a0 < receiver.length)
      return receiver[a0];
  return J.getInterceptor$asx(receiver).$index(receiver, a0);
};
J.$indexSet$ax = function(receiver, a0, a1) {
  if ((receiver.constructor == Array || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName])) && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
    return receiver[a0] = a1;
  return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
};
J.$sub$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver - a0;
  return J.getInterceptor$n(receiver).$sub(receiver, a0);
};
J.addEventListener$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).addEventListener$3(receiver, a0, a1, a2);
};
J.bindBuffer$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).bindBuffer$2(receiver, a0, a1);
};
J.bindTexture$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).bindTexture$2(receiver, a0, a1);
};
J.clear$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).clear$1(receiver, a0);
};
J.clearColor$4$x = function(receiver, a0, a1, a2, a3) {
  return J.getInterceptor$x(receiver).clearColor$4(receiver, a0, a1, a2, a3);
};
J.clearDepth$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).clearDepth$1(receiver, a0);
};
J.createBuffer$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).createBuffer$0(receiver);
};
J.createProgram$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).createProgram$0(receiver);
};
J.createShader$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).createShader$1(receiver, a0);
};
J.createTexture$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).createTexture$0(receiver);
};
J.disable$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).disable$1(receiver, a0);
};
J.enable$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).enable$1(receiver, a0);
};
J.forEach$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
};
J.get$error$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$error(receiver);
};
J.get$hashCode$ = function(receiver) {
  return J.getInterceptor(receiver).get$hashCode(receiver);
};
J.get$href$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$href(receiver);
};
J.get$iterator$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).get$iterator(receiver);
};
J.get$keyCode$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$keyCode(receiver);
};
J.get$length$asx = function(receiver) {
  return J.getInterceptor$asx(receiver).get$length(receiver);
};
J.get$movement$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$movement(receiver);
};
J.get$src$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$src(receiver);
};
J.getAttribLocation$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).getAttribLocation$2(receiver, a0, a1);
};
J.getContext$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).getContext$1(receiver, a0);
};
J.getUniformLocation$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).getUniformLocation$2(receiver, a0, a1);
};
J.removeEventListener$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).removeEventListener$3(receiver, a0, a1, a2);
};
J.roundToDouble$0$n = function(receiver) {
  return J.getInterceptor$n(receiver).roundToDouble$0(receiver);
};
J.set$height$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$height(receiver, value);
};
J.set$width$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$width(receiver, value);
};
J.toString$0 = function(receiver) {
  return J.getInterceptor(receiver).toString$0(receiver);
};
J.uniform4fv$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).uniform4fv$2(receiver, a0, a1);
};
J.uniformMatrix4fv$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).uniformMatrix4fv$3(receiver, a0, a1, a2);
};
J.useProgram$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).useProgram$1(receiver, a0);
};
J.viewport$4$x = function(receiver, a0, a1, a2, a3) {
  return J.getInterceptor$x(receiver).viewport$4(receiver, a0, a1, a2, a3);
};
C.C_DynamicRuntimeType = new H.DynamicRuntimeType();
C.C_JsonCodec = new P.JsonCodec();
C.C__DelayedDone = new P._DelayedDone();
C.C__JSRandom = new P._JSRandom();
C.C__RootZone = new P._RootZone();
C.Duration_0 = new P.Duration(0);
C.EventStreamProvider_click = new W.EventStreamProvider("click");
C.EventStreamProvider_keydown = new W.EventStreamProvider("keydown");
C.EventStreamProvider_keyup = new W.EventStreamProvider("keyup");
C.EventStreamProvider_load = new W.EventStreamProvider("load");
C.EventStreamProvider_mousemove = new W.EventStreamProvider("mousemove");
C.EventStreamProvider_webkitfullscreenchange = new W.EventStreamProvider("webkitfullscreenchange");
C.EventStreamProvider_webkitpointerlockchange = new W.EventStreamProvider("webkitpointerlockchange");
C.JSArray_methods = J.JSArray.prototype;
C.JSInt_methods = J.JSInt.prototype;
C.JSNumber_methods = J.JSNumber.prototype;
C.JSString_methods = J.JSString.prototype;
C.JS_CONST_0 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
C.JS_CONST_Fs4 = function(hooks) { return hooks; }
;
C.JS_CONST_IX5 = function getTagFallback(o) {
  var constructor = o.constructor;
  if (typeof constructor == "function") {
    var name = constructor.name;
    if (typeof name == "string"
        && name !== ""
        && name !== "Object"
        && name !== "Function.prototype") {
      return name;
    }
  }
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
C.JS_CONST_QJm = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
C.JS_CONST_U4w = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
C.JS_CONST_aQP = function() {
  function typeNameInChrome(o) {
    var name = o.constructor.name;
    if (name) return name;
    var s = Object.prototype.toString.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = Object.prototype.toString.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: typeNameInChrome,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
C.JS_CONST_gkc = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
C.JS_CONST_rr7 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
C.JsonDecoder_null = new P.JsonDecoder(null);
Isolate.makeConstantList = function(list) {
  list.immutable$list = init;
  list.fixed$length = init;
  return list;
};
C.List_5ST = Isolate.makeConstantList([0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23]);
C.List_KIf = Isolate.makeConstantList([-1, -1, -1, -1, 1, -1, 1, 1, -1, 1, -1, -1, -1, -1, 1, -1, 1, 1, 1, 1, 1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, 1, 1, 1, 1, 1, -1]);
C.List_empty = Isolate.makeConstantList([]);
C.RenderingContext_methods = P.RenderingContext.prototype;
C.Type_6Vn = H.createRuntimeType('_NativeTypedArray');
C.Type_Hp8 = H.createRuntimeType('_NativeTypedArrayOfInt');
C.Type_Ucj = H.createRuntimeType('_NativeTypedArrayOfDouble');
C.Type_oqh = H.createRuntimeType('Uint64List');
C.Type_qxd = H.createRuntimeType('Int64List');
C.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
C.WheelEvent_methods = W.WheelEvent.prototype;
C.Window_methods = W.Window.prototype;
C._CustomEventStreamProvider__determineMouseWheelEventType = new W._CustomEventStreamProvider(W.Element__determineMouseWheelEventType$closure());
$.controlPort = null;
$.RawReceivePortImpl__nextFreeId = 1;
$.Primitives_mirrorFunctionCacheName = "$cachedFunction";
$.Primitives_mirrorInvokeCacheName = "$cachedInvocation";
$.Closure_functionCounter = 0;
$.BoundClosure_selfFieldNameCache = null;
$.BoundClosure_receiverFieldNameCache = null;
$.RuntimeFunctionType_inAssert = false;
$.getTagFunction = null;
$.alternateTagFunction = null;
$.prototypeForTagFunction = null;
$.dispatchRecordsForInstanceTags = null;
$.interceptorsForUncacheableTags = null;
$.initNativeDispatchFlag = null;
$.printToZone = null;
$._callbacksAreEnqueued = false;
$.Zone__current = C.C__RootZone;
$.Expando__keyCount = 0;
$.Device__isOpera = null;
$.Device__isWebKit = null;
$.fpsAverage = null;
$.SphereModel_indexBuffer = null;
$.SphereModel_vertexBuffer = null;
$.SphereModel__vertexCount = null;
$.SphereModel__vertexStride = null;
$.SphereModel__positionAttributeIndex = null;
$.SphereModel__textureAttributeIndex = null;
$.SphereModel__normalAttributeIndex = null;
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return function() { return this; }();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== void 0;
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return H.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "workerIds", "IsolateNatives_workerIds", "get$IsolateNatives_workerIds", function() {
  return new P.Expando(null);
});
Isolate.$lazy($, "noSuchMethodPattern", "TypeErrorDecoder_noSuchMethodPattern", "get$TypeErrorDecoder_noSuchMethodPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({ toString: function() { return "$receiver$"; } }));
});
Isolate.$lazy($, "notClosurePattern", "TypeErrorDecoder_notClosurePattern", "get$TypeErrorDecoder_notClosurePattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({ $method$: null, toString: function() { return "$receiver$"; } }));
});
Isolate.$lazy($, "nullCallPattern", "TypeErrorDecoder_nullCallPattern", "get$TypeErrorDecoder_nullCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(null));
});
Isolate.$lazy($, "nullLiteralCallPattern", "TypeErrorDecoder_nullLiteralCallPattern", "get$TypeErrorDecoder_nullLiteralCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(function() {
  var $argumentsExpr$ = '$arguments$'
  try {
    null.$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}());
});
Isolate.$lazy($, "undefinedCallPattern", "TypeErrorDecoder_undefinedCallPattern", "get$TypeErrorDecoder_undefinedCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(void 0));
});
Isolate.$lazy($, "undefinedLiteralCallPattern", "TypeErrorDecoder_undefinedLiteralCallPattern", "get$TypeErrorDecoder_undefinedLiteralCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(function() {
  var $argumentsExpr$ = '$arguments$'
  try {
    (void 0).$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}());
});
Isolate.$lazy($, "nullPropertyPattern", "TypeErrorDecoder_nullPropertyPattern", "get$TypeErrorDecoder_nullPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(null));
});
Isolate.$lazy($, "nullLiteralPropertyPattern", "TypeErrorDecoder_nullLiteralPropertyPattern", "get$TypeErrorDecoder_nullLiteralPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(function() {
  try {
    null.$method$;
  } catch (e) {
    return e.message;
  }
}());
});
Isolate.$lazy($, "undefinedPropertyPattern", "TypeErrorDecoder_undefinedPropertyPattern", "get$TypeErrorDecoder_undefinedPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(void 0));
});
Isolate.$lazy($, "undefinedLiteralPropertyPattern", "TypeErrorDecoder_undefinedLiteralPropertyPattern", "get$TypeErrorDecoder_undefinedLiteralPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(function() {
  try {
    (void 0).$method$;
  } catch (e) {
    return e.message;
  }
}());
});
Isolate.$lazy($, "_toStringList", "IterableMixinWorkaround__toStringList", "get$IterableMixinWorkaround__toStringList", function() {
  return [];
});
Isolate.$lazy($, "_asyncCallbacks", "_asyncCallbacks", "get$_asyncCallbacks", function() {
  var t1, t2;
  t1 = {func: "void_", void: true};
  t2 = H.setRuntimeTypeInfo(new P.ListQueue(null, 0, 0, 0), [t1]);
  t2.ListQueue$1(null, t1);
  return t2;
});
Isolate.$lazy($, "_toStringVisiting", "_toStringVisiting", "get$_toStringVisiting", function() {
  return P.HashSet_HashSet$identity(null);
});
Isolate.$lazy($, "_toStringList", "Maps__toStringList", "get$Maps__toStringList", function() {
  return [];
});
Isolate.$lazy($, "application", "application", "get$application", function() {
  var t1 = new G.Camera(null, null, null, null, null, null, null);
  t1.Camera$0();
  return new G.Solar3DApplication(null, null, null, null, C.C__JSRandom, t1, null, new G.MouseSphereCameraController(5, 360, 180, 0, 200, 0, 0, 0, new T.Vector3(new Float32Array(3)), 50), null, null, true, 37, 39, 69, 70, 74, 83, null);
});
Isolate.$lazy($, "_sphereData", "_sphereData", "get$_sphereData", function() {
  return C.C_JsonCodec.decode$1("{\n\"header\" : {\n\"filename\" : \"/Users/johnmccutchan/untitled5.obj\"\n},\n\"meshes\" : [\n{\n\"indexWidth\" : 2,\n\"attributes\" : {\n\"POSITION\" : {\n\"name\" : \"POSITION\",\n\"type\" : \"float\",\n\"numElements\" : 3,\n\"normalized\" : false,\n\"stride\" : 56,\n\"offset\" : 0\n}\n,\n\"NORMAL\" : {\n\"name\" : \"NORMAL\",\n\"type\" : \"float\",\n\"numElements\" : 3,\n\"normalized\" : false,\n\"stride\" : 56,\n\"offset\" : 12\n}\n,\n\"TANGENT\" : {\n\"name\" : \"TANGENT\",\n\"type\" : \"float\",\n\"numElements\" : 3,\n\"normalized\" : false,\n\"stride\" : 56,\n\"offset\" : 24\n}\n,\n\"BITANGENT\" : {\n\"name\" : \"BITANGENT\",\n\"type\" : \"float\",\n\"numElements\" : 3,\n\"normalized\" : false,\n\"stride\" : 56,\n\"offset\" : 36\n}\n,\n\"TEXCOORD0\" : {\n\"name\" : \"TEXCOORD0\",\n\"type\" : \"float\",\n\"numElements\" : 2,\n\"normalized\" : false,\n\"stride\" : 56,\n\"offset\" : 48\n}\n},\n\"bounds\" : [-0.500000, -0.500000, -0.500000, 0.500000, 0.500000, 0.500000],\n\"indices\" : [\n2, 1, 0,\n5, 4, 3,\n8, 7, 6,\n11, 10, 9,\n14, 13, 12,\n17, 16, 15,\n20, 19, 18,\n23, 22, 21,\n26, 25, 24,\n29, 28, 27,\n32, 31, 30,\n35, 34, 33,\n38, 37, 36,\n41, 40, 39,\n44, 43, 42,\n47, 46, 45,\n50, 49, 48,\n53, 52, 51,\n56, 55, 54,\n59, 58, 57,\n62, 61, 60,\n65, 64, 63,\n68, 67, 66,\n71, 70, 69,\n74, 73, 72,\n77, 76, 75,\n80, 79, 78,\n83, 82, 81,\n86, 85, 84,\n89, 88, 87,\n92, 91, 90,\n95, 94, 93,\n98, 97, 96,\n101, 100, 99,\n104, 103, 102,\n107, 106, 105,\n110, 109, 108,\n113, 112, 111,\n116, 115, 114,\n119, 118, 117,\n122, 121, 120,\n125, 124, 123,\n128, 127, 126,\n131, 130, 129,\n134, 133, 132,\n137, 136, 135,\n140, 139, 138,\n143, 142, 141,\n146, 145, 144,\n149, 148, 147,\n152, 151, 150,\n155, 154, 153,\n158, 157, 156,\n161, 160, 159,\n164, 163, 162,\n167, 166, 165,\n170, 169, 168,\n173, 172, 171,\n176, 175, 174,\n179, 178, 177,\n182, 181, 180,\n185, 184, 183,\n188, 187, 186,\n191, 190, 189,\n194, 193, 192,\n197, 196, 195,\n200, 199, 198,\n203, 202, 201,\n206, 205, 204,\n209, 208, 207,\n212, 211, 210,\n215, 214, 213,\n218, 217, 216,\n221, 220, 219,\n224, 223, 222,\n227, 226, 225,\n230, 229, 228,\n233, 232, 231,\n236, 235, 234,\n239, 238, 237,\n242, 241, 240,\n245, 244, 243,\n248, 247, 246,\n251, 250, 249,\n254, 253, 252,\n257, 256, 255,\n260, 259, 258,\n263, 262, 261,\n266, 265, 264,\n269, 268, 267,\n272, 271, 270,\n275, 274, 273,\n278, 277, 276,\n281, 280, 279,\n284, 283, 282,\n287, 286, 285,\n290, 289, 288,\n293, 292, 291,\n296, 295, 294,\n299, 298, 297,\n302, 301, 300,\n305, 304, 303,\n308, 307, 306,\n311, 310, 309,\n314, 313, 312,\n317, 316, 315,\n320, 319, 318,\n323, 322, 321,\n326, 325, 324,\n329, 328, 327,\n332, 331, 330,\n335, 334, 333,\n338, 337, 336,\n341, 340, 339,\n344, 343, 342,\n347, 346, 345,\n350, 349, 348,\n353, 352, 351,\n356, 355, 354,\n359, 358, 357,\n362, 361, 360,\n365, 364, 363,\n368, 367, 366,\n371, 370, 369,\n374, 373, 372,\n377, 376, 375,\n380, 379, 378,\n383, 382, 381,\n386, 385, 384,\n389, 388, 387,\n392, 391, 390,\n395, 394, 393,\n398, 397, 396,\n401, 400, 399,\n404, 403, 402,\n407, 406, 405,\n410, 409, 408,\n413, 412, 411,\n416, 415, 414,\n419, 418, 417,\n422, 421, 420,\n425, 424, 423,\n428, 427, 426,\n431, 430, 429,\n434, 433, 432,\n437, 436, 435,\n440, 439, 438,\n443, 442, 441,\n446, 445, 444,\n449, 448, 447,\n452, 451, 450,\n455, 454, 453,\n458, 457, 456,\n461, 460, 459,\n464, 463, 462,\n467, 466, 465,\n470, 469, 468,\n473, 472, 471,\n476, 475, 474,\n479, 478, 477,\n482, 481, 480,\n485, 484, 483,\n488, 487, 486,\n491, 490, 489,\n494, 493, 492,\n497, 496, 495,\n500, 499, 498,\n503, 502, 501,\n506, 505, 504,\n509, 508, 507,\n512, 511, 510,\n515, 514, 513,\n518, 517, 516,\n521, 520, 519,\n524, 523, 522,\n527, 526, 525,\n530, 529, 528,\n533, 532, 531,\n536, 535, 534,\n539, 538, 537,\n542, 541, 540,\n545, 544, 543,\n548, 547, 546,\n551, 550, 549,\n554, 553, 552,\n557, 556, 555,\n560, 559, 558,\n563, 562, 561,\n566, 565, 564,\n569, 568, 567,\n572, 571, 570,\n575, 574, 573,\n578, 577, 576,\n581, 580, 579,\n584, 583, 582,\n587, 586, 585,\n590, 589, 588,\n593, 592, 591,\n596, 595, 594,\n599, 598, 597,\n602, 601, 600,\n605, 604, 603,\n608, 607, 606,\n611, 610, 609,\n614, 613, 612,\n617, 616, 615,\n620, 619, 618,\n623, 622, 621,\n626, 625, 624,\n629, 628, 627,\n632, 631, 630,\n635, 634, 633,\n638, 637, 636,\n641, 640, 639,\n644, 643, 642,\n647, 646, 645,\n650, 649, 648,\n653, 652, 651,\n656, 655, 654,\n659, 658, 657,\n662, 661, 660,\n665, 664, 663,\n668, 667, 666,\n671, 670, 669,\n674, 673, 672,\n677, 676, 675,\n680, 679, 678,\n683, 682, 681,\n686, 685, 684,\n689, 688, 687,\n692, 691, 690,\n695, 694, 693,\n698, 697, 696,\n701, 700, 699,\n704, 703, 702,\n707, 706, 705,\n710, 709, 708,\n713, 712, 711,\n716, 715, 714,\n719, 718, 717,\n722, 721, 720,\n725, 724, 723,\n728, 727, 726,\n731, 730, 729,\n734, 733, 732,\n737, 736, 735,\n740, 739, 738,\n743, 742, 741,\n746, 745, 744,\n749, 748, 747,\n752, 751, 750,\n755, 754, 753,\n758, 757, 756,\n761, 760, 759,\n764, 763, 762,\n767, 766, 765,\n770, 769, 768,\n773, 772, 771,\n776, 775, 774,\n779, 778, 777,\n782, 781, 780,\n785, 784, 783,\n788, 787, 786,\n791, 790, 789,\n794, 793, 792,\n797, 796, 795,\n800, 799, 798,\n803, 802, 801,\n806, 805, 804,\n809, 808, 807,\n812, 811, 810,\n815, 814, 813,\n818, 817, 816,\n821, 820, 819,\n824, 823, 822,\n827, 826, 825,\n830, 829, 828,\n833, 832, 831,\n836, 835, 834,\n839, 838, 837,\n842, 841, 840,\n845, 844, 843,\n848, 847, 846,\n851, 850, 849,\n854, 853, 852,\n857, 856, 855,\n860, 859, 858,\n863, 862, 861,\n866, 865, 864,\n869, 868, 867,\n872, 871, 870,\n875, 874, 873,\n878, 877, 876,\n881, 880, 879,\n884, 883, 882,\n887, 886, 885,\n890, 889, 888,\n893, 892, 891,\n896, 895, 894,\n899, 898, 897,\n902, 901, 900,\n905, 904, 903,\n908, 907, 906,\n911, 910, 909,\n914, 913, 912,\n917, 916, 915,\n920, 919, 918,\n923, 922, 921,\n926, 925, 924,\n929, 928, 927,\n932, 931, 930,\n935, 934, 933,\n938, 937, 936,\n941, 940, 939,\n944, 943, 942,\n947, 946, 945,\n950, 949, 948,\n953, 952, 951,\n956, 955, 954,\n959, 958, 957,\n962, 961, 960,\n965, 964, 963,\n968, 967, 966,\n971, 970, 969,\n974, 973, 972,\n977, 976, 975,\n980, 979, 978,\n983, 982, 981,\n986, 985, 984,\n989, 988, 987,\n992, 991, 990,\n995, 994, 993,\n998, 997, 996,\n1001, 1000, 999,\n1004, 1003, 1002,\n1007, 1006, 1005,\n1010, 1009, 1008,\n1013, 1012, 1011,\n1016, 1015, 1014,\n1019, 1018, 1017,\n1022, 1021, 1020,\n1025, 1024, 1023,\n1028, 1027, 1026,\n1031, 1030, 1029,\n1034, 1033, 1032,\n1037, 1036, 1035,\n1040, 1039, 1038,\n1043, 1042, 1041,\n1046, 1045, 1044,\n1049, 1048, 1047,\n1052, 1051, 1050,\n1055, 1054, 1053,\n1058, 1057, 1056,\n1061, 1060, 1059,\n1064, 1063, 1062,\n1067, 1066, 1065,\n1070, 1069, 1068,\n1073, 1072, 1071,\n1076, 1075, 1074,\n1079, 1078, 1077,\n1082, 1081, 1080,\n1085, 1084, 1083,\n1088, 1087, 1086,\n1091, 1090, 1089,\n1094, 1093, 1092,\n1097, 1096, 1095,\n1100, 1099, 1098,\n1103, 1102, 1101,\n1106, 1105, 1104,\n1109, 1108, 1107,\n1112, 1111, 1110,\n1115, 1114, 1113,\n1118, 1117, 1116,\n1121, 1120, 1119,\n1124, 1123, 1122,\n1127, 1126, 1125,\n1130, 1129, 1128,\n1133, 1132, 1131,\n1136, 1135, 1134,\n1139, 1138, 1137,\n1142, 1141, 1140,\n1145, 1144, 1143,\n1148, 1147, 1146,\n1151, 1150, 1149,\n1154, 1153, 1152,\n1157, 1156, 1155,\n1160, 1159, 1158,\n1163, 1162, 1161,\n1166, 1165, 1164,\n1169, 1168, 1167,\n1172, 1171, 1170,\n1175, 1174, 1173,\n1178, 1177, 1176,\n1181, 1180, 1179,\n1184, 1183, 1182,\n1187, 1186, 1185,\n1190, 1189, 1188,\n1193, 1192, 1191,\n1196, 1195, 1194,\n1199, 1198, 1197,\n1202, 1201, 1200,\n1205, 1204, 1203,\n1208, 1207, 1206,\n1211, 1210, 1209,\n1214, 1213, 1212,\n1217, 1216, 1215,\n1220, 1219, 1218,\n1223, 1222, 1221,\n1226, 1225, 1224,\n1229, 1228, 1227,\n1232, 1231, 1230,\n1235, 1234, 1233,\n1238, 1237, 1236,\n1241, 1240, 1239,\n1244, 1243, 1242,\n1247, 1246, 1245,\n1250, 1249, 1248,\n1253, 1252, 1251,\n1256, 1255, 1254,\n1259, 1258, 1257,\n1262, 1261, 1260,\n1265, 1264, 1263,\n1268, 1267, 1266,\n1271, 1270, 1269,\n1274, 1273, 1272,\n1277, 1276, 1275,\n1280, 1279, 1278,\n1283, 1282, 1281,\n1286, 1285, 1284,\n1289, 1288, 1287,\n1292, 1291, 1290,\n1295, 1294, 1293,\n1298, 1297, 1296,\n1301, 1300, 1299,\n1304, 1303, 1302,\n1307, 1306, 1305,\n1310, 1309, 1308,\n1313, 1312, 1311,\n1316, 1315, 1314,\n1319, 1318, 1317,\n1322, 1321, 1320,\n1325, 1324, 1323,\n1328, 1327, 1326,\n1331, 1330, 1329,\n1334, 1333, 1332,\n1337, 1336, 1335,\n1340, 1339, 1338,\n1343, 1342, 1341,\n1346, 1345, 1344,\n1349, 1348, 1347,\n1352, 1351, 1350,\n1355, 1354, 1353,\n1358, 1357, 1356,\n1361, 1360, 1359,\n1364, 1363, 1362,\n1367, 1366, 1365,\n1370, 1369, 1368,\n1373, 1372, 1371,\n1376, 1375, 1374,\n1379, 1378, 1377,\n1382, 1381, 1380,\n1385, 1384, 1383,\n1388, 1387, 1386,\n1391, 1390, 1389,\n1394, 1393, 1392,\n1397, 1396, 1395,\n1400, 1399, 1398,\n1403, 1402, 1401,\n1406, 1405, 1404,\n1409, 1408, 1407,\n1412, 1411, 1410,\n1415, 1414, 1413,\n1418, 1417, 1416,\n1421, 1420, 1419,\n1424, 1423, 1422,\n1427, 1426, 1425,\n1430, 1429, 1428,\n1433, 1432, 1431,\n1436, 1435, 1434,\n1439, 1438, 1437,\n1442, 1441, 1440,\n1445, 1444, 1443,\n1448, 1447, 1446,\n1451, 1450, 1449,\n1454, 1453, 1452,\n1457, 1456, 1455,\n1460, 1459, 1458,\n1463, 1462, 1461,\n1466, 1465, 1464,\n1469, 1468, 1467,\n1472, 1471, 1470,\n1475, 1474, 1473,\n1478, 1477, 1476,\n1481, 1480, 1479,\n1484, 1483, 1482,\n1487, 1486, 1485,\n1490, 1489, 1488,\n1493, 1492, 1491,\n1496, 1495, 1494,\n1499, 1498, 1497,\n1502, 1501, 1500,\n1505, 1504, 1503,\n1508, 1507, 1506,\n1511, 1510, 1509,\n1514, 1513, 1512,\n1517, 1516, 1515,\n1520, 1519, 1518,\n1523, 1522, 1521,\n1526, 1525, 1524,\n1529, 1528, 1527,\n1532, 1531, 1530,\n1535, 1534, 1533,\n1538, 1537, 1536,\n1541, 1540, 1539,\n1544, 1543, 1542,\n1547, 1546, 1545,\n1550, 1549, 1548,\n1553, 1552, 1551,\n1556, 1555, 1554,\n1559, 1558, 1557,\n1562, 1561, 1560,\n1565, 1564, 1563,\n1568, 1567, 1566,\n1571, 1570, 1569,\n1574, 1573, 1572,\n1577, 1576, 1575,\n1580, 1579, 1578,\n1583, 1582, 1581,\n1586, 1585, 1584,\n1589, 1588, 1587,\n1592, 1591, 1590,\n1595, 1594, 1593,\n1598, 1597, 1596,\n1601, 1600, 1599,\n1604, 1603, 1602,\n1607, 1606, 1605,\n1610, 1609, 1608,\n1613, 1612, 1611,\n1616, 1615, 1614,\n1619, 1618, 1617,\n1622, 1621, 1620,\n1625, 1624, 1623,\n1628, 1627, 1626,\n1631, 1630, 1629,\n1634, 1633, 1632,\n1637, 1636, 1635,\n1640, 1639, 1638,\n1643, 1642, 1641,\n1646, 1645, 1644,\n1649, 1648, 1647,\n1652, 1651, 1650,\n1655, 1654, 1653,\n1658, 1657, 1656,\n1661, 1660, 1659,\n1664, 1663, 1662,\n1667, 1666, 1665,\n1670, 1669, 1668,\n1673, 1672, 1671,\n1676, 1675, 1674,\n1679, 1678, 1677,\n1682, 1681, 1680,\n1685, 1684, 1683,\n1688, 1687, 1686,\n1691, 1690, 1689,\n1694, 1693, 1692,\n1697, 1696, 1695,\n1700, 1699, 1698,\n1703, 1702, 1701,\n1706, 1705, 1704,\n1709, 1708, 1707,\n1712, 1711, 1710,\n1715, 1714, 1713,\n1718, 1717, 1716,\n1721, 1720, 1719,\n1724, 1723, 1722,\n1727, 1726, 1725,\n1730, 1729, 1728,\n1733, 1732, 1731,\n1736, 1735, 1734,\n1739, 1738, 1737,\n1742, 1741, 1740,\n1745, 1744, 1743,\n1748, 1747, 1746,\n1751, 1750, 1749,\n1754, 1753, 1752,\n1757, 1756, 1755,\n1760, 1759, 1758,\n1763, 1762, 1761,\n1766, 1765, 1764,\n1769, 1768, 1767,\n1772, 1771, 1770,\n1775, 1774, 1773,\n1778, 1777, 1776,\n1781, 1780, 1779,\n1784, 1783, 1782,\n1787, 1786, 1785,\n1790, 1789, 1788,\n1793, 1792, 1791,\n1796, 1795, 1794,\n1799, 1798, 1797,\n1802, 1801, 1800,\n1805, 1804, 1803,\n1808, 1807, 1806,\n1811, 1810, 1809,\n1814, 1813, 1812,\n1817, 1816, 1815,\n1820, 1819, 1818,\n1823, 1822, 1821,\n1826, 1825, 1824,\n1829, 1828, 1827,\n1832, 1831, 1830,\n1835, 1834, 1833,\n1838, 1837, 1836,\n1841, 1840, 1839,\n1844, 1843, 1842,\n1847, 1846, 1845,\n1850, 1849, 1848,\n1853, 1852, 1851,\n1856, 1855, 1854,\n1859, 1858, 1857,\n1862, 1861, 1860,\n1865, 1864, 1863,\n1868, 1867, 1866,\n1871, 1870, 1869,\n1874, 1873, 1872,\n1877, 1876, 1875,\n1880, 1879, 1878,\n1883, 1882, 1881,\n1886, 1885, 1884,\n1889, 1888, 1887,\n1892, 1891, 1890,\n1895, 1894, 1893,\n1898, 1897, 1896,\n1901, 1900, 1899,\n1904, 1903, 1902,\n1907, 1906, 1905,\n1910, 1909, 1908,\n1913, 1912, 1911,\n1916, 1915, 1914,\n1919, 1918, 1917,\n1922, 1921, 1920,\n1925, 1924, 1923,\n1928, 1927, 1926,\n1931, 1930, 1929,\n1934, 1933, 1932,\n1937, 1936, 1935,\n1940, 1939, 1938,\n1943, 1942, 1941,\n1946, 1945, 1944,\n1949, 1948, 1947,\n1952, 1951, 1950,\n1955, 1954, 1953,\n1958, 1957, 1956,\n1961, 1960, 1959,\n1964, 1963, 1962,\n1967, 1966, 1965,\n1970, 1969, 1968,\n1973, 1972, 1971,\n1976, 1975, 1974,\n1979, 1978, 1977,\n1982, 1981, 1980,\n1985, 1984, 1983,\n1988, 1987, 1986,\n1991, 1990, 1989,\n1994, 1993, 1992,\n1997, 1996, 1995,\n2000, 1999, 1998,\n2003, 2002, 2001,\n2006, 2005, 2004,\n2009, 2008, 2007,\n2012, 2011, 2010,\n2015, 2014, 2013,\n2018, 2017, 2016,\n2021, 2020, 2019,\n2024, 2023, 2022,\n2027, 2026, 2025,\n2030, 2029, 2028,\n2033, 2032, 2031,\n2036, 2035, 2034,\n2039, 2038, 2037,\n2042, 2041, 2040,\n2045, 2044, 2043,\n2048, 2047, 2046,\n2051, 2050, 2049,\n2054, 2053, 2052,\n2057, 2056, 2055,\n2060, 2059, 2058,\n2063, 2062, 2061,\n2066, 2065, 2064,\n2069, 2068, 2067,\n2072, 2071, 2070,\n2075, 2074, 2073,\n2078, 2077, 2076,\n2081, 2080, 2079,\n2084, 2083, 2082,\n2087, 2086, 2085,\n2090, 2089, 2088,\n2093, 2092, 2091,\n2096, 2095, 2094,\n2099, 2098, 2097,\n2102, 2101, 2100,\n2105, 2104, 2103,\n2108, 2107, 2106,\n2111, 2110, 2109,\n2114, 2113, 2112,\n2117, 2116, 2115,\n2120, 2119, 2118,\n2123, 2122, 2121,\n2126, 2125, 2124,\n2129, 2128, 2127,\n2132, 2131, 2130,\n2135, 2134, 2133,\n2138, 2137, 2136,\n2141, 2140, 2139,\n2144, 2143, 2142,\n2147, 2146, 2145,\n2150, 2149, 2148,\n2153, 2152, 2151,\n2156, 2155, 2154,\n2159, 2158, 2157,\n2162, 2161, 2160,\n2165, 2164, 2163,\n2168, 2167, 2166,\n2171, 2170, 2169,\n2174, 2173, 2172,\n2177, 2176, 2175,\n2180, 2179, 2178,\n2183, 2182, 2181,\n2186, 2185, 2184,\n2189, 2188, 2187,\n2192, 2191, 2190,\n2195, 2194, 2193,\n2198, 2197, 2196,\n2201, 2200, 2199,\n2204, 2203, 2202,\n2207, 2206, 2205,\n2210, 2209, 2208,\n2213, 2212, 2211,\n2216, 2215, 2214,\n2219, 2218, 2217,\n2222, 2221, 2220,\n2225, 2224, 2223,\n2228, 2227, 2226,\n2231, 2230, 2229,\n2234, 2233, 2232,\n2237, 2236, 2235,\n2240, 2239, 2238,\n2243, 2242, 2241,\n2246, 2245, 2244,\n2249, 2248, 2247,\n2252, 2251, 2250,\n2255, 2254, 2253,\n2258, 2257, 2256,\n2261, 2260, 2259,\n2264, 2263, 2262,\n2267, 2266, 2265,\n2270, 2269, 2268,\n2273, 2272, 2271,\n2276, 2275, 2274,\n2279, 2278, 2277,\n2282, 2281, 2280,\n2285, 2284, 2283,\n2288, 2287, 2286,\n2291, 2290, 2289,\n2294, 2293, 2292,\n2297, 2296, 2295,\n2300, 2299, 2298,\n2303, 2302, 2301,\n2306, 2305, 2304,\n2309, 2308, 2307,\n2312, 2311, 2310,\n2315, 2314, 2313,\n2318, 2317, 2316,\n2321, 2320, 2319,\n2324, 2323, 2322,\n2327, 2326, 2325,\n2330, 2329, 2328,\n2333, 2332, 2331,\n2336, 2335, 2334,\n2339, 2338, 2337,\n2342, 2341, 2340,\n2345, 2344, 2343,\n2348, 2347, 2346,\n2351, 2350, 2349,\n2354, 2353, 2352,\n2357, 2356, 2355,\n2360, 2359, 2358,\n2363, 2362, 2361,\n2366, 2365, 2364,\n2369, 2368, 2367,\n2372, 2371, 2370,\n2375, 2374, 2373,\n2378, 2377, 2376,\n2381, 2380, 2379,\n2384, 2383, 2382,\n2387, 2386, 2385,\n2390, 2389, 2388,\n2393, 2392, 2391,\n2396, 2395, 2394,\n2399, 2398, 2397,\n2402, 2401, 2400,\n2405, 2404, 2403,\n2408, 2407, 2406,\n2411, 2410, 2409,\n2414, 2413, 2412,\n2417, 2416, 2415,\n2420, 2419, 2418,\n2423, 2422, 2421,\n2426, 2425, 2424,\n2429, 2428, 2427,\n2432, 2431, 2430,\n2435, 2434, 2433,\n2438, 2437, 2436,\n2441, 2440, 2439,\n2444, 2443, 2442,\n2447, 2446, 2445,\n2450, 2449, 2448,\n2453, 2452, 2451,\n2456, 2455, 2454,\n2459, 2458, 2457,\n2462, 2461, 2460,\n2465, 2464, 2463,\n2468, 2467, 2466,\n2471, 2470, 2469,\n2474, 2473, 2472,\n2477, 2476, 2475,\n2480, 2479, 2478,\n2483, 2482, 2481,\n2486, 2485, 2484,\n2489, 2488, 2487,\n2492, 2491, 2490,\n2495, 2494, 2493,\n2498, 2497, 2496,\n2501, 2500, 2499,\n2504, 2503, 2502,\n2507, 2506, 2505,\n2510, 2509, 2508,\n2513, 2512, 2511,\n2516, 2515, 2514,\n2519, 2518, 2517,\n2522, 2521, 2520,\n2525, 2524, 2523,\n2528, 2527, 2526,\n2531, 2530, 2529,\n2534, 2533, 2532,\n2537, 2536, 2535,\n2540, 2539, 2538,\n2543, 2542, 2541,\n2546, 2545, 2544,\n2549, 2548, 2547,\n2552, 2551, 2550,\n2555, 2554, 2553,\n2558, 2557, 2556,\n2561, 2560, 2559,\n2564, 2563, 2562,\n2567, 2566, 2565,\n2570, 2569, 2568,\n2573, 2572, 2571,\n2576, 2575, 2574,\n2579, 2578, 2577,\n2582, 2581, 2580,\n2585, 2584, 2583,\n2588, 2587, 2586,\n2591, 2590, 2589,\n2594, 2593, 2592,\n2597, 2596, 2595,\n2600, 2599, 2598,\n2603, 2602, 2601,\n2606, 2605, 2604,\n2609, 2608, 2607,\n2612, 2611, 2610,\n2615, 2614, 2613,\n2618, 2617, 2616,\n2621, 2620, 2619,\n2624, 2623, 2622,\n2627, 2626, 2625,\n2630, 2629, 2628,\n2633, 2632, 2631,\n2636, 2635, 2634,\n2639, 2638, 2637,\n2642, 2641, 2640,\n2645, 2644, 2643,\n2648, 2647, 2646,\n2651, 2650, 2649,\n2654, 2653, 2652,\n2657, 2656, 2655,\n2660, 2659, 2658,\n2663, 2662, 2661,\n2666, 2665, 2664,\n2669, 2668, 2667,\n2672, 2671, 2670,\n2675, 2674, 2673,\n2678, 2677, 2676,\n2681, 2680, 2679,\n2684, 2683, 2682,\n2687, 2686, 2685,\n2690, 2689, 2688,\n2693, 2692, 2691,\n2696, 2695, 2694,\n2699, 2698, 2697,\n2702, 2701, 2700,\n2705, 2704, 2703,\n2708, 2707, 2706,\n2711, 2710, 2709,\n2714, 2713, 2712,\n2717, 2716, 2715,\n2720, 2719, 2718,\n2723, 2722, 2721,\n2726, 2725, 2724,\n2729, 2728, 2727,\n2732, 2731, 2730,\n2735, 2734, 2733,\n2738, 2737, 2736,\n2741, 2740, 2739,\n2744, 2743, 2742,\n2747, 2746, 2745,\n2750, 2749, 2748,\n2753, 2752, 2751,\n2756, 2755, 2754,\n2759, 2758, 2757,\n2762, 2761, 2760,\n2765, 2764, 2763,\n2768, 2767, 2766,\n2771, 2770, 2769,\n2774, 2773, 2772,\n2777, 2776, 2775,\n2780, 2779, 2778,\n2783, 2782, 2781,\n2786, 2785, 2784,\n2789, 2788, 2787,\n2792, 2791, 2790,\n2795, 2794, 2793,\n2798, 2797, 2796,\n2801, 2800, 2799,\n2804, 2803, 2802,\n2807, 2806, 2805,\n2810, 2809, 2808,\n2813, 2812, 2811,\n2816, 2815, 2814,\n2819, 2818, 2817,\n2822, 2821, 2820,\n2825, 2824, 2823,\n2828, 2827, 2826,\n2831, 2830, 2829,\n2834, 2833, 2832,\n2837, 2836, 2835,\n2840, 2839, 2838,\n2843, 2842, 2841,\n2846, 2845, 2844,\n2849, 2848, 2847,\n2852, 2851, 2850,\n2855, 2854, 2853,\n2858, 2857, 2856,\n2861, 2860, 2859,\n2864, 2863, 2862,\n2867, 2866, 2865,\n2870, 2869, 2868,\n2873, 2872, 2871,\n2876, 2875, 2874,\n2879, 2878, 2877\n],\n\"vertices\" : [\n-0.346760, -0.353553, 0.068975, -0.693044, -0.707137, 0.140172, -0.277094, 0.081800, -0.957355, -0.665774, 0.702406, 0.251738, 0.024121, 0.611887,\n-0.272448, -0.415735, 0.054193, -0.544337, -0.831489, 0.111008, -0.298466, 0.068298, -0.951973, -0.783031, 0.551109, 0.288344, 0.020139, 0.677216,\n-0.277785, -0.415735, -0.000000, -0.582526, -0.812812, -0.000003, -0.182415, 0.130737, -0.974491, -0.789993, 0.566171, 0.235289, 0.038786, 0.683738,\n-0.453064, 0.191342, 0.090120, -0.916862, 0.364377, 0.163075, -0.109371, 0.163588, -0.980447, 0.385547, 0.914179, 0.125021, 0.048498, 0.219973,\n-0.480970, 0.097545, 0.095671, -0.961806, 0.181272, 0.205110, -0.182105, 0.135711, -0.973869, 0.201708, 0.975890, 0.083381, 0.042455, 0.285041,\n-0.490393, 0.097545, -0.000000, -0.980782, 0.195105, -0.000626, 0.044366, 0.219896, -0.974514, 0.190567, 0.958649, 0.211369, 0.077252, 0.297212,\n-0.272448, -0.415735, 0.054193, -0.544337, -0.831489, 0.111008, -0.298466, 0.068298, -0.951973, -0.783031, 0.551109, 0.288344, 0.020139, 0.677216,\n-0.187665, -0.461940, 0.037329, -0.374717, -0.923888, 0.077578, -0.328642, 0.054119, -0.942903, -0.865090, 0.378509, 0.329166, 0.015120, 0.742415,\n-0.191342, -0.461940, -0.000000, -0.412766, -0.910837, -0.000002, -0.232681, 0.105446, -0.966820, -0.876357, 0.397140, 0.272541, 0.029845, 0.747594,\n-0.480970, 0.097545, 0.095671, -0.961806, 0.181272, 0.205110, -0.182105, 0.135711, -0.973869, 0.201708, 0.975890, 0.083381, 0.042455, 0.285041,\n-0.490393, 0.000000, 0.097545, -0.980786, -0.000000, 0.195089, -0.193401, 0.131241, -0.972302, 0.025229, 0.991603, 0.126836, 0.037959, 0.350306,\n-0.500000, 0.000000, -0.000000, -0.999462, -0.000000, 0.032810, -0.032196, 0.192512, -0.980766, 0.005789, 0.984313, 0.176334, 0.069762, 0.361393,\n-0.187665, 0.461940, 0.037329, -0.388811, 0.918409, 0.073153, 0.727220, 0.257180, 0.636404, -0.511054, -0.281057, 0.812300, 0.334831, 0.015378,\n-0.097545, 0.490393, -0.000000, -0.227152, 0.973859, 0.000000, 0.737153, 0.171940, 0.653485, -0.576689, -0.134512, 0.805814, 0.421200, 0.072930,\n-0.095671, 0.490393, 0.019030, -0.209109, 0.976740, 0.047449, 0.634606, 0.098625, 0.766517, -0.730319, -0.188252, 0.656655, 0.438189, 0.065976,\n-0.187665, -0.461940, 0.037329, -0.374717, -0.923888, 0.077578, -0.328642, 0.054119, -0.942903, -0.865090, 0.378509, 0.329166, 0.015120, 0.742415,\n-0.095671, -0.490393, 0.019030, -0.209109, -0.976740, 0.047449, -0.365074, 0.032961, -0.930395, -0.899781, 0.211182, 0.381832, 0.007995, 0.807346,\n-0.097545, -0.490393, -0.000000, -0.227152, -0.973859, 0.000000, -0.300081, 0.069994, -0.951342, -0.917744, 0.214063, 0.334550, 0.017133, 0.810598,\n-0.490393, 0.000000, 0.097545, -0.980786, -0.000000, 0.195089, -0.193401, 0.131241, -0.972302, 0.025229, 0.991603, 0.126836, 0.037959, 0.350306,\n-0.480970, -0.097545, 0.095671, -0.967698, -0.162818, 0.192487, -0.213135, 0.120517, -0.969561, -0.136223, 0.980125, 0.144214, 0.034240, 0.415668,\n-0.500000, 0.000000, -0.000000, -0.999462, -0.000000, 0.032810, -0.032196, 0.192512, -0.980766, 0.005789, 0.984313, 0.176334, 0.069762, 0.361393,\n-0.187665, 0.461940, 0.037329, -0.388811, 0.918409, 0.073153, 0.722431, 0.353191, -0.594432, 0.435443, 0.113211, 0.893069, 0.334831, 0.015378,\n-0.272448, 0.415735, 0.054193, -0.571333, 0.812813, 0.113643, 0.539261, 0.476166, -0.694596, 0.644250, 0.358383, 0.675650, 0.130135, 0.033229,\n-0.277785, 0.415735, -0.000000, -0.555535, 0.831489, -0.002683, 0.668118, 0.444458, -0.596720, 0.514926, 0.346562, 0.784057, 0.184327, 0.059204,\n-0.480970, -0.097545, 0.095671, -0.967698, -0.162818, 0.192487, -0.213135, 0.120517, -0.969561, -0.136223, 0.980125, 0.144214, 0.034240, 0.415668,\n-0.453064, -0.191342, 0.090120, -0.913669, -0.369648, 0.169024, -0.223858, 0.110540, -0.968333, -0.340064, 0.922966, 0.180251, 0.030880, 0.481076,\n-0.490393, -0.097545, -0.000000, -0.980782, -0.195105, -0.000626, -0.037587, 0.192093, -0.980657, -0.191292, 0.960975, 0.199836, 0.063447, 0.425835,\n-0.272448, 0.415735, 0.054193, -0.571333, 0.812813, 0.113643, 0.539261, 0.476166, -0.694596, 0.644250, 0.358383, 0.675650, 0.130135, 0.033229,\n-0.346760, 0.353553, 0.068975, -0.703949, 0.692994, 0.155612, 0.004292, 0.223241, -0.974754, 0.706666, 0.661393, 0.251362, 0.076103, 0.091824,\n-0.353553, 0.353553, -0.000000, -0.716925, 0.697092, 0.008971, 0.305508, 0.325714, -0.894749, 0.613601, 0.624846, 0.482763, 0.127116, 0.110949,\n-0.453064, -0.191342, 0.090120, -0.913669, -0.369648, 0.169024, -0.223858, 0.110540, -0.968333, -0.340064, 0.922966, 0.180251, 0.030880, 0.481076,\n-0.407747, -0.277785, 0.081106, -0.815119, -0.555608, 0.163956, -0.255986, 0.091573, -0.962333, -0.520218, 0.826582, 0.214791, 0.027594, 0.546493,\n-0.415735, -0.277785, -0.000000, -0.849229, -0.528024, -0.000003, -0.103524, 0.166506, -0.980591, -0.517614, 0.832485, 0.197593, 0.051941, 0.554970,\n-0.346760, 0.353553, 0.068975, -0.703949, 0.692994, 0.155612, 0.004292, 0.223241, -0.974754, 0.706666, 0.661393, 0.251362, 0.076103, 0.091824,\n-0.407747, 0.277785, 0.081106, -0.825138, 0.543823, 0.152983, -0.041640, 0.211515, -0.976487, 0.563453, 0.811807, 0.153267, 0.057879, 0.155328,\n-0.353553, 0.353553, -0.000000, -0.716925, 0.697092, 0.008971, 0.305508, 0.325714, -0.894749, 0.613601, 0.624846, 0.482763, 0.127116, 0.110949,\n-0.407747, -0.277785, 0.081106, -0.815119, -0.555608, 0.163956, -0.255986, 0.091573, -0.962333, -0.520218, 0.826582, 0.214791, 0.027594, 0.546493,\n-0.346760, -0.353553, 0.068975, -0.693044, -0.707137, 0.140172, -0.277094, 0.081800, -0.957355, -0.665774, 0.702406, 0.251738, 0.024121, 0.611887,\n-0.353553, -0.353553, -0.000000, -0.729900, -0.683554, -0.000002, -0.140775, 0.150322, -0.978563, -0.668029, 0.713322, 0.211917, 0.045839, 0.619459,\n-0.407747, 0.277785, 0.081106, -0.825138, 0.543823, 0.152983, -0.041640, 0.211515, -0.976487, 0.563453, 0.811807, 0.153267, 0.057879, 0.155328,\n-0.453064, 0.191342, 0.090120, -0.916862, 0.364377, 0.163075, -0.109371, 0.163588, -0.980447, 0.385547, 0.914179, 0.125021, 0.048498, 0.219973,\n-0.461940, 0.191342, -0.000000, -0.923866, 0.382714, -0.001228, 0.101278, 0.241387, -0.965130, 0.370193, 0.894446, 0.250848, 0.087048, 0.233548,\n-0.176777, -0.461940, 0.073223, -0.338927, -0.929163, 0.147597, -0.417462, 0.007936, -0.908660, -0.841006, 0.369541, 0.395157, 0.938354, 0.740118,\n-0.090120, -0.490393, 0.037329, -0.180222, -0.980789, 0.074651, -0.415009, 0.007012, -0.909790, -0.889096, 0.194896, 0.414155, 0.936766, 0.805903,\n-0.095671, -0.490393, 0.019030, -0.209109, -0.976740, 0.047449, -0.365074, 0.032961, -0.930395, -0.899781, 0.211182, 0.381832, 0.946066, 0.807346,\n-0.461940, 0.000000, 0.191342, -0.935939, 0.000000, 0.352163, -0.351751, 0.048347, -0.934844, 0.019936, 0.998396, 0.052983, 0.005423, 0.345283,\n-0.453064, -0.097545, 0.187665, -0.898027, -0.208865, 0.387200, -0.400145, 0.021991, -0.916188, -0.186296, 0.977851, 0.095402, 0.004575, 0.411089,\n-0.480970, -0.097545, 0.095671, -0.967698, -0.162818, 0.192487, -0.213135, 0.120517, -0.969561, -0.136223, 0.980125, 0.144214, 0.034240, 0.415668,\n-0.176777, 0.461940, 0.073223, -0.352384, 0.923888, 0.149190, 0.649316, 0.356167, -0.671963, -0.154699, -0.214727, 0.964345, 0.420408, -0.002041,\n-0.256640, 0.415735, 0.106304, -0.501570, 0.842235, 0.197657, 0.580758, 0.497142, -0.644648, -0.113083, -0.290342, 0.950218, 0.032509, 0.016900,\n-0.187665, 0.461940, 0.037329, -0.388811, 0.918409, 0.073153, 0.722431, 0.353191, -0.594432, 0.435443, 0.113211, 0.893069, 0.334831, 0.015378,\n-0.453064, -0.097545, 0.187665, -0.898027, -0.208865, 0.387200, -0.400145, 0.021991, -0.916188, -0.186296, 0.977851, 0.095402, 0.004575, 0.411089,\n-0.426777, -0.191342, 0.176777, -0.852963, -0.400772, 0.334417, -0.377536, 0.031270, -0.925467, -0.361266, 0.915710, 0.175961, 0.003813, 0.476897,\n-0.453064, -0.191342, 0.090120, -0.913669, -0.369648, 0.169024, -0.223858, 0.110540, -0.968333, -0.340064, 0.922966, 0.180251, 0.030880, 0.481076,\n-0.256640, 0.415735, 0.106304, -0.501570, 0.842235, 0.197657, -0.166634, 0.130142, -0.977392, 0.810822, 0.537323, -0.232060, 0.032509, 0.016900,\n-0.326641, 0.353553, 0.135299, -0.631468, 0.729955, 0.261563, -0.275142, 0.104439, -0.955714, 0.701533, 0.681517, -0.208291, 0.014728, 0.082226,\n-0.272448, 0.415735, 0.054193, -0.571333, 0.812813, 0.113643, 0.024842, 0.155531, -0.987519, 0.816774, 0.576669, -0.018255, 0.130135, 0.033229,\n-0.426777, -0.191342, 0.176777, -0.852963, -0.400772, 0.334417, -0.377536, 0.031270, -0.925467, -0.361266, 0.915710, 0.175961, 0.003813, 0.476897,\n-0.384089, -0.277785, 0.159095, -0.767470, -0.555607, 0.319829, -0.396341, 0.019091, -0.917905, -0.504907, 0.831272, 0.232499, 0.003073, 0.542706,\n-0.407747, -0.277785, 0.081106, -0.815119, -0.555608, 0.163956, -0.255986, 0.091573, -0.962333, -0.520218, 0.826582, 0.214791, 0.027594, 0.546493,\n-0.326641, 0.353553, 0.135299, -0.631468, 0.729955, 0.261563, -0.275142, 0.104439, -0.955714, 0.701533, 0.681517, -0.208291, 0.014728, 0.082226,\n-0.384089, 0.277785, 0.159095, -0.756029, 0.567206, 0.326646, -0.357502, 0.060193, -0.931970, 0.532505, 0.823195, -0.196945, 0.010109, 0.147925,\n-0.346760, 0.353553, 0.068975, -0.703949, 0.692994, 0.155612, 0.004292, 0.223241, -0.974754, 0.706666, 0.661393, 0.251362, 0.076103, 0.091824,\n-0.384089, -0.277785, 0.159095, -0.767470, -0.555607, 0.319829, -0.396341, 0.019091, -0.917905, -0.504907, 0.831272, 0.232499, 0.003073, 0.542706,\n-0.326641, -0.353553, 0.135299, -0.652380, -0.707137, 0.272688, -0.399798, 0.015427, -0.916473, -0.643679, 0.706901, 0.293203, 0.002293, 0.608514,\n-0.346760, -0.353553, 0.068975, -0.693044, -0.707137, 0.140172, -0.277094, 0.081800, -0.957355, -0.665774, 0.702406, 0.251738, 0.024121, 0.611887,\n-0.384089, 0.277785, 0.159095, -0.756029, 0.567206, 0.326646, -0.357502, 0.060193, -0.931970, 0.532505, 0.823195, -0.196945, 0.010109, 0.147925,\n-0.426777, 0.191342, 0.176777, -0.864751, 0.382538, 0.325378, -0.324074, 0.069883, -0.943447, 0.386897, 0.920540, -0.054004, 0.007867, 0.213692,\n-0.407747, 0.277785, 0.081106, -0.825138, 0.543823, 0.152983, -0.041640, 0.211515, -0.976487, 0.563453, 0.811807, 0.153267, 0.057879, 0.155328,\n-0.326641, -0.353553, 0.135299, -0.652380, -0.707137, 0.272688, -0.399798, 0.015427, -0.916473, -0.643679, 0.706901, 0.293203, 0.002293, 0.608514,\n-0.256640, -0.415735, 0.106304, -0.512220, -0.831490, 0.215071, -0.404111, 0.012369, -0.914626, -0.756546, 0.555360, 0.345271, 0.001402, 0.674319,\n-0.272448, -0.415735, 0.054193, -0.544337, -0.831489, 0.111008, -0.298466, 0.068298, -0.951973, -0.783031, 0.551109, 0.288344, 0.020139, 0.677216,\n-0.426777, 0.191342, 0.176777, -0.864751, 0.382538, 0.325378, -0.324074, 0.069883, -0.943447, 0.386897, 0.920540, -0.054004, 0.007867, 0.213692,\n-0.453064, 0.097545, 0.187665, -0.893338, 0.195006, 0.404870, -0.407862, 0.026410, -0.912661, 0.176343, 0.980797, -0.083305, 0.006457, 0.279482,\n-0.480970, 0.097545, 0.095671, -0.961806, 0.181272, 0.205110, -0.182105, 0.135711, -0.973869, 0.201708, 0.975890, 0.083381, 0.042455, 0.285041,\n-0.256640, -0.415735, 0.106304, -0.512220, -0.831490, 0.215071, -0.404111, 0.012369, -0.914626, -0.756546, 0.555360, 0.345271, 0.939473, 0.674319,\n-0.176777, -0.461940, 0.073223, -0.338927, -0.929163, 0.147597, -0.417462, 0.007936, -0.908660, -0.841006, 0.369541, 0.395157, 0.938354, 0.740118,\n-0.187665, -0.461940, 0.037329, -0.374717, -0.923888, 0.077578, -0.328642, 0.054119, -0.942903, -0.865090, 0.378509, 0.329166, 0.953191, 0.742415,\n-0.453064, 0.097545, 0.187665, -0.893338, 0.195006, 0.404870, -0.407862, 0.026410, -0.912661, 0.176343, 0.980797, -0.083305, 0.006457, 0.279482,\n-0.461940, 0.000000, 0.191342, -0.935939, 0.000000, 0.352163, -0.351751, 0.048347, -0.934844, 0.019936, 0.998396, 0.052983, 0.005423, 0.345283,\n-0.480970, 0.097545, 0.095671, -0.961806, 0.181272, 0.205110, -0.182105, 0.135711, -0.973869, 0.201708, 0.975890, 0.083381, 0.042455, 0.285041,\n-0.090120, 0.490393, 0.037329, -0.195833, 0.976741, 0.087334, 0.450796, 0.010576, 0.892564, -0.819617, -0.211923, 0.532274, 0.458801, 0.062690,\n-0.176777, 0.461940, 0.073223, -0.352384, 0.923888, 0.149190, 0.543442, 0.072225, 0.836334, -0.725657, -0.370409, 0.579843, 0.420408, -0.002041,\n-0.095671, 0.490393, 0.019030, -0.209109, 0.976740, 0.047449, 0.634606, 0.098625, 0.766517, -0.730319, -0.188252, 0.656655, 0.438189, 0.065976,\n-0.293969, -0.353553, 0.196424, -0.586645, -0.707137, 0.394721, -0.515355, -0.050005, -0.855517, -0.624613, 0.705315, 0.335246, 0.918510, 0.609427,\n-0.230970, -0.415735, 0.154329, -0.460422, -0.831489, 0.310867, -0.503538, -0.043772, -0.862863, -0.729441, 0.553953, 0.401314, 0.920717, 0.675103,\n-0.256640, -0.415735, 0.106304, -0.512220, -0.831490, 0.215071, -0.404111, 0.012369, -0.914626, -0.756546, 0.555360, 0.345271, 0.939473, 0.674319,\n-0.384089, 0.191342, 0.256640, -0.784657, 0.382537, 0.487830, -0.546746, -0.056118, -0.835416, 0.299004, 0.922863, -0.242735, 0.904787, 0.215406,\n-0.407746, 0.097545, 0.272448, -0.797188, 0.195006, 0.571370, -0.593675, -0.081185, -0.800599, 0.090166, 0.974241, -0.206702, 0.908239, 0.280994,\n-0.453064, 0.097545, 0.187665, -0.893338, 0.195006, 0.404870, -0.407862, 0.026410, -0.912661, 0.176343, 0.980797, -0.083305, 0.944528, 0.279482,\n-0.230970, -0.415735, 0.154329, -0.460422, -0.831489, 0.310867, -0.503538, -0.043772, -0.862863, -0.729441, 0.553953, 0.401314, 0.920717, 0.675103,\n-0.159095, -0.461940, 0.106304, -0.328037, -0.916136, 0.230404, -0.496723, -0.040181, -0.866979, -0.799560, 0.399154, 0.448753, 0.923492, 0.740739,\n-0.176777, -0.461940, 0.073223, -0.338927, -0.929163, 0.147597, -0.417462, 0.007936, -0.908660, -0.841006, 0.369541, 0.395157, 0.938354, 0.740118,\n-0.407746, 0.097545, 0.272448, -0.797188, 0.195006, 0.571370, -0.593675, -0.081185, -0.800599, 0.090166, 0.974241, -0.206702, 0.908239, 0.280994,\n-0.415735, 0.000000, 0.277785, -0.849250, 0.000000, 0.527990, -0.527366, -0.048621, -0.848246, -0.022233, 0.999113, -0.035762, 0.910782, 0.346647,\n-0.453064, 0.097545, 0.187665, -0.893338, 0.195006, 0.404870, -0.407862, 0.026410, -0.912661, 0.176343, 0.980797, -0.083305, 0.944528, 0.279482,\n-0.081106, 0.490393, 0.054193, -0.162196, 0.980789, 0.108375, 0.362059, -0.043016, 0.931162, -0.975824, -0.175734, 0.129942, 0.480346, 0.063591,\n-0.159095, 0.461940, 0.106304, -0.303619, 0.929163, 0.210883, 0.262363, -0.131243, 0.956003, -0.947559, -0.317631, 0.035252, 0.559425, 0.003678,\n-0.090120, 0.490393, 0.037329, -0.195833, 0.976741, 0.087334, 0.401855, -0.001306, 0.915702, -0.978702, -0.189077, -0.079957, 0.458801, 0.062690,\n-0.159095, -0.461940, 0.106304, -0.328037, -0.916136, 0.230404, -0.496723, -0.040181, -0.866979, -0.799560, 0.399154, 0.448753, 0.923492, 0.740739,\n-0.081106, -0.490393, 0.054193, -0.188870, -0.973859, 0.126198, -0.473215, -0.022346, -0.880663, -0.864501, 0.225849, 0.449032, 0.927429, 0.806293,\n-0.176777, -0.461940, 0.073223, -0.338927, -0.929163, 0.147597, -0.417462, 0.007936, -0.908660, -0.841006, 0.369541, 0.395157, 0.938354, 0.740118,\n-0.415735, 0.000000, 0.277785, -0.849250, 0.000000, 0.527990, -0.527366, -0.048621, -0.848246, -0.022233, 0.999113, -0.035762, 0.910782, 0.346647,\n-0.407746, -0.097545, 0.272448, -0.797188, -0.195006, 0.571370, -0.569116, -0.073122, -0.818999, -0.207860, 0.977191, 0.043499, 0.912871, 0.412331,\n-0.453064, -0.097545, 0.187665, -0.898027, -0.208865, 0.387200, -0.400145, 0.021991, -0.916188, -0.186296, 0.977851, 0.095402, 0.942646, 0.411089,\n-0.159095, 0.461940, 0.106304, -0.303619, 0.929163, 0.210883, 0.905828, 0.212862, 0.366285, 0.949277, 0.275997, 0.150663, 0.559425, 0.003678,\n-0.230970, 0.415735, 0.154329, -0.475288, 0.823575, 0.309558, 0.851340, 0.341682, 0.398086, 0.879481, 0.434804, 0.193544, 0.849384, 0.021864,\n-0.176777, 0.461940, 0.073223, -0.352384, 0.923888, 0.149190, 0.882594, 0.275066, 0.381268, 0.930033, 0.327957, 0.165781, 0.420408, -0.002041,\n-0.407746, -0.097545, 0.272448, -0.797188, -0.195006, 0.571370, -0.569116, -0.073122, -0.818999, -0.207860, 0.977191, 0.043499, 0.912871, 0.412331,\n-0.384089, -0.191342, 0.256640, -0.784657, -0.382537, 0.487830, -0.512101, -0.043519, -0.857822, -0.349112, 0.922937, 0.162196, 0.914751, 0.478029,\n-0.453064, -0.097545, 0.187665, -0.898027, -0.208865, 0.387200, -0.400145, 0.021991, -0.916188, -0.186296, 0.977851, 0.095402, 0.942646, 0.411089,\n-0.230970, 0.415735, 0.154329, -0.475288, 0.823575, 0.309558, -0.699189, -0.139982, -0.701099, 0.382476, 0.510258, -0.770291, 0.849384, 0.021864,\n-0.293969, 0.353553, 0.196424, -0.606889, 0.683554, 0.405511, -0.627957, -0.099639, -0.771843, 0.403052, 0.704434, -0.584228, 0.888292, 0.084903,\n-0.326641, 0.353553, 0.135299, -0.631468, 0.729955, 0.261563, -0.275142, 0.104439, -0.955714, 0.701533, 0.681517, -0.208291, 0.952799, 0.082226,\n-0.384089, -0.191342, 0.256640, -0.784657, -0.382537, 0.487830, -0.512101, -0.043519, -0.857822, -0.349112, 0.922937, 0.162196, 0.914751, 0.478029,\n-0.345671, -0.277785, 0.230970, -0.690329, -0.555606, 0.463409, -0.526129, -0.054145, -0.848679, -0.498075, 0.829528, 0.252596, 0.916581, 0.543731,\n-0.384089, -0.277785, 0.159095, -0.767470, -0.555607, 0.319829, -0.396341, 0.019091, -0.917905, -0.504907, 0.831272, 0.232499, 0.941144, 0.542706,\n-0.293969, 0.353553, 0.196424, -0.606889, 0.683554, 0.405511, -0.627957, -0.099639, -0.771843, 0.403052, 0.704434, -0.584228, 0.888292, 0.084903,\n-0.345671, 0.277785, 0.230970, -0.690488, 0.539041, 0.482349, -0.614333, -0.084979, -0.784458, 0.339030, 0.830224, -0.442477, 0.899334, 0.149958,\n-0.384089, 0.277785, 0.159095, -0.756029, 0.567206, 0.326646, -0.357502, 0.060193, -0.931970, 0.532505, 0.823195, -0.196945, 0.948180, 0.147925,\n-0.345671, -0.277785, 0.230970, -0.690329, -0.555606, 0.463409, -0.526129, -0.054145, -0.848679, -0.498075, 0.829528, 0.252596, 0.916581, 0.543731,\n-0.293969, -0.353553, 0.196424, -0.586645, -0.707137, 0.394721, -0.515355, -0.050005, -0.855517, -0.624613, 0.705315, 0.335246, 0.918510, 0.609427,\n-0.326641, -0.353553, 0.135299, -0.652380, -0.707137, 0.272688, -0.399798, 0.015427, -0.916473, -0.643679, 0.706901, 0.293203, 0.940364, 0.608514,\n-0.345671, 0.277785, 0.230970, -0.690488, 0.539041, 0.482349, -0.614333, -0.084979, -0.784458, 0.339030, 0.830224, -0.442477, 0.899334, 0.149958,\n-0.384089, 0.191342, 0.256640, -0.784657, 0.382537, 0.487830, -0.546746, -0.056118, -0.835416, 0.299004, 0.922863, -0.242735, 0.904787, 0.215406,\n-0.384089, 0.277785, 0.159095, -0.756029, 0.567206, 0.326646, -0.357502, 0.060193, -0.931970, 0.532505, 0.823195, -0.196945, 0.948180, 0.147925,\n-0.326641, -0.191342, 0.326641, -0.674410, -0.382537, 0.631535, -0.640365, -0.122758, -0.758197, -0.367033, 0.915850, 0.162803, 0.887781, 0.484426,\n-0.293969, -0.277785, 0.293969, -0.586657, -0.555607, 0.589182, -0.641183, -0.125746, -0.757016, -0.496410, 0.821541, 0.280443, 0.892120, 0.549535,\n-0.345671, -0.277785, 0.230970, -0.690329, -0.555606, 0.463409, -0.526129, -0.054145, -0.848679, -0.498075, 0.829528, 0.252596, 0.916581, 0.543731,\n-0.250000, 0.353553, 0.250000, -0.498368, 0.707137, 0.501585, -0.847765, -0.276403, -0.452654, 0.171823, 0.647638, -0.742322, 0.830912, 0.099015,\n-0.293969, 0.277785, 0.293969, -0.586657, 0.555607, 0.589182, -0.788526, -0.226098, -0.571933, 0.186215, 0.800587, -0.569548, 0.853037, 0.161076,\n-0.293969, 0.353553, 0.196424, -0.606889, 0.683554, 0.405511, -0.627957, -0.099639, -0.771843, 0.403052, 0.704434, -0.584228, 0.888292, 0.084903,\n-0.293969, -0.277785, 0.293969, -0.586657, -0.555607, 0.589182, -0.641183, -0.125746, -0.757016, -0.496410, 0.821541, 0.280443, 0.892120, 0.549535,\n-0.250000, -0.353553, 0.250000, -0.498368, -0.707137, 0.501585, -0.619865, -0.113856, -0.776405, -0.605821, 0.697907, 0.381977, 0.896720, 0.614601,\n-0.293969, -0.353553, 0.196424, -0.586645, -0.707137, 0.394721, -0.515355, -0.050005, -0.855517, -0.624613, 0.705315, 0.335246, 0.918510, 0.609427,\n-0.293969, 0.277785, 0.293969, -0.586657, 0.555607, 0.589182, -0.788526, -0.226098, -0.571933, 0.186215, 0.800587, -0.569548, 0.853037, 0.161076,\n-0.326641, 0.191342, 0.326641, -0.674410, 0.382537, 0.631535, -0.724649, -0.178874, -0.665498, 0.153103, 0.909186, -0.387221, 0.864885, 0.224918,\n-0.345671, 0.277785, 0.230970, -0.690488, 0.539041, 0.482349, -0.614333, -0.084979, -0.784458, 0.339030, 0.830224, -0.442477, 0.899334, 0.149958,\n-0.250000, -0.353553, 0.250000, -0.498368, -0.707137, 0.501585, -0.619865, -0.113856, -0.776405, -0.605821, 0.697907, 0.381977, 0.896720, 0.614601,\n-0.196424, -0.415735, 0.196424, -0.390927, -0.831489, 0.394718, -0.594841, -0.099022, -0.797721, -0.700439, 0.546965, 0.458491, 0.902010, 0.679551,\n-0.230970, -0.415735, 0.154329, -0.460422, -0.831489, 0.310867, -0.503538, -0.043772, -0.862863, -0.729441, 0.553953, 0.401314, 0.920717, 0.675103,\n-0.326641, 0.191342, 0.326641, -0.674410, 0.382537, 0.631535, -0.724649, -0.178874, -0.665498, 0.153103, 0.909186, -0.387221, 0.864885, 0.224918,\n-0.346760, 0.097545, 0.346760, -0.670402, 0.195005, 0.715915, -0.741984, -0.182321, -0.645151, -0.028063, 0.957494, -0.287086, 0.872656, 0.289451,\n-0.407746, 0.097545, 0.272448, -0.797188, 0.195006, 0.571370, -0.593675, -0.081185, -0.800599, 0.090166, 0.974241, -0.206702, 0.908239, 0.280994,\n-0.196424, -0.415735, 0.196424, -0.390927, -0.831489, 0.394718, -0.594841, -0.099022, -0.797721, -0.700439, 0.546965, 0.458491, 0.902010, 0.679551,\n-0.135299, -0.461940, 0.135299, -0.256643, -0.929163, 0.266065, -0.560977, -0.080965, -0.823863, -0.779982, 0.361677, 0.510703, 0.908692, 0.744267,\n-0.159095, -0.461940, 0.106304, -0.328037, -0.916136, 0.230404, -0.496723, -0.040181, -0.866979, -0.799560, 0.399154, 0.448753, 0.923492, 0.740739,\n-0.346760, 0.097545, 0.346760, -0.670402, 0.195005, 0.715915, -0.741984, -0.182321, -0.645151, -0.028063, 0.957494, -0.287086, 0.872656, 0.289451,\n-0.353553, 0.000000, 0.353554, -0.729928, -0.000000, 0.683524, -0.676348, -0.144515, -0.722266, -0.093881, 0.990523, -0.100254, 0.878497, 0.354309,\n-0.407746, 0.097545, 0.272448, -0.797188, 0.195006, 0.571370, -0.593675, -0.081185, -0.800599, 0.090166, 0.974241, -0.206702, 0.908239, 0.280994,\n-0.068975, 0.490393, 0.068975, -0.160620, 0.973859, 0.160620, 0.049797, -0.154530, 0.986732, -0.984709, -0.169230, 0.041350, 0.499668, 0.068531,\n-0.135299, 0.461940, 0.135299, -0.276784, 0.916136, 0.289974, -0.288406, -0.367051, 0.884362, -0.948483, -0.212046, -0.235407, 0.608139, 0.025300,\n-0.159095, 0.461940, 0.106304, -0.303619, 0.929163, 0.210883, 0.262363, -0.131243, 0.956003, -0.947559, -0.317631, 0.035252, 0.559425, 0.003678,\n-0.135299, -0.461940, 0.135299, -0.256643, -0.929163, 0.266065, -0.560977, -0.080965, -0.823863, -0.779982, 0.361677, 0.510703, 0.908692, 0.744267,\n-0.068975, -0.490393, 0.068975, -0.137937, -0.980789, 0.137937, -0.513926, -0.048176, -0.856481, -0.847505, 0.188951, 0.496017, 0.918182, 0.808510,\n-0.081106, -0.490393, 0.054193, -0.188870, -0.973859, 0.126198, -0.473215, -0.022346, -0.880663, -0.864501, 0.225849, 0.449032, 0.927429, 0.806293,\n-0.353553, 0.000000, 0.353554, -0.729928, -0.000000, 0.683524, -0.676348, -0.144515, -0.722266, -0.093881, 0.990523, -0.100254, 0.878497, 0.354309,\n-0.346760, -0.097545, 0.346760, -0.670401, -0.195005, 0.715915, -0.698879, -0.158168, -0.697532, -0.256624, 0.966240, 0.022881, 0.883363, 0.419330,\n-0.407746, -0.097545, 0.272448, -0.797188, -0.195006, 0.571370, -0.569116, -0.073122, -0.818999, -0.207860, 0.977191, 0.043499, 0.912871, 0.412331,\n-0.135299, 0.461940, 0.135299, -0.276784, 0.916136, 0.289974, -0.838980, -0.377520, 0.391908, -0.951430, -0.218939, -0.216442, 0.608139, 0.025300,\n-0.196424, 0.415735, 0.196424, -0.390926, 0.831489, 0.394718, -0.782018, -0.526214, 0.333985, -0.916734, -0.313390, -0.247760, 0.773239, 0.043658,\n-0.159095, 0.461940, 0.106304, -0.303619, 0.929163, 0.210883, -0.846521, -0.364644, 0.387862, -0.939026, -0.254321, -0.231412, 0.559425, 0.003678,\n-0.346760, -0.097545, 0.346760, -0.670401, -0.195005, 0.715915, -0.698879, -0.158168, -0.697532, -0.256624, 0.966240, 0.022881, 0.883363, 0.419330,\n-0.326641, -0.191342, 0.326641, -0.674410, -0.382537, 0.631535, -0.640365, -0.122758, -0.758197, -0.367033, 0.915850, 0.162803, 0.887781, 0.484426,\n-0.407746, -0.097545, 0.272448, -0.797188, -0.195006, 0.571370, -0.569116, -0.073122, -0.818999, -0.207860, 0.977191, 0.043499, 0.912871, 0.412331,\n-0.196424, 0.415735, 0.196424, -0.390926, 0.831489, 0.394718, -0.920222, -0.362023, -0.148766, 0.029442, 0.439922, -0.897554, 0.773239, 0.043658,\n-0.250000, 0.353553, 0.250000, -0.498368, 0.707137, 0.501585, -0.847765, -0.276403, -0.452654, 0.171823, 0.647638, -0.742322, 0.830912, 0.099015,\n-0.230970, 0.415735, 0.154329, -0.475288, 0.823575, 0.309558, -0.699189, -0.139982, -0.701099, 0.382476, 0.510258, -0.770291, 0.849384, 0.021864,\n-0.106304, -0.461940, 0.159095, -0.212592, -0.923892, 0.318165, -0.627722, -0.120406, -0.769069, -0.760208, 0.360953, 0.540183, 0.894040, 0.750649,\n-0.054193, -0.490393, 0.081106, -0.126198, -0.973859, 0.188870, -0.585134, -0.080668, -0.806914, -0.822650, 0.209137, 0.528685, 0.909154, 0.812515,\n-0.135299, -0.461940, 0.135299, -0.256643, -0.929163, 0.266065, -0.560977, -0.080965, -0.823863, -0.779982, 0.361677, 0.510703, 0.908692, 0.744267,\n-0.277785, 0.000000, 0.415735, -0.582554, 0.000000, 0.812792, -0.791757, -0.226031, -0.567477, -0.181593, 0.974723, -0.130153, 0.847136, 0.367787,\n-0.272447, -0.097545, 0.407747, -0.517853, -0.195006, 0.832947, -0.799603, -0.235756, -0.552316, -0.311033, 0.949956, 0.029027, 0.854434, 0.431735,\n-0.346760, -0.097545, 0.346760, -0.670401, -0.195005, 0.715915, -0.698879, -0.158168, -0.697532, -0.256624, 0.966240, 0.022881, 0.883363, 0.419330,\n-0.106304, 0.461940, 0.159095, -0.210110, 0.923888, 0.319821, -0.570695, -0.381507, 0.727159, -0.848846, -0.010079, -0.528543, 0.618674, 0.050065,\n-0.154329, 0.415735, 0.230970, -0.307228, 0.842235, 0.443003, -0.743979, -0.502845, 0.440048, -0.749952, 0.072286, -0.657530, 0.729617, 0.071276,\n-0.135299, 0.461940, 0.135299, -0.276784, 0.916136, 0.289974, -0.288406, -0.367051, 0.884362, -0.948483, -0.212046, -0.235407, 0.608139, 0.025300,\n-0.272447, -0.097545, 0.407747, -0.517853, -0.195006, 0.832947, -0.799603, -0.235756, -0.552316, -0.311033, 0.949956, 0.029027, 0.854434, 0.431735,\n-0.256640, -0.191342, 0.384089, -0.538245, -0.382537, 0.750971, -0.746275, -0.197719, -0.635595, -0.391554, 0.902554, 0.179113, 0.861172, 0.495829,\n-0.346760, -0.097545, 0.346760, -0.670401, -0.195005, 0.715915, -0.698879, -0.158168, -0.697532, -0.256624, 0.966240, 0.022881, 0.883363, 0.419330,\n-0.154329, 0.415735, 0.230970, -0.307228, 0.842235, 0.443003, -0.919147, -0.383226, 0.091147, -0.147007, 0.417926, -0.896508, 0.729617, 0.071276,\n-0.196424, 0.353553, 0.293969, -0.378161, 0.716973, 0.585615, -0.907376, -0.412446, -0.080977, -0.168253, 0.568824, -0.805065, 0.784585, 0.121024,\n-0.196424, 0.415735, 0.196424, -0.390926, 0.831489, 0.394718, -0.920222, -0.362023, -0.148766, 0.029442, 0.439922, -0.897554, 0.773239, 0.043658,\n-0.256640, -0.191342, 0.384089, -0.538245, -0.382537, 0.750971, -0.746275, -0.197719, -0.635595, -0.391554, 0.902554, 0.179113, 0.861172, 0.495829,\n-0.230970, -0.277785, 0.345671, -0.460442, -0.555607, 0.692311, -0.738187, -0.193503, -0.646248, -0.494685, 0.808177, 0.319589, 0.867877, 0.559931,\n-0.293969, -0.277785, 0.293969, -0.586657, -0.555607, 0.589182, -0.641183, -0.125746, -0.757016, -0.496410, 0.821541, 0.280443, 0.892120, 0.549535,\n-0.196424, 0.353553, 0.293969, -0.378161, 0.716973, 0.585615, -0.907376, -0.412446, -0.080977, -0.168253, 0.568824, -0.805065, 0.784585, 0.121024,\n-0.230970, 0.277785, 0.345671, -0.460442, 0.555607, 0.692311, -0.886261, -0.331959, -0.323025, -0.044234, 0.764572, -0.643018, 0.811543, 0.179584,\n-0.250000, 0.353553, 0.250000, -0.498368, 0.707137, 0.501585, -0.847765, -0.276403, -0.452654, 0.171823, 0.647638, -0.742322, 0.830912, 0.099015,\n-0.230970, -0.277785, 0.345671, -0.460442, -0.555607, 0.692311, -0.738187, -0.193503, -0.646248, -0.494685, 0.808177, 0.319589, 0.867877, 0.559931,\n-0.196424, -0.353553, 0.293969, -0.390937, -0.707137, 0.589174, -0.710445, -0.175141, -0.681611, -0.584656, 0.685172, 0.434416, 0.875068, 0.623907,\n-0.250000, -0.353553, 0.250000, -0.498368, -0.707137, 0.501585, -0.619865, -0.113856, -0.776405, -0.605821, 0.697907, 0.381977, 0.896720, 0.614601,\n-0.230970, 0.277785, 0.345671, -0.460442, 0.555607, 0.692311, -0.886261, -0.331959, -0.323025, -0.044234, 0.764572, -0.643018, 0.811543, 0.179584,\n-0.256640, 0.191342, 0.384089, -0.538245, 0.382537, 0.750971, -0.842125, -0.279453, -0.461228, -0.020441, 0.884868, -0.465394, 0.827524, 0.241215,\n-0.293969, 0.277785, 0.293969, -0.586657, 0.555607, 0.589182, -0.788526, -0.226098, -0.571933, 0.186215, 0.800587, -0.569548, 0.853037, 0.161076,\n-0.196424, -0.353553, 0.293969, -0.390937, -0.707137, 0.589174, -0.710445, -0.175141, -0.681611, -0.584656, 0.685172, 0.434416, 0.875068, 0.623907,\n-0.154329, -0.415735, 0.230970, -0.294645, -0.839192, 0.457102, -0.676270, -0.154843, -0.720196, -0.668082, 0.522910, 0.529369, 0.883418, 0.687578,\n-0.196424, -0.415735, 0.196424, -0.390927, -0.831489, 0.394718, -0.594841, -0.099022, -0.797721, -0.700439, 0.546965, 0.458491, 0.902010, 0.679551,\n-0.256640, 0.191342, 0.384089, -0.538245, 0.382537, 0.750971, -0.842125, -0.279453, -0.461228, -0.020441, 0.884868, -0.465394, 0.827524, 0.241215,\n-0.272447, 0.097545, 0.407747, -0.517853, 0.195006, 0.832947, -0.844805, -0.269843, -0.462050, -0.157309, 0.935362, -0.316784, 0.838568, 0.304174,\n-0.346760, 0.097545, 0.346760, -0.670402, 0.195005, 0.715915, -0.741984, -0.182321, -0.645151, -0.028063, 0.957494, -0.287086, 0.872656, 0.289451,\n-0.154329, -0.415735, 0.230970, -0.294645, -0.839192, 0.457102, -0.676270, -0.154843, -0.720196, -0.668082, 0.522910, 0.529369, 0.883418, 0.687578,\n-0.106304, -0.461940, 0.159095, -0.212592, -0.923892, 0.318165, -0.627722, -0.120406, -0.769069, -0.760208, 0.360953, 0.540183, 0.894040, 0.750649,\n-0.135299, -0.461940, 0.135299, -0.256643, -0.929163, 0.266065, -0.560977, -0.080965, -0.823863, -0.779982, 0.361677, 0.510703, 0.908692, 0.744267,\n-0.272447, 0.097545, 0.407747, -0.517853, 0.195006, 0.832947, -0.844805, -0.269843, -0.462050, -0.157309, 0.935362, -0.316784, 0.838568, 0.304174,\n-0.277785, 0.000000, 0.415735, -0.582554, 0.000000, 0.812792, -0.791757, -0.226031, -0.567477, -0.181593, 0.974723, -0.130153, 0.847136, 0.367787,\n-0.346760, 0.097545, 0.346760, -0.670402, 0.195005, 0.715915, -0.741984, -0.182321, -0.645151, -0.028063, 0.957494, -0.287086, 0.872656, 0.289451,\n-0.054193, 0.490393, 0.081106, -0.114308, 0.976741, 0.181415, 0.007857, -0.181717, 0.983319, -0.992883, -0.118463, 0.012200, 0.514668, 0.076778,\n-0.106304, 0.461940, 0.159095, -0.210110, 0.923888, 0.319821, -0.014031, -0.329939, 0.943898, -0.977433, -0.205823, -0.047561, 0.618674, 0.050065,\n-0.068975, 0.490393, 0.068975, -0.160620, 0.973859, 0.160620, 0.049797, -0.154530, 0.986732, -0.984709, -0.169230, 0.041350, 0.499668, 0.068531,\n-0.135299, -0.353553, 0.326641, -0.268483, -0.707137, 0.654121, -0.783142, -0.235163, -0.575662, -0.559335, 0.667292, 0.491798, 0.853599, 0.637120,\n-0.106304, -0.415735, 0.256640, -0.195712, -0.831354, 0.520142, -0.755147, -0.210632, -0.620795, -0.618809, 0.516163, 0.592157, 0.864986, 0.699035,\n-0.154329, -0.415735, 0.230970, -0.294645, -0.839192, 0.457102, -0.676270, -0.154843, -0.720196, -0.668082, 0.522910, 0.529369, 0.883418, 0.687578,\n-0.176777, 0.191342, 0.426777, -0.381396, 0.382538, 0.841547, -0.905356, -0.338466, -0.256460, -0.190001, 0.858483, -0.476347, 0.793211, 0.262838,\n-0.187665, 0.097545, 0.453064, -0.345401, 0.195006, 0.917971, -0.901796, -0.339696, -0.267153, -0.278623, 0.912758, -0.298735, 0.806381, 0.324118,\n-0.272447, 0.097545, 0.407747, -0.517853, 0.195006, 0.832947, -0.844805, -0.269843, -0.462050, -0.157309, 0.935362, -0.316784, 0.838568, 0.304174,\n-0.106304, -0.415735, 0.256640, -0.195712, -0.831354, 0.520142, -0.755147, -0.210632, -0.620795, -0.618809, 0.516163, 0.592157, 0.864986, 0.699035,\n-0.073223, -0.461940, 0.176777, -0.158028, -0.923819, 0.348692, -0.683486, -0.152523, -0.713851, -0.722049, 0.348989, 0.597371, 0.879619, 0.759787,\n-0.154329, -0.415735, 0.230970, -0.294645, -0.839192, 0.457102, -0.676270, -0.154843, -0.720196, -0.668082, 0.522910, 0.529369, 0.883418, 0.687578,\n-0.187665, 0.097545, 0.453064, -0.345401, 0.195006, 0.917971, -0.901796, -0.339696, -0.267153, -0.278623, 0.912758, -0.298735, 0.806381, 0.324118,\n-0.191342, 0.000000, 0.461940, -0.412793, 0.000000, 0.910825, -0.867602, -0.304395, -0.393205, -0.271698, 0.954473, -0.123136, 0.816990, 0.386308,\n-0.272447, 0.097545, 0.407747, -0.517853, 0.195006, 0.832947, -0.844805, -0.269843, -0.462050, -0.157309, 0.935362, -0.316784, 0.838568, 0.304174,\n-0.037329, 0.490393, 0.090120, -0.076720, 0.976740, 0.200230, -0.046042, -0.204078, 0.977871, -0.996782, -0.079813, 0.007405, 0.524796, 0.087364,\n-0.073223, 0.461940, 0.176777, -0.143677, 0.923888, 0.354666, -0.323732, -0.382545, 0.865365, -0.944356, -0.020846, -0.328263, 0.617332, 0.075210,\n-0.054193, 0.490393, 0.081106, -0.114308, 0.976741, 0.181415, 0.007857, -0.181717, 0.983319, -0.992883, -0.118463, 0.012200, 0.514668, 0.076778,\n-0.073223, -0.461940, 0.176777, -0.158028, -0.923819, 0.348692, -0.683486, -0.152523, -0.713851, -0.722049, 0.348989, 0.597371, 0.879619, 0.759787,\n-0.037329, -0.490393, 0.090120, -0.076720, -0.976741, 0.200230, -0.621151, -0.110267, -0.775894, -0.785454, 0.182906, 0.591276, 0.900481, 0.818239,\n-0.054193, -0.490393, 0.081106, -0.126198, -0.973859, 0.188870, -0.585134, -0.080668, -0.806914, -0.822650, 0.209137, 0.528685, 0.909154, 0.812515,\n-0.191342, 0.000000, 0.461940, -0.412793, 0.000000, 0.910825, -0.867602, -0.304395, -0.393205, -0.271698, 0.954473, -0.123136, 0.816990, 0.386308,\n-0.187665, -0.097545, 0.453064, -0.345401, -0.195006, 0.917971, -0.868976, -0.302909, -0.391314, -0.359737, 0.930964, 0.062409, 0.826278, 0.448964,\n-0.272447, -0.097545, 0.407747, -0.517853, -0.195006, 0.832947, -0.799603, -0.235756, -0.552316, -0.311033, 0.949956, 0.029027, 0.854434, 0.431735,\n-0.073223, 0.461940, 0.176777, -0.143677, 0.923888, 0.354666, -0.323732, -0.382545, 0.865365, -0.944356, -0.020846, -0.328263, 0.617332, 0.075210,\n-0.106304, 0.415735, 0.256640, -0.229408, 0.831354, 0.506185, -0.786014, -0.464962, 0.407422, -0.637678, 0.264527, -0.723458, 0.699594, 0.100450,\n-0.106304, 0.461940, 0.159095, -0.210110, 0.923888, 0.319821, -0.570695, -0.381507, 0.727159, -0.848846, -0.010079, -0.528543, 0.618674, 0.050065,\n-0.187665, -0.097545, 0.453064, -0.345401, -0.195006, 0.917971, -0.868976, -0.302909, -0.391314, -0.359737, 0.930964, 0.062409, 0.826278, 0.448964,\n-0.176777, -0.191342, 0.426777, -0.381396, -0.382538, 0.841547, -0.827334, -0.264856, -0.495349, -0.412806, 0.885027, 0.215215, 0.835042, 0.511803,\n-0.272447, -0.097545, 0.407747, -0.517853, -0.195006, 0.832947, -0.799603, -0.235756, -0.552316, -0.311033, 0.949956, 0.029027, 0.854434, 0.431735,\n-0.106304, 0.415735, 0.256640, -0.229408, 0.831354, 0.506185, -0.786014, -0.464962, 0.407422, -0.637678, 0.264527, -0.723458, 0.699594, 0.100450,\n-0.135299, 0.353553, 0.326641, -0.249073, 0.706948, 0.661957, -0.891428, -0.434521, 0.128639, -0.398036, 0.548382, -0.735422, 0.747516, 0.147506,\n-0.196424, 0.353553, 0.293969, -0.378161, 0.716973, 0.585615, -0.907376, -0.412446, -0.080977, -0.168253, 0.568824, -0.805065, 0.784585, 0.121024,\n-0.176777, -0.191342, 0.426777, -0.381396, -0.382538, 0.841547, -0.827334, -0.264856, -0.495349, -0.412806, 0.885027, 0.215215, 0.835042, 0.511803,\n-0.159095, -0.277785, 0.384089, -0.316532, -0.555607, 0.768836, -0.814925, -0.255551, -0.520183, -0.486793, 0.790790, 0.371058, 0.843924, 0.574600,\n-0.230970, -0.277785, 0.345671, -0.460442, -0.555607, 0.692311, -0.738187, -0.193503, -0.646248, -0.494685, 0.808177, 0.319589, 0.867877, 0.559931,\n-0.135299, 0.353553, 0.326641, -0.249073, 0.706948, 0.661957, -0.891428, -0.434521, 0.128639, -0.398036, 0.548382, -0.735422, 0.747516, 0.147506,\n-0.159095, 0.277785, 0.384089, -0.316532, 0.555607, 0.768836, -0.912857, -0.398758, -0.087659, -0.250957, 0.732583, -0.632727, 0.775195, 0.203324,\n-0.196424, 0.353553, 0.293969, -0.378161, 0.716973, 0.585615, -0.907376, -0.412446, -0.080977, -0.168253, 0.568824, -0.805065, 0.784585, 0.121024,\n-0.159095, -0.277785, 0.384089, -0.316532, -0.555607, 0.768836, -0.814925, -0.255551, -0.520183, -0.486793, 0.790790, 0.371058, 0.843924, 0.574600,\n-0.135299, -0.353553, 0.326641, -0.268483, -0.707137, 0.654121, -0.783142, -0.235163, -0.575662, -0.559335, 0.667292, 0.491798, 0.853599, 0.637120,\n-0.196424, -0.353553, 0.293969, -0.390937, -0.707137, 0.589174, -0.710445, -0.175141, -0.681611, -0.584656, 0.685172, 0.434416, 0.875068, 0.623907,\n-0.159095, 0.277785, 0.384089, -0.316532, 0.555607, 0.768836, -0.912857, -0.398758, -0.087659, -0.250957, 0.732583, -0.632727, 0.775195, 0.203324,\n-0.176777, 0.191342, 0.426777, -0.381396, 0.382538, 0.841547, -0.905356, -0.338466, -0.256460, -0.190001, 0.858483, -0.476347, 0.793211, 0.262838,\n-0.230970, 0.277785, 0.345671, -0.460442, 0.555607, 0.692311, -0.886261, -0.331959, -0.323025, -0.044234, 0.764572, -0.643018, 0.811543, 0.179584,\n-0.054193, 0.415735, 0.272448, -0.126245, 0.831354, 0.541214, -0.755722, -0.434023, 0.490416, -0.674138, 0.328341, -0.661612, 0.675659, 0.129678,\n-0.068975, 0.353553, 0.346760, -0.115141, 0.706949, 0.697829, -0.833800, -0.450621, 0.318933, -0.549654, 0.539813, -0.637560, 0.716770, 0.176135,\n-0.135299, 0.353553, 0.326641, -0.249073, 0.706948, 0.661957, -0.891428, -0.434521, 0.128639, -0.398036, 0.548382, -0.735422, 0.747516, 0.147506,\n-0.090120, -0.191342, 0.453064, -0.209889, -0.382537, 0.899784, -0.881719, -0.323636, -0.343267, -0.422672, 0.865347, 0.269301, 0.809410, 0.531778,\n-0.081106, -0.277785, 0.407747, -0.160456, -0.555607, 0.815815, -0.870186, -0.310475, -0.382597, -0.466542, 0.771059, 0.433366, 0.820258, 0.593116,\n-0.159095, -0.277785, 0.384089, -0.316532, -0.555607, 0.768836, -0.814925, -0.255551, -0.520183, -0.486793, 0.790790, 0.371058, 0.843924, 0.574600,\n-0.068975, 0.353553, 0.346760, -0.115141, 0.706949, 0.697829, -0.833800, -0.450621, 0.318933, -0.549654, 0.539813, -0.637560, 0.716770, 0.176135,\n-0.081106, 0.277785, 0.407747, -0.160456, 0.555607, 0.815815, -0.891798, -0.435835, 0.121423, -0.416879, 0.711041, -0.566244, 0.743218, 0.230344,\n-0.135299, 0.353553, 0.326641, -0.249073, 0.706948, 0.661957, -0.891428, -0.434521, 0.128639, -0.398036, 0.548382, -0.735422, 0.747516, 0.147506,\n-0.081106, -0.277785, 0.407747, -0.160456, -0.555607, 0.815815, -0.870186, -0.310475, -0.382597, -0.466542, 0.771059, 0.433366, 0.820258, 0.593116,\n-0.068975, -0.353553, 0.346760, -0.135710, -0.707138, 0.693930, -0.844001, -0.284314, -0.454784, -0.517668, 0.647807, 0.558898, 0.832307, 0.653935,\n-0.135299, -0.353553, 0.326641, -0.268483, -0.707137, 0.654121, -0.783142, -0.235163, -0.575662, -0.559335, 0.667292, 0.491798, 0.853599, 0.637120,\n-0.081106, 0.277785, 0.407747, -0.160456, 0.555607, 0.815815, -0.891798, -0.435835, 0.121423, -0.416879, 0.711041, -0.566244, 0.743218, 0.230344,\n-0.090120, 0.191342, 0.453064, -0.209889, 0.382537, 0.899784, -0.913308, -0.405225, -0.040765, -0.339629, 0.834451, -0.433985, 0.761800, 0.288261,\n-0.159095, 0.277785, 0.384089, -0.316532, 0.555607, 0.768836, -0.912857, -0.398758, -0.087659, -0.250957, 0.732583, -0.632727, 0.775195, 0.203324,\n-0.068975, -0.353553, 0.346760, -0.135710, -0.707138, 0.693930, -0.844001, -0.284314, -0.454784, -0.517668, 0.647807, 0.558898, 0.832307, 0.653935,\n-0.054193, -0.415735, 0.272448, -0.099235, -0.820324, 0.563224, -0.816853, -0.256076, -0.516891, -0.569698, 0.510908, 0.643752, 0.846733, 0.713716,\n-0.106304, -0.415735, 0.256640, -0.195712, -0.831354, 0.520142, -0.755147, -0.210632, -0.620795, -0.618809, 0.516163, 0.592157, 0.864986, 0.699035,\n-0.090120, 0.191342, 0.453064, -0.209889, 0.382537, 0.899784, -0.913308, -0.405225, -0.040765, -0.339629, 0.834451, -0.433985, 0.761800, 0.288261,\n-0.095671, 0.097545, 0.480970, -0.159677, 0.195006, 0.967717, -0.917587, -0.390841, -0.072647, -0.378232, 0.893400, -0.242440, 0.776121, 0.348088,\n-0.187665, 0.097545, 0.453064, -0.345401, 0.195006, 0.917971, -0.901796, -0.339696, -0.267153, -0.278623, 0.912758, -0.298735, 0.806381, 0.324118,\n-0.054193, -0.415735, 0.272448, -0.099235, -0.820324, 0.563224, -0.816853, -0.256076, -0.516891, -0.569698, 0.510908, 0.643752, 0.846733, 0.713716,\n-0.037329, -0.461940, 0.187665, -0.081206, -0.918409, 0.387209, -0.751926, -0.198553, -0.628637, -0.668925, 0.338220, 0.661926, 0.865508, 0.771545,\n-0.106304, -0.415735, 0.256640, -0.195712, -0.831354, 0.520142, -0.755147, -0.210632, -0.620795, -0.618809, 0.516163, 0.592157, 0.864986, 0.699035,\n-0.095671, 0.097545, 0.480970, -0.159677, 0.195006, 0.967717, -0.917587, -0.390841, -0.072647, -0.378232, 0.893400, -0.242440, 0.776121, 0.348088,\n-0.097545, 0.000000, 0.490393, -0.227166, 0.000000, 0.973856, -0.907657, -0.362397, -0.211724, -0.348241, 0.933879, -0.081232, 0.788114, 0.408932,\n-0.187665, 0.097545, 0.453064, -0.345401, 0.195006, 0.917971, -0.901796, -0.339696, -0.267153, -0.278623, 0.912758, -0.298735, 0.806381, 0.324118,\n-0.019030, 0.490393, 0.095671, -0.036183, 0.976741, 0.211349, -0.052590, -0.213056, 0.975624, -0.999332, -0.036442, -0.002671, 0.530504, 0.099377,\n-0.037329, 0.461940, 0.187665, -0.071725, 0.923888, 0.375881, -0.361520, -0.375307, 0.853492, -0.943286, 0.059637, -0.326580, 0.611040, 0.099926,\n-0.037329, 0.490393, 0.090120, -0.076720, 0.976740, 0.200230, -0.046042, -0.204078, 0.977871, -0.996782, -0.079813, 0.007405, 0.524796, 0.087364,\n-0.037329, -0.461940, 0.187665, -0.081206, -0.918409, 0.387209, -0.751926, -0.198553, -0.628637, -0.668925, 0.338220, 0.661926, 0.865508, 0.771545,\n-0.019030, -0.490393, 0.095671, -0.036183, -0.976740, 0.211349, -0.659716, -0.135510, -0.739196, -0.754210, 0.165440, 0.635450, 0.892313, 0.825579,\n-0.037329, -0.490393, 0.090120, -0.076720, -0.976741, 0.200230, -0.621151, -0.110267, -0.775894, -0.785454, 0.182906, 0.591276, 0.900481, 0.818239,\n-0.097545, 0.000000, 0.490393, -0.227166, 0.000000, 0.973856, -0.907657, -0.362397, -0.211724, -0.348241, 0.933879, -0.081232, 0.788114, 0.408932,\n-0.095671, -0.097545, 0.480970, -0.159677, -0.195006, 0.967717, -0.907051, -0.357871, -0.221782, -0.392773, 0.911910, 0.118951, 0.798937, 0.470280,\n-0.187665, -0.097545, 0.453064, -0.345401, -0.195006, 0.917971, -0.868976, -0.302909, -0.391314, -0.359737, 0.930964, 0.062409, 0.826278, 0.448964,\n-0.037329, 0.461940, 0.187665, -0.071725, 0.923888, 0.375881, -0.361520, -0.375307, 0.853492, -0.943286, 0.059637, -0.326580, 0.611040, 0.099926,\n-0.054193, 0.415735, 0.272448, -0.126245, 0.831354, 0.541214, -0.755722, -0.434023, 0.490416, -0.674138, 0.328341, -0.661612, 0.675659, 0.129678,\n-0.073223, 0.461940, 0.176777, -0.143677, 0.923888, 0.354666, -0.323732, -0.382545, 0.865365, -0.944356, -0.020846, -0.328263, 0.617332, 0.075210,\n-0.095671, -0.097545, 0.480970, -0.159677, -0.195006, 0.967717, -0.907051, -0.357871, -0.221782, -0.392773, 0.911910, 0.118951, 0.798937, 0.470280,\n-0.090120, -0.191342, 0.453064, -0.209889, -0.382537, 0.899784, -0.881719, -0.323636, -0.343267, -0.422672, 0.865347, 0.269301, 0.809410, 0.531778,\n-0.187665, -0.097545, 0.453064, -0.345401, -0.195006, 0.917971, -0.868976, -0.302909, -0.391314, -0.359737, 0.930964, 0.062409, 0.826278, 0.448964,\n0.000000, 0.097545, 0.490393, 0.032182, 0.195005, 0.980274, -0.898725, -0.423503, 0.113752, -0.441784, 0.882545, -0.161061, 0.747546, 0.374899,\n0.000000, 0.000000, 0.500000, -0.032814, 0.000000, 0.999461, -0.913871, -0.404896, -0.030004, -0.401232, 0.915882, -0.013173, 0.760371, 0.434664,\n-0.095671, 0.097545, 0.480970, -0.159677, 0.195006, 0.967717, -0.917587, -0.390841, -0.072647, -0.378232, 0.893400, -0.242440, 0.776121, 0.348088,\n0.000000, 0.490393, 0.097545, -0.000000, 0.980789, 0.195071, -0.010227, -0.195061, 0.980738, -0.998705, -0.009923, 0.049892, 0.532587, 0.112073,\n0.000000, 0.461940, 0.191342, 0.006661, 0.929163, 0.369610, -0.301158, -0.350594, 0.886785, -0.969313, 0.096831, -0.225956, 0.602177, 0.123791,\n-0.019030, 0.490393, 0.095671, -0.036183, 0.976741, 0.211349, -0.052590, -0.213056, 0.975624, -0.999332, -0.036442, -0.002671, 0.530504, 0.099377,\n0.000000, -0.461940, 0.191342, -0.000000, -0.935949, 0.352136, -0.754461, -0.231123, -0.614305, -0.645677, 0.268895, 0.714701, 0.851786, 0.785757,\n0.000000, -0.490393, 0.097545, -0.000000, -0.980789, 0.195071, -0.667310, -0.145285, -0.730472, -0.732975, 0.132698, 0.667187, 0.884825, 0.834401,\n-0.019030, -0.490393, 0.095671, -0.036183, -0.976740, 0.211349, -0.659716, -0.135510, -0.739196, -0.754210, 0.165440, 0.635450, 0.892313, 0.825579,\n0.000000, 0.000000, 0.500000, -0.032814, 0.000000, 0.999461, -0.913871, -0.404896, -0.030004, -0.401232, 0.915882, -0.013173, 0.760371, 0.434664,\n0.000000, -0.097545, 0.490393, 0.032182, -0.195005, 0.980274, -0.915229, -0.399881, -0.049501, -0.402667, 0.895136, 0.191288, 0.772312, 0.494867,\n-0.095671, -0.097545, 0.480970, -0.159677, -0.195006, 0.967717, -0.907051, -0.357871, -0.221782, -0.392773, 0.911910, 0.118951, 0.798937, 0.470280,\n0.000000, 0.461940, 0.191342, 0.006661, 0.929163, 0.369610, -0.301158, -0.350594, 0.886785, -0.969313, 0.096831, -0.225956, 0.602177, 0.123791,\n0.000000, 0.415735, 0.277785, -0.018236, 0.831353, 0.555445, -0.631677, -0.440203, 0.638127, -0.795024, 0.324824, -0.512275, 0.654747, 0.158232,\n-0.037329, 0.461940, 0.187665, -0.071725, 0.923888, 0.375881, -0.361520, -0.375307, 0.853492, -0.943286, 0.059637, -0.326580, 0.611040, 0.099926,\n0.000000, -0.097545, 0.490393, 0.032182, -0.195005, 0.980274, -0.915229, -0.399881, -0.049501, -0.402667, 0.895136, 0.191288, 0.772312, 0.494867,\n0.000000, -0.191342, 0.461940, -0.030317, -0.382538, 0.923442, -0.910709, -0.370177, -0.183246, -0.413963, 0.845716, 0.336749, 0.784187, 0.555103,\n-0.095671, -0.097545, 0.480970, -0.159677, -0.195006, 0.967717, -0.907051, -0.357871, -0.221782, -0.392773, 0.911910, 0.118951, 0.798937, 0.470280,\n0.000000, 0.415735, 0.277785, -0.018236, 0.831353, 0.555445, -0.631677, -0.440203, 0.638127, -0.795024, 0.324824, -0.512275, 0.654747, 0.158232,\n0.000000, 0.353553, 0.353553, 0.012557, 0.720869, 0.692958, -0.752990, -0.449160, 0.480896, -0.658624, 0.527404, -0.536712, 0.690070, 0.205446,\n-0.068975, 0.353553, 0.346760, -0.115141, 0.706949, 0.697829, -0.833800, -0.450621, 0.318933, -0.549654, 0.539813, -0.637560, 0.716770, 0.176135,\n0.000000, -0.191342, 0.461940, -0.030317, -0.382538, 0.923442, -0.910709, -0.370177, -0.183246, -0.413963, 0.845716, 0.336749, 0.784187, 0.555103,\n0.000000, -0.277785, 0.415735, 0.001785, -0.555608, 0.831443, -0.903472, -0.357289, -0.236817, -0.428605, 0.750778, 0.502624, 0.796797, 0.614975,\n-0.081106, -0.277785, 0.407747, -0.160456, -0.555607, 0.815815, -0.870186, -0.310475, -0.382597, -0.466542, 0.771059, 0.433366, 0.820258, 0.593116,\n0.000000, 0.353553, 0.353553, 0.012557, 0.720869, 0.692958, -0.752990, -0.449160, 0.480896, -0.658624, 0.527404, -0.536712, 0.690070, 0.205446,\n0.000000, 0.277785, 0.415735, 0.012460, 0.567207, 0.823481, -0.828915, -0.454732, 0.325758, -0.549922, 0.691702, -0.468117, 0.714533, 0.259103,\n-0.068975, 0.353553, 0.346760, -0.115141, 0.706949, 0.697829, -0.833800, -0.450621, 0.318933, -0.549654, 0.539813, -0.637560, 0.716770, 0.176135,\n0.000000, -0.277785, 0.415735, 0.001785, -0.555608, 0.831443, -0.903472, -0.357289, -0.236817, -0.428605, 0.750778, 0.502624, 0.796797, 0.614975,\n0.000000, -0.353553, 0.353553, 0.002276, -0.707137, 0.707073, -0.885216, -0.330339, -0.327520, -0.463661, 0.625730, 0.627280, 0.811127, 0.673987,\n-0.068975, -0.353553, 0.346760, -0.135710, -0.707138, 0.693930, -0.844001, -0.284314, -0.454784, -0.517668, 0.647807, 0.558898, 0.832307, 0.653935,\n0.000000, 0.277785, 0.415735, 0.012460, 0.567207, 0.823481, -0.828915, -0.454732, 0.325758, -0.549922, 0.691702, -0.468117, 0.714533, 0.259103,\n0.000000, 0.191342, 0.461940, -0.030317, 0.382538, 0.923442, -0.887540, -0.435230, 0.151157, -0.452760, 0.818396, -0.353887, 0.732796, 0.316099,\n-0.081106, 0.277785, 0.407747, -0.160456, 0.555607, 0.815815, -0.891798, -0.435835, 0.121423, -0.416879, 0.711041, -0.566244, 0.743218, 0.230344,\n0.000000, -0.353553, 0.353553, 0.002276, -0.707137, 0.707073, -0.885216, -0.330339, -0.327520, -0.463661, 0.625730, 0.627280, 0.811127, 0.673987,\n0.000000, -0.415735, 0.277785, 0.008963, -0.839191, 0.543763, -0.849186, -0.293527, -0.439004, -0.521149, 0.460174, 0.718779, 0.828642, 0.731372,\n-0.054193, -0.415735, 0.272448, -0.099235, -0.820324, 0.563224, -0.816853, -0.256076, -0.516891, -0.569698, 0.510908, 0.643752, 0.846733, 0.713716,\n0.000000, 0.191342, 0.461940, -0.030317, 0.382538, 0.923442, -0.887540, -0.435230, 0.151157, -0.452760, 0.818396, -0.353887, 0.732796, 0.316099,\n0.000000, 0.097545, 0.490393, 0.032182, 0.195005, 0.980274, -0.898725, -0.423503, 0.113752, -0.441784, 0.882545, -0.161061, 0.747546, 0.374899,\n-0.095671, 0.097545, 0.480970, -0.159677, 0.195006, 0.967717, -0.917587, -0.390841, -0.072647, -0.378232, 0.893400, -0.242440, 0.776121, 0.348088,\n0.000000, -0.415735, 0.277785, 0.008963, -0.839191, 0.543763, -0.849186, -0.293527, -0.439004, -0.521149, 0.460174, 0.718779, 0.828642, 0.731372,\n0.000000, -0.461940, 0.191342, -0.000000, -0.935949, 0.352136, -0.754461, -0.231123, -0.614305, -0.645677, 0.268895, 0.714701, 0.851786, 0.785757,\n-0.037329, -0.461940, 0.187665, -0.081206, -0.918409, 0.387209, -0.751926, -0.198553, -0.628637, -0.668925, 0.338220, 0.661926, 0.865508, 0.771545,\n0.081106, -0.277785, 0.407747, 0.163956, -0.555608, 0.815119, -0.912228, -0.399882, -0.089082, -0.374218, 0.729506, 0.572523, 0.773368, 0.639622,\n0.068975, -0.353553, 0.346760, 0.140172, -0.707137, 0.693044, -0.908721, -0.369819, -0.193545, -0.391505, 0.603327, 0.694780, 0.789921, 0.696864,\n0.000000, -0.353553, 0.353553, 0.002276, -0.707137, 0.707073, -0.885216, -0.330339, -0.327520, -0.463661, 0.625730, 0.627280, 0.811127, 0.673987,\n0.081106, 0.277785, 0.407747, 0.181394, 0.539042, 0.822514, -0.774078, -0.437604, 0.457500, -0.612223, 0.716441, -0.334508, 0.688154, 0.288422,\n0.090120, 0.191342, 0.453064, 0.150420, 0.382537, 0.911614, -0.832725, -0.447986, 0.325389, -0.527832, 0.810755, -0.253120, 0.705594, 0.345167,\n0.000000, 0.277785, 0.415735, 0.012460, 0.567207, 0.823481, -0.828915, -0.454732, 0.325758, -0.549922, 0.691702, -0.468117, 0.714533, 0.259103,\n0.068975, -0.353553, 0.346760, 0.140172, -0.707137, 0.693044, -0.908721, -0.369819, -0.193545, -0.391505, 0.603327, 0.694780, 0.789921, 0.696864,\n0.054193, -0.415735, 0.272448, 0.123852, -0.820324, 0.558327, -0.893831, -0.336591, -0.296263, -0.435664, 0.460577, 0.773347, 0.810650, 0.751723,\n0.000000, -0.415735, 0.277785, 0.008963, -0.839191, 0.543763, -0.849186, -0.293527, -0.439004, -0.521149, 0.460174, 0.718779, 0.828642, 0.731372,\n0.090120, 0.191342, 0.453064, 0.150420, 0.382537, 0.911614, -0.832725, -0.447986, 0.325389, -0.527832, 0.810755, -0.253120, 0.705594, 0.345167,\n0.095671, 0.097545, 0.480970, 0.222807, 0.195006, 0.955160, -0.849816, -0.441233, 0.288316, -0.484252, 0.872498, -0.065170, 0.720269, 0.403448,\n0.000000, 0.097545, 0.490393, 0.032182, 0.195005, 0.980274, -0.898725, -0.423503, 0.113752, -0.441784, 0.882545, -0.161061, 0.747546, 0.374899,\n0.054193, -0.415735, 0.272448, 0.123852, -0.820324, 0.558327, -0.893831, -0.336591, -0.296263, -0.435664, 0.460577, 0.773347, 0.810650, 0.751723,\n0.037329, -0.461940, 0.187665, 0.080526, -0.910837, 0.404836, -0.849838, -0.274976, -0.449625, -0.544394, 0.300037, 0.783335, 0.838536, 0.802228,\n0.000000, -0.415735, 0.277785, 0.008963, -0.839191, 0.543763, -0.849186, -0.293527, -0.439004, -0.521149, 0.460174, 0.718779, 0.828642, 0.731372,\n0.095671, 0.097545, 0.480970, 0.222807, 0.195006, 0.955160, -0.849816, -0.441233, 0.288316, -0.484252, 0.872498, -0.065170, 0.720269, 0.403448,\n0.097545, 0.000000, 0.490393, 0.162803, -0.000000, 0.986659, -0.889654, -0.432395, 0.146797, -0.424489, 0.902720, 0.070042, 0.733486, 0.462524,\n0.000000, 0.097545, 0.490393, 0.032182, 0.195005, 0.980274, -0.898725, -0.423503, 0.113752, -0.441784, 0.882545, -0.161061, 0.747546, 0.374899,\n0.019030, 0.490393, 0.095671, 0.044314, 0.973859, 0.222787, -0.038854, -0.221157, 0.974464, -0.994442, 0.064320, -0.083357, 0.531827, 0.124876,\n0.037329, 0.461940, 0.187665, 0.087331, 0.916136, 0.391239, -0.294404, -0.351461, 0.888708, -0.937031, 0.208860, -0.279912, 0.591752, 0.146494,\n0.000000, 0.461940, 0.191342, 0.006661, 0.929163, 0.369610, -0.301158, -0.350594, 0.886785, -0.969313, 0.096831, -0.225956, 0.602177, 0.123791,\n0.037329, -0.461940, 0.187665, 0.080526, -0.910837, 0.404836, -0.849838, -0.274976, -0.449625, -0.544394, 0.300037, 0.783335, 0.838536, 0.802228,\n0.019030, -0.490393, 0.095671, 0.044314, -0.973859, 0.222787, -0.736482, -0.182524, -0.651368, -0.682533, 0.133332, 0.718590, 0.878221, 0.844539,\n0.000000, -0.461940, 0.191342, -0.000000, -0.935949, 0.352136, -0.754461, -0.231123, -0.614305, -0.645677, 0.268895, 0.714701, 0.851786, 0.785757,\n0.097545, 0.000000, 0.490393, 0.162803, -0.000000, 0.986659, -0.889654, -0.432395, 0.146797, -0.424489, 0.902720, 0.070042, 0.733486, 0.462524,\n0.095671, -0.097545, 0.480970, 0.222807, -0.195006, 0.955160, -0.895241, -0.428756, 0.121295, -0.385003, 0.882541, 0.269989, 0.746184, 0.521879,\n0.000000, -0.097545, 0.490393, 0.032182, -0.195005, 0.980274, -0.915229, -0.399881, -0.049501, -0.402667, 0.895136, 0.191288, 0.772312, 0.494867,\n0.037329, 0.461940, 0.187665, 0.087331, 0.916136, 0.391239, -0.294404, -0.351461, 0.888708, -0.937031, 0.208860, -0.279912, 0.591752, 0.146494,\n0.054193, 0.415735, 0.272448, 0.104109, 0.823575, 0.557571, -0.551851, -0.418565, 0.721293, -0.839109, 0.373688, -0.395288, 0.635422, 0.185632,\n0.000000, 0.461940, 0.191342, 0.006661, 0.929163, 0.369610, -0.301158, -0.350594, 0.886785, -0.969313, 0.096831, -0.225956, 0.602177, 0.123791,\n0.095671, -0.097545, 0.480970, 0.222807, -0.195006, 0.955160, -0.895241, -0.428756, 0.121295, -0.385003, 0.882541, 0.269989, 0.746184, 0.521879,\n0.090120, -0.191342, 0.453064, 0.150420, -0.382537, 0.911613, -0.913342, -0.406704, -0.019959, -0.381307, 0.828310, 0.410498, 0.759182, 0.581072,\n0.000000, -0.097545, 0.490393, 0.032182, -0.195005, 0.980274, -0.915229, -0.399881, -0.049501, -0.402667, 0.895136, 0.191288, 0.772312, 0.494867,\n0.054193, 0.415735, 0.272448, 0.104109, 0.823575, 0.557571, -0.551851, -0.418565, 0.721293, -0.839109, 0.373688, -0.395288, 0.635422, 0.185632,\n0.068975, 0.353553, 0.346760, 0.142394, 0.683554, 0.715875, -0.709156, -0.434105, 0.555564, -0.707975, 0.575780, -0.408961, 0.665895, 0.234463,\n0.000000, 0.353553, 0.353553, 0.012557, 0.720869, 0.692958, -0.752990, -0.449160, 0.480896, -0.658624, 0.527404, -0.536712, 0.690070, 0.205446,\n0.090120, -0.191342, 0.453064, 0.150420, -0.382537, 0.911613, -0.913342, -0.406704, -0.019959, -0.381307, 0.828310, 0.410498, 0.759182, 0.581072,\n0.081106, -0.277785, 0.407747, 0.163956, -0.555608, 0.815119, -0.912228, -0.399882, -0.089082, -0.374218, 0.729506, 0.572523, 0.773368, 0.639622,\n0.000000, -0.277785, 0.415735, 0.001785, -0.555608, 0.831443, -0.903472, -0.357289, -0.236817, -0.428605, 0.750778, 0.502624, 0.796797, 0.614975,\n0.068975, 0.353553, 0.346760, 0.142394, 0.683554, 0.715875, -0.709156, -0.434105, 0.555564, -0.707975, 0.575780, -0.408961, 0.665895, 0.234463,\n0.081106, 0.277785, 0.407747, 0.181394, 0.539042, 0.822514, -0.774078, -0.437604, 0.457500, -0.612223, 0.716441, -0.334508, 0.688154, 0.288422,\n0.000000, 0.277785, 0.415735, 0.012460, 0.567207, 0.823481, -0.828915, -0.454732, 0.325758, -0.549922, 0.691702, -0.468117, 0.714533, 0.259103,\n0.187665, -0.097545, 0.453064, 0.404870, -0.195006, 0.893338, -0.848218, -0.444960, 0.287291, -0.341842, 0.873870, 0.345682, 0.720246, 0.550459,\n0.176777, -0.191342, 0.426777, 0.325378, -0.382538, 0.864751, -0.890388, -0.431827, 0.143998, -0.322113, 0.814978, 0.481720, 0.734107, 0.608949,\n0.095671, -0.097545, 0.480970, 0.222807, -0.195006, 0.955160, -0.895241, -0.428756, 0.121295, -0.385003, 0.882541, 0.269989, 0.746184, 0.521879,\n0.106304, 0.415735, 0.256640, 0.197657, 0.842234, 0.501571, -0.449178, -0.376972, 0.810019, -0.868760, 0.387518, -0.308360, 0.616925, 0.211494,\n0.135299, 0.353553, 0.326641, 0.261563, 0.729955, 0.631468, -0.555272, -0.421330, 0.717045, -0.780375, 0.544938, -0.306688, 0.643255, 0.262466,\n0.054193, 0.415735, 0.272448, 0.104109, 0.823575, 0.557571, -0.551851, -0.418565, 0.721293, -0.839109, 0.373688, -0.395288, 0.635422, 0.185632,\n0.176777, -0.191342, 0.426777, 0.325378, -0.382538, 0.864751, -0.890388, -0.431827, 0.143998, -0.322113, 0.814978, 0.481720, 0.734107, 0.608949,\n0.159095, -0.277785, 0.384089, 0.326646, -0.567206, 0.756029, -0.902076, -0.425816, 0.070281, -0.275374, 0.708089, 0.650215, 0.749700, 0.666456,\n0.081106, -0.277785, 0.407747, 0.163956, -0.555608, 0.815119, -0.912228, -0.399882, -0.089082, -0.374218, 0.729506, 0.572523, 0.773368, 0.639622,\n0.135299, 0.353553, 0.326641, 0.261563, 0.729955, 0.631468, -0.555272, -0.421330, 0.717045, -0.780375, 0.544938, -0.306688, 0.643255, 0.262466,\n0.159095, 0.277785, 0.384089, 0.326646, 0.567206, 0.756029, -0.658364, -0.437374, 0.612586, -0.672901, 0.701278, -0.235399, 0.663284, 0.317370,\n0.068975, 0.353553, 0.346760, 0.142394, 0.683554, 0.715875, -0.709156, -0.434105, 0.555564, -0.707975, 0.575780, -0.408961, 0.665895, 0.234463,\n0.159095, -0.277785, 0.384089, 0.326646, -0.567206, 0.756029, -0.902076, -0.425816, 0.070281, -0.275374, 0.708089, 0.650215, 0.749700, 0.666456,\n0.135299, -0.353553, 0.326641, 0.253581, -0.720868, 0.645016, -0.913094, -0.398493, -0.086381, -0.310930, 0.570681, 0.760030, 0.768457, 0.722120,\n0.068975, -0.353553, 0.346760, 0.140172, -0.707137, 0.693044, -0.908721, -0.369819, -0.193545, -0.391505, 0.603327, 0.694780, 0.789921, 0.696864,\n0.159095, 0.277785, 0.384089, 0.326646, 0.567206, 0.756029, -0.658364, -0.437374, 0.612586, -0.672901, 0.701278, -0.235399, 0.663284, 0.317370,\n0.176777, 0.191342, 0.426777, 0.325378, 0.382538, 0.864751, -0.754569, -0.446108, 0.481263, -0.566310, 0.811200, -0.145764, 0.679609, 0.374456,\n0.081106, 0.277785, 0.407747, 0.181394, 0.539042, 0.822514, -0.774078, -0.437604, 0.457500, -0.612223, 0.716441, -0.334508, 0.688154, 0.288422,\n0.135299, -0.353553, 0.326641, 0.253581, -0.720868, 0.645016, -0.913094, -0.398493, -0.086381, -0.310930, 0.570681, 0.760030, 0.768457, 0.722120,\n0.106304, -0.415735, 0.256640, 0.216371, -0.839191, 0.498940, -0.904748, -0.364402, -0.220551, -0.367123, 0.403604, 0.838048, 0.792639, 0.774468,\n0.054193, -0.415735, 0.272448, 0.123852, -0.820324, 0.558327, -0.893831, -0.336591, -0.296263, -0.435664, 0.460577, 0.773347, 0.810650, 0.751723,\n0.176777, 0.191342, 0.426777, 0.325378, 0.382538, 0.864751, -0.754569, -0.446108, 0.481263, -0.566310, 0.811200, -0.145764, 0.679609, 0.374456,\n0.187665, 0.097545, 0.453064, 0.404870, 0.195006, 0.893338, -0.775954, -0.443563, 0.448495, -0.487796, 0.872420, 0.030634, 0.693851, 0.432732,\n0.095671, 0.097545, 0.480970, 0.222807, 0.195006, 0.955160, -0.849816, -0.441233, 0.288316, -0.484252, 0.872498, -0.065170, 0.720269, 0.403448,\n0.106304, -0.415735, 0.256640, 0.216371, -0.839191, 0.498940, -0.904748, -0.364402, -0.220551, -0.367123, 0.403604, 0.838048, 0.792639, 0.774468,\n0.073224, -0.461940, 0.176777, 0.134132, -0.931233, 0.338842, -0.844094, -0.286498, -0.453237, -0.512969, 0.227307, 0.827765, 0.825855, 0.820746,\n0.037329, -0.461940, 0.187665, 0.080526, -0.910837, 0.404836, -0.849838, -0.274976, -0.449625, -0.544394, 0.300037, 0.783335, 0.838536, 0.802228,\n0.187665, 0.097545, 0.453064, 0.404870, 0.195006, 0.893338, -0.775954, -0.443563, 0.448495, -0.487796, 0.872420, 0.030634, 0.693851, 0.432732,\n0.191342, 0.000000, 0.461940, 0.352163, 0.000000, 0.935939, -0.837896, -0.445571, 0.315273, -0.416119, 0.895729, 0.156572, 0.707107, 0.491563,\n0.095671, 0.097545, 0.480970, 0.222807, 0.195006, 0.955160, -0.849816, -0.441233, 0.288316, -0.484252, 0.872498, -0.065170, 0.720269, 0.403448,\n0.037329, 0.490393, 0.090120, 0.087334, 0.976741, 0.195832, 0.029590, -0.199040, 0.979544, -0.996041, 0.082349, 0.033470, 0.528865, 0.137340,\n0.073224, 0.461940, 0.176777, 0.149190, 0.923888, 0.352383, -0.209827, -0.318676, 0.924348, -0.971200, 0.203867, -0.123323, 0.580255, 0.167767,\n0.019030, 0.490393, 0.095671, 0.044314, 0.973859, 0.222787, -0.038854, -0.221157, 0.974464, -0.994442, 0.064320, -0.083357, 0.531827, 0.124876,\n0.073224, -0.461940, 0.176777, 0.134132, -0.931233, 0.338842, -0.844094, -0.286498, -0.453237, -0.512969, 0.227307, 0.827765, 0.825855, 0.820746,\n0.037329, -0.490393, 0.090120, 0.087334, -0.976741, 0.195832, -0.744511, -0.194610, -0.638616, -0.657112, 0.091266, 0.748248, 0.872759, 0.855785,\n0.019030, -0.490393, 0.095671, 0.044314, -0.973859, 0.222787, -0.736482, -0.182524, -0.651368, -0.682533, 0.133332, 0.718590, 0.878221, 0.844539,\n0.191342, 0.000000, 0.461940, 0.352163, 0.000000, 0.935939, -0.837896, -0.445571, 0.315273, -0.416119, 0.895729, 0.156572, 0.707107, 0.491563,\n0.187665, -0.097545, 0.453064, 0.404870, -0.195006, 0.893338, -0.848218, -0.444960, 0.287291, -0.341842, 0.873870, 0.345682, 0.720246, 0.550459,\n0.095671, -0.097545, 0.480970, 0.222807, -0.195006, 0.955160, -0.895241, -0.428756, 0.121295, -0.385003, 0.882541, 0.269989, 0.746184, 0.521879,\n0.073224, 0.461940, 0.176777, 0.149190, 0.923888, 0.352383, -0.209827, -0.318676, 0.924348, -0.971200, 0.203867, -0.123323, 0.580255, 0.167767,\n0.106304, 0.415735, 0.256640, 0.197657, 0.842234, 0.501571, -0.449178, -0.376972, 0.810019, -0.868760, 0.387518, -0.308360, 0.616925, 0.211494,\n0.037329, 0.461940, 0.187665, 0.087331, 0.916136, 0.391239, -0.294404, -0.351461, 0.888708, -0.937031, 0.208860, -0.279912, 0.591752, 0.146494,\n0.154329, -0.415735, 0.230970, 0.323751, -0.831354, 0.451704, -0.911964, -0.401356, -0.085055, -0.276201, 0.373577, 0.885524, 0.774406, 0.799286,\n0.106304, -0.461940, 0.159095, 0.202132, -0.923819, 0.325118, -0.879274, -0.317380, -0.355171, -0.438512, 0.211461, 0.873494, 0.813873, 0.841082,\n0.106304, -0.415735, 0.256640, 0.216371, -0.839191, 0.498940, -0.904748, -0.364402, -0.220551, -0.367123, 0.403604, 0.838048, 0.792639, 0.774468,\n0.272448, 0.097545, 0.407746, 0.571370, 0.195006, 0.797188, -0.679619, -0.432092, 0.592802, -0.461244, 0.879738, 0.115390, 0.667855, 0.461824,\n0.277785, 0.000000, 0.415735, 0.527990, 0.000000, 0.849250, -0.760591, -0.444855, 0.472869, -0.377970, 0.895499, 0.234989, 0.680843, 0.520863,\n0.187665, 0.097545, 0.453064, 0.404870, 0.195006, 0.893338, -0.775954, -0.443563, 0.448495, -0.487796, 0.872420, 0.030634, 0.693851, 0.432732,\n0.054193, 0.490393, 0.081106, 0.123861, 0.976741, 0.175033, 0.067422, -0.184267, 0.980561, -0.990960, 0.112591, 0.072953, 0.524202, 0.149115,\n0.106304, 0.461940, 0.159095, 0.215072, 0.923888, 0.316505, -0.142089, -0.291038, 0.946101, -0.968208, 0.244107, -0.054637, 0.567957, 0.187359,\n0.037329, 0.490393, 0.090120, 0.087334, 0.976741, 0.195832, 0.029590, -0.199040, 0.979544, -0.996041, 0.082349, 0.033470, 0.528865, 0.137340,\n0.106304, -0.461940, 0.159095, 0.202132, -0.923819, 0.325118, -0.879274, -0.317380, -0.355171, -0.438512, 0.211461, 0.873494, 0.813873, 0.841082,\n0.054193, -0.490393, 0.081106, 0.123861, -0.976741, 0.175033, -0.764866, -0.206349, -0.610246, -0.629644, 0.058971, 0.774642, 0.868766, 0.867891,\n0.037329, -0.490393, 0.090120, 0.087334, -0.976741, 0.195832, -0.744511, -0.194610, -0.638616, -0.657112, 0.091266, 0.748248, 0.872759, 0.855785,\n0.277785, 0.000000, 0.415735, 0.527990, 0.000000, 0.849250, -0.760591, -0.444855, 0.472869, -0.377970, 0.895499, 0.234989, 0.680843, 0.520863,\n0.272448, -0.097545, 0.407746, 0.571370, -0.195006, 0.797188, -0.775311, -0.446789, 0.446399, -0.265374, 0.875277, 0.404310, 0.694122, 0.579742,\n0.187665, -0.097545, 0.453064, 0.404870, -0.195006, 0.893338, -0.848218, -0.444960, 0.287291, -0.341842, 0.873870, 0.345682, 0.720246, 0.550459,\n0.106304, 0.461940, 0.159095, 0.215072, 0.923888, 0.316505, -0.142089, -0.291038, 0.946101, -0.968208, 0.244107, -0.054637, 0.567957, 0.187359,\n0.154329, 0.415735, 0.230970, 0.309558, 0.823575, 0.475288, -0.362806, -0.359728, 0.859632, -0.882398, 0.435059, -0.179155, 0.598817, 0.235470,\n0.073224, 0.461940, 0.176777, 0.149190, 0.923888, 0.352383, -0.209827, -0.318676, 0.924348, -0.971200, 0.203867, -0.123323, 0.580255, 0.167767,\n0.272448, -0.097545, 0.407746, 0.571370, -0.195006, 0.797188, -0.775311, -0.446789, 0.446399, -0.265374, 0.875277, 0.404310, 0.694122, 0.579742,\n0.256640, -0.191342, 0.384089, 0.487830, -0.382537, 0.784657, -0.841552, -0.444954, 0.306278, -0.236581, 0.807292, 0.540656, 0.708586, 0.637959,\n0.187665, -0.097545, 0.453064, 0.404870, -0.195006, 0.893338, -0.848218, -0.444960, 0.287291, -0.341842, 0.873870, 0.345682, 0.720246, 0.550459,\n0.154329, 0.415735, 0.230970, 0.309558, 0.823575, 0.475288, -0.362806, -0.359728, 0.859632, -0.882398, 0.435059, -0.179155, 0.598817, 0.235470,\n0.196424, 0.353553, 0.293969, 0.405511, 0.683554, 0.606889, -0.503618, -0.387003, 0.772398, -0.774279, 0.609746, -0.169414, 0.621494, 0.288874,\n0.135299, 0.353553, 0.326641, 0.261563, 0.729955, 0.631468, -0.555272, -0.421330, 0.717045, -0.780375, 0.544938, -0.306688, 0.643255, 0.262466,\n0.256640, -0.191342, 0.384089, 0.487830, -0.382537, 0.784657, -0.841552, -0.444954, 0.306278, -0.236581, 0.807292, 0.540656, 0.708586, 0.637959,\n0.230970, -0.277785, 0.345671, 0.482349, -0.539041, 0.690488, -0.859848, -0.441928, 0.255659, -0.169141, 0.716102, 0.677192, 0.725412, 0.694835,\n0.159095, -0.277785, 0.384089, 0.326646, -0.567206, 0.756029, -0.902076, -0.425816, 0.070281, -0.275374, 0.708089, 0.650215, 0.749700, 0.666456,\n0.196424, 0.353553, 0.293969, 0.405511, 0.683554, 0.606889, -0.503618, -0.387003, 0.772398, -0.774279, 0.609746, -0.169414, 0.621494, 0.288874,\n0.230970, 0.277785, 0.345671, 0.482349, 0.539041, 0.690488, -0.570198, -0.405184, 0.714633, -0.674162, 0.731742, -0.100302, 0.639314, 0.345175,\n0.159095, 0.277785, 0.384089, 0.326646, 0.567206, 0.756029, -0.658364, -0.437374, 0.612586, -0.672901, 0.701278, -0.235399, 0.663284, 0.317370,\n0.230970, -0.277785, 0.345671, 0.482349, -0.539041, 0.690488, -0.859848, -0.441928, 0.255659, -0.169141, 0.716102, 0.677192, 0.725412, 0.694835,\n0.196424, -0.353553, 0.293969, 0.390842, -0.697093, 0.601086, -0.901249, -0.422534, 0.095994, -0.200693, 0.572779, 0.794762, 0.746387, 0.749272,\n0.159095, -0.277785, 0.384089, 0.326646, -0.567206, 0.756029, -0.902076, -0.425816, 0.070281, -0.275374, 0.708089, 0.650215, 0.749700, 0.666456,\n0.230970, 0.277785, 0.345671, 0.482349, 0.539041, 0.690488, -0.570198, -0.405184, 0.714633, -0.674162, 0.731742, -0.100302, 0.639314, 0.345175,\n0.256640, 0.191342, 0.384089, 0.487830, 0.382537, 0.784657, -0.656742, -0.431327, 0.618585, -0.572659, 0.818661, -0.043086, 0.654329, 0.403082,\n0.159095, 0.277785, 0.384089, 0.326646, 0.567206, 0.756029, -0.658364, -0.437374, 0.612586, -0.672901, 0.701278, -0.235399, 0.663284, 0.317370,\n0.196424, -0.353553, 0.293969, 0.390842, -0.697093, 0.601086, -0.901249, -0.422534, 0.095994, -0.200693, 0.572779, 0.794762, 0.746387, 0.749272,\n0.154329, -0.415735, 0.230970, 0.323751, -0.831354, 0.451704, -0.911964, -0.401356, -0.085055, -0.276201, 0.373577, 0.885524, 0.774406, 0.799286,\n0.106304, -0.415735, 0.256640, 0.216371, -0.839191, 0.498940, -0.904748, -0.364402, -0.220551, -0.367123, 0.403604, 0.838048, 0.792639, 0.774468,\n0.256640, 0.191342, 0.384089, 0.487830, 0.382537, 0.784657, -0.656742, -0.431327, 0.618585, -0.572659, 0.818661, -0.043086, 0.654329, 0.403082,\n0.272448, 0.097545, 0.407746, 0.571370, 0.195006, 0.797188, -0.679619, -0.432092, 0.592802, -0.461244, 0.879738, 0.115390, 0.667855, 0.461824,\n0.187665, 0.097545, 0.453064, 0.404870, 0.195006, 0.893338, -0.775954, -0.443563, 0.448495, -0.487796, 0.872420, 0.030634, 0.693851, 0.432732,\n0.293969, -0.277785, 0.293969, 0.589181, -0.555607, 0.586656, -0.805752, -0.458145, 0.375323, -0.058674, 0.694723, 0.716880, 0.699985, 0.724042,\n0.250000, -0.353553, 0.250000, 0.501585, -0.707137, 0.498368, -0.863572, -0.443584, 0.239742, -0.050333, 0.551246, 0.832823, 0.723190, 0.777783,\n0.196424, -0.353553, 0.293969, 0.390842, -0.697093, 0.601086, -0.901249, -0.422534, 0.095994, -0.200693, 0.572779, 0.794762, 0.746387, 0.749272,\n0.293969, 0.277785, 0.293969, 0.574714, 0.582587, 0.574714, -0.439014, -0.373186, 0.817312, -0.688256, 0.724028, -0.045690, 0.615788, 0.371156,\n0.326641, 0.191342, 0.326641, 0.639780, 0.395636, 0.658903, -0.525058, -0.401068, 0.750639, -0.559581, 0.827471, 0.046488, 0.629325, 0.430241,\n0.230970, 0.277785, 0.345671, 0.482349, 0.539041, 0.690488, -0.570198, -0.405184, 0.714633, -0.674162, 0.731742, -0.100302, 0.639314, 0.345175,\n0.250000, -0.353553, 0.250000, 0.501585, -0.707137, 0.498368, -0.863572, -0.443584, 0.239742, -0.050333, 0.551246, 0.832823, 0.723190, 0.777783,\n0.196424, -0.415735, 0.196424, 0.405652, -0.831354, 0.379865, -0.906402, -0.419454, 0.049937, -0.135568, 0.356274, 0.924495, 0.755624, 0.825846,\n0.154329, -0.415735, 0.230970, 0.323751, -0.831354, 0.451704, -0.911964, -0.401356, -0.085055, -0.276201, 0.373577, 0.885524, 0.774406, 0.799286,\n0.326641, 0.191342, 0.326641, 0.639780, 0.395636, 0.658903, -0.525058, -0.401068, 0.750639, -0.559581, 0.827471, 0.046488, 0.629325, 0.430241,\n0.346760, 0.097545, 0.346760, 0.715915, 0.195005, 0.670402, -0.562504, -0.407702, 0.719284, -0.414234, 0.891580, 0.183015, 0.641879, 0.489842,\n0.272448, 0.097545, 0.407746, 0.571370, 0.195006, 0.797188, -0.679619, -0.432092, 0.592802, -0.461244, 0.879738, 0.115390, 0.667855, 0.461824,\n0.196424, -0.415735, 0.196424, 0.405652, -0.831354, 0.379865, -0.906402, -0.419454, 0.049937, -0.135568, 0.356274, 0.924495, 0.755624, 0.825846,\n0.135299, -0.461940, 0.135299, 0.256643, -0.929163, 0.266065, -0.891552, -0.333886, -0.306030, -0.403189, 0.147263, 0.903190, 0.802789, 0.862995,\n0.154329, -0.415735, 0.230970, 0.323751, -0.831354, 0.451704, -0.911964, -0.401356, -0.085055, -0.276201, 0.373577, 0.885524, 0.774406, 0.799286,\n0.346760, 0.097545, 0.346760, 0.715915, 0.195005, 0.670402, -0.562504, -0.407702, 0.719284, -0.414234, 0.891580, 0.183015, 0.641879, 0.489842,\n0.353554, 0.000000, 0.353553, 0.683524, -0.000000, 0.729928, -0.658903, -0.430280, 0.617014, -0.315155, 0.901988, 0.295120, 0.654296, 0.549514,\n0.272448, 0.097545, 0.407746, 0.571370, 0.195006, 0.797188, -0.679619, -0.432092, 0.592802, -0.461244, 0.879738, 0.115390, 0.667855, 0.461824,\n0.068975, 0.490393, 0.068975, 0.155628, 0.976741, 0.147506, 0.108362, -0.165305, 0.980271, -0.982856, 0.138166, 0.122082, 0.518220, 0.159918,\n0.135299, 0.461940, 0.135299, 0.272685, 0.923888, 0.268466, -0.068741, -0.259619, 0.963261, -0.960121, 0.279218, 0.014321, 0.555020, 0.205035,\n0.054193, 0.490393, 0.081106, 0.123861, 0.976741, 0.175033, 0.067422, -0.184267, 0.980561, -0.990960, 0.112591, 0.072953, 0.524202, 0.149115,\n0.135299, -0.461940, 0.135299, 0.256643, -0.929163, 0.266065, -0.891552, -0.333886, -0.306030, -0.403189, 0.147263, 0.903190, 0.802789, 0.862995,\n0.068975, -0.490393, 0.068975, 0.137937, -0.980789, 0.137937, -0.762550, -0.194038, -0.617143, -0.658063, 0.013330, 0.752845, 0.866671, 0.880547,\n0.054193, -0.490393, 0.081106, 0.123861, -0.976741, 0.175033, -0.764866, -0.206349, -0.610246, -0.629644, 0.058971, 0.774642, 0.868766, 0.867891,\n0.353554, 0.000000, 0.353553, 0.683524, -0.000000, 0.729928, -0.658903, -0.430280, 0.617014, -0.315155, 0.901988, 0.295120, 0.654296, 0.549514,\n0.346760, -0.097545, 0.346760, 0.715915, -0.195005, 0.670402, -0.675718, -0.435157, 0.595015, -0.170762, 0.882136, 0.438949, 0.667393, 0.608830,\n0.272448, -0.097545, 0.407746, 0.571370, -0.195006, 0.797188, -0.775311, -0.446789, 0.446399, -0.265374, 0.875277, 0.404310, 0.694122, 0.579742,\n0.135299, 0.461940, 0.135299, 0.272685, 0.923888, 0.268466, -0.068741, -0.259619, 0.963261, -0.960121, 0.279218, 0.014321, 0.555020, 0.205035,\n0.196424, 0.415735, 0.196424, 0.394718, 0.831489, 0.390926, -0.237243, -0.318812, 0.917646, -0.887510, 0.455137, -0.071945, 0.580834, 0.257236,\n0.106304, 0.461940, 0.159095, 0.215072, 0.923888, 0.316505, -0.142089, -0.291038, 0.946101, -0.968208, 0.244107, -0.054637, 0.567957, 0.187359,\n0.346760, -0.097545, 0.346760, 0.715915, -0.195005, 0.670402, -0.675718, -0.435157, 0.595015, -0.170762, 0.882136, 0.438949, 0.667393, 0.608830,\n0.326641, -0.191342, 0.326641, 0.631535, -0.382537, 0.674410, -0.765616, -0.445052, 0.464501, -0.127864, 0.806523, 0.577209, 0.682151, 0.667268,\n0.272448, -0.097545, 0.407746, 0.571370, -0.195006, 0.797188, -0.775311, -0.446789, 0.446399, -0.265374, 0.875277, 0.404310, 0.694122, 0.579742,\n0.196424, 0.415735, 0.196424, 0.394718, 0.831489, 0.390926, -0.237243, -0.318812, 0.917646, -0.887510, 0.455137, -0.071945, 0.580834, 0.257236,\n0.250000, 0.353553, 0.250000, 0.481115, 0.720868, 0.498876, -0.357926, -0.357950, 0.862415, -0.796638, 0.597035, -0.094430, 0.600175, 0.313176,\n0.154329, 0.415735, 0.230970, 0.309558, 0.823575, 0.475288, -0.362806, -0.359728, 0.859632, -0.882398, 0.435059, -0.179155, 0.598817, 0.235470,\n0.326641, -0.191342, 0.326641, 0.631535, -0.382537, 0.674410, -0.765616, -0.445052, 0.464501, -0.127864, 0.806523, 0.577209, 0.682151, 0.667268,\n0.293969, -0.277785, 0.293969, 0.589181, -0.555607, 0.586656, -0.805752, -0.458145, 0.375323, -0.058674, 0.694723, 0.716880, 0.699985, 0.724042,\n0.230970, -0.277785, 0.345671, 0.482349, -0.539041, 0.690488, -0.859848, -0.441928, 0.255659, -0.169141, 0.716102, 0.677192, 0.725412, 0.694835,\n0.250000, 0.353553, 0.250000, 0.481115, 0.720868, 0.498876, -0.357926, -0.357950, 0.862415, -0.796638, 0.597035, -0.094430, 0.600175, 0.313176,\n0.293969, 0.277785, 0.293969, 0.574714, 0.582587, 0.574714, -0.439014, -0.373186, 0.817312, -0.688256, 0.724028, -0.045690, 0.615788, 0.371156,\n0.196424, 0.353553, 0.293969, 0.405511, 0.683554, 0.606889, -0.503618, -0.387003, 0.772398, -0.774279, 0.609746, -0.169414, 0.621494, 0.288874,\n0.407747, -0.097545, 0.272447, 0.832947, -0.195006, 0.517853, -0.548914, -0.409474, 0.728714, -0.068744, 0.892130, 0.446518, 0.639617, 0.636769,\n0.384089, -0.191342, 0.256640, 0.750971, -0.382537, 0.538245, -0.660325, -0.430450, 0.615373, -0.002364, 0.813546, 0.581496, 0.654257, 0.695946,\n0.346760, -0.097545, 0.346760, 0.715915, -0.195005, 0.670402, -0.675718, -0.435157, 0.595015, -0.170762, 0.882136, 0.438949, 0.667393, 0.608830,\n0.230970, 0.415735, 0.154329, 0.463399, 0.831489, 0.306409, -0.145438, -0.269724, 0.951891, -0.874467, 0.485046, 0.006256, 0.562811, 0.276478,\n0.293969, 0.353553, 0.196424, 0.591116, 0.697093, 0.405763, -0.254938, -0.315802, 0.913934, -0.765365, 0.643528, 0.009416, 0.579002, 0.334905,\n0.196424, 0.415735, 0.196424, 0.394718, 0.831489, 0.390926, -0.237243, -0.318812, 0.917646, -0.887510, 0.455137, -0.071945, 0.580834, 0.257236,\n0.384089, -0.191342, 0.256640, 0.750971, -0.382537, 0.538245, -0.660325, -0.430450, 0.615373, -0.002364, 0.813546, 0.581496, 0.654257, 0.695946,\n0.345671, -0.277785, 0.230970, 0.692311, -0.555607, 0.460442, -0.715184, -0.443416, 0.540273, 0.098946, 0.705151, 0.702119, 0.672735, 0.753249,\n0.293969, -0.277785, 0.293969, 0.589181, -0.555607, 0.586656, -0.805752, -0.458145, 0.375323, -0.058674, 0.694723, 0.716880, 0.699985, 0.724042,\n0.293969, 0.353553, 0.196424, 0.591116, 0.697093, 0.405763, -0.254938, -0.315802, 0.913934, -0.765365, 0.643528, 0.009416, 0.579002, 0.334905,\n0.345671, 0.277785, 0.230970, 0.706109, 0.528022, 0.471807, -0.336462, -0.336087, 0.879681, -0.627113, 0.775743, 0.070370, 0.592373, 0.394688,\n0.293969, 0.277785, 0.293969, 0.574714, 0.582587, 0.574714, -0.439014, -0.373186, 0.817312, -0.688256, 0.724028, -0.045690, 0.615788, 0.371156,\n0.345671, -0.277785, 0.230970, 0.692311, -0.555607, 0.460442, -0.715184, -0.443416, 0.540273, 0.098946, 0.705151, 0.702119, 0.672735, 0.753249,\n0.293969, -0.353553, 0.196424, 0.589174, -0.707137, 0.390937, -0.801426, -0.449803, 0.394199, 0.104128, 0.546243, 0.831129, 0.698089, 0.807023,\n0.250000, -0.353553, 0.250000, 0.501585, -0.707137, 0.498368, -0.863572, -0.443584, 0.239742, -0.050333, 0.551246, 0.832823, 0.723190, 0.777783,\n0.345671, 0.277785, 0.230970, 0.706109, 0.528022, 0.471807, -0.336462, -0.336087, 0.879681, -0.627113, 0.775743, 0.070370, 0.592373, 0.394688,\n0.384089, 0.191342, 0.256640, 0.763631, 0.364377, 0.533008, -0.410883, -0.362539, 0.836505, -0.501243, 0.854918, 0.133680, 0.604257, 0.455174,\n0.326641, 0.191342, 0.326641, 0.639780, 0.395636, 0.658903, -0.525058, -0.401068, 0.750639, -0.559581, 0.827471, 0.046488, 0.629325, 0.430241,\n0.293969, -0.353553, 0.196424, 0.589174, -0.707137, 0.390937, -0.801426, -0.449803, 0.394199, 0.104128, 0.546243, 0.831129, 0.698089, 0.807023,\n0.230970, -0.415735, 0.154329, 0.482375, -0.820324, 0.307218, -0.875306, -0.437791, 0.205375, 0.031552, 0.366764, 0.929779, 0.735745, 0.853787,\n0.196424, -0.415735, 0.196424, 0.405652, -0.831354, 0.379865, -0.906402, -0.419454, 0.049937, -0.135568, 0.356274, 0.924495, 0.755624, 0.825846,\n0.384089, 0.191342, 0.256640, 0.763631, 0.364377, 0.533008, -0.410883, -0.362539, 0.836505, -0.501243, 0.854918, 0.133680, 0.604257, 0.455174,\n0.407747, 0.097545, 0.272447, 0.832947, 0.195006, 0.517853, -0.426367, -0.370351, 0.825258, -0.352234, 0.908612, 0.224402, 0.615573, 0.515927,\n0.346760, 0.097545, 0.346760, 0.715915, 0.195005, 0.670402, -0.562504, -0.407702, 0.719284, -0.414234, 0.891580, 0.183015, 0.641879, 0.489842,\n0.230970, -0.415735, 0.154329, 0.482375, -0.820324, 0.307218, -0.875306, -0.437791, 0.205375, 0.031552, 0.366764, 0.929779, 0.735745, 0.853787,\n0.159095, -0.461940, 0.106304, 0.343202, -0.910837, 0.229321, -0.916407, -0.378249, -0.130867, -0.187883, 0.172641, 0.966900, 0.792948, 0.886226,\n0.196424, -0.415735, 0.196424, 0.405652, -0.831354, 0.379865, -0.906402, -0.419454, 0.049937, -0.135568, 0.356274, 0.924495, 0.755624, 0.825846,\n0.407747, 0.097545, 0.272447, 0.832947, 0.195006, 0.517853, -0.426367, -0.370351, 0.825258, -0.352234, 0.908612, 0.224402, 0.615573, 0.515927,\n0.415735, 0.000000, 0.277785, 0.812792, 0.000000, 0.582554, -0.533537, -0.401502, 0.744402, -0.235619, 0.914556, 0.328741, 0.627086, 0.576588,\n0.346760, 0.097545, 0.346760, 0.715915, 0.195005, 0.670402, -0.562504, -0.407702, 0.719284, -0.414234, 0.891580, 0.183015, 0.641879, 0.489842,\n0.081106, 0.490393, 0.054193, 0.181415, 0.976741, 0.114308, 0.153068, -0.142866, 0.977834, -0.971223, 0.159712, 0.176687, 0.511212, 0.169520,\n0.159095, 0.461940, 0.106304, 0.319821, 0.923888, 0.210110, 0.008856, -0.224662, 0.974396, -0.947411, 0.309195, 0.082531, 0.541559, 0.220571,\n0.068975, 0.490393, 0.068975, 0.155628, 0.976741, 0.147506, 0.108362, -0.165305, 0.980271, -0.982856, 0.138166, 0.122082, 0.518220, 0.159918,\n0.159095, -0.461940, 0.106304, 0.343202, -0.910837, 0.229321, -0.916407, -0.378249, -0.130867, -0.187883, 0.172641, 0.966900, 0.792948, 0.886226,\n0.081106, -0.490393, 0.054193, 0.188870, -0.973859, 0.126198, -0.801537, -0.227128, -0.553128, -0.517361, 0.010550, 0.855703, 0.867032, 0.893366,\n0.135299, -0.461940, 0.135299, 0.256643, -0.929163, 0.266065, -0.891552, -0.333886, -0.306030, -0.403189, 0.147263, 0.903190, 0.802789, 0.862995,\n0.415735, 0.000000, 0.277785, 0.812792, 0.000000, 0.582554, -0.533537, -0.401502, 0.744402, -0.235619, 0.914556, 0.328741, 0.627086, 0.576588,\n0.407747, -0.097545, 0.272447, 0.832947, -0.195006, 0.517853, -0.548914, -0.409474, 0.728714, -0.068744, 0.892130, 0.446518, 0.639617, 0.636769,\n0.346760, -0.097545, 0.346760, 0.715915, -0.195005, 0.670402, -0.675718, -0.435157, 0.595015, -0.170762, 0.882136, 0.438949, 0.667393, 0.608830,\n0.159095, 0.461940, 0.106304, 0.319821, 0.923888, 0.210110, 0.008856, -0.224662, 0.974396, -0.947411, 0.309195, 0.082531, 0.541559, 0.220571,\n0.230970, 0.415735, 0.154329, 0.463399, 0.831489, 0.306409, -0.145438, -0.269724, 0.951891, -0.874467, 0.485046, 0.006256, 0.562811, 0.276478,\n0.135299, 0.461940, 0.135299, 0.272685, 0.923888, 0.268466, -0.068741, -0.259619, 0.963261, -0.960121, 0.279218, 0.014321, 0.555020, 0.205035,\n0.256640, -0.415735, 0.106304, 0.505801, -0.839191, 0.199808, -0.855445, -0.458062, 0.241648, 0.051734, 0.260712, 0.964029, 0.713786, 0.882694,\n0.176777, -0.461940, 0.073223, 0.334444, -0.931233, 0.144749, -0.912190, -0.358464, -0.198527, -0.271659, 0.051812, 0.960998, 0.785005, 0.910494,\n0.159095, -0.461940, 0.106304, 0.343202, -0.910837, 0.229321, -0.916407, -0.378249, -0.130867, -0.187883, 0.172641, 0.966900, 0.792948, 0.886226,\n0.453064, 0.097545, 0.187665, 0.917971, 0.195006, 0.345401, -0.273171, -0.320559, 0.906984, -0.287255, 0.927329, 0.239888, 0.588664, 0.539227,\n0.461940, 0.000000, 0.191342, 0.910825, 0.000000, 0.412793, -0.385428, -0.358038, 0.850444, -0.149711, 0.931915, 0.330335, 0.598888, 0.601120,\n0.407747, 0.097545, 0.272447, 0.832947, 0.195006, 0.517853, -0.426367, -0.370351, 0.825258, -0.352234, 0.908612, 0.224402, 0.615573, 0.515927,\n0.090120, 0.490393, 0.037329, 0.180222, 0.980789, 0.074651, 0.212929, -0.112995, 0.970512, -0.961087, 0.159432, 0.225594, 0.503412, 0.177731,\n0.176777, 0.461940, 0.073223, 0.344025, 0.929163, 0.135289, 0.104990, -0.181246, 0.977818, -0.933849, 0.323568, 0.152413, 0.527662, 0.233762,\n0.081106, 0.490393, 0.054193, 0.181415, 0.976741, 0.114308, 0.153068, -0.142866, 0.977834, -0.971223, 0.159712, 0.176687, 0.511212, 0.169520,\n0.176777, -0.461940, 0.073223, 0.334444, -0.931233, 0.144749, -0.912190, -0.358464, -0.198527, -0.271659, 0.051812, 0.960998, 0.785005, 0.910494,\n0.090120, -0.490393, 0.037329, 0.200230, -0.976741, 0.076720, -0.795149, -0.207753, -0.569716, -0.589941, -0.057676, 0.805384, 0.870555, 0.905851,\n0.081106, -0.490393, 0.054193, 0.188870, -0.973859, 0.126198, -0.801537, -0.227128, -0.553128, -0.517361, 0.010550, 0.855703, 0.867032, 0.893366,\n0.461940, 0.000000, 0.191342, 0.910825, 0.000000, 0.412793, -0.385428, -0.358038, 0.850444, -0.149711, 0.931915, 0.330335, 0.598888, 0.601120,\n0.453064, -0.097545, 0.187665, 0.917971, -0.195006, 0.345401, -0.394808, -0.365434, 0.842962, 0.044080, 0.915562, 0.399754, 0.610368, 0.662513,\n0.407747, -0.097545, 0.272447, 0.832947, -0.195006, 0.517853, -0.548914, -0.409474, 0.728714, -0.068744, 0.892130, 0.446518, 0.639617, 0.636769,\n0.176777, 0.461940, 0.073223, 0.344025, 0.929163, 0.135289, 0.104990, -0.181246, 0.977818, -0.933849, 0.323568, 0.152413, 0.527662, 0.233762,\n0.256640, 0.415735, 0.106304, 0.514273, 0.831489, 0.210118, -0.025383, -0.230135, 0.972828, -0.857217, 0.505928, 0.095995, 0.544655, 0.292902,\n0.159095, 0.461940, 0.106304, 0.319821, 0.923888, 0.210110, 0.008856, -0.224662, 0.974396, -0.947411, 0.309195, 0.082531, 0.541559, 0.220571,\n0.453064, -0.097545, 0.187665, 0.917971, -0.195006, 0.345401, -0.394808, -0.365434, 0.842962, 0.044080, 0.915562, 0.399754, 0.610368, 0.662513,\n0.426777, -0.191342, 0.176777, 0.841547, -0.382538, 0.381396, -0.522734, -0.398698, 0.753518, 0.129870, 0.828618, 0.544542, 0.624302, 0.722914,\n0.407747, -0.097545, 0.272447, 0.832947, -0.195006, 0.517853, -0.548914, -0.409474, 0.728714, -0.068744, 0.892130, 0.446518, 0.639617, 0.636769,\n0.256640, 0.415735, 0.106304, 0.514273, 0.831489, 0.210118, -0.025383, -0.230135, 0.972828, -0.857217, 0.505928, 0.095995, 0.544655, 0.292902,\n0.326641, 0.353553, 0.135299, 0.635404, 0.720869, 0.276786, -0.116036, -0.265239, 0.957175, -0.762496, 0.642333, 0.077514, 0.557787, 0.353629,\n0.230970, 0.415735, 0.154329, 0.463399, 0.831489, 0.306409, -0.145438, -0.269724, 0.951891, -0.874467, 0.485046, 0.006256, 0.562811, 0.276478,\n0.426777, -0.191342, 0.176777, 0.841547, -0.382538, 0.381396, -0.522734, -0.398698, 0.753518, 0.129870, 0.828618, 0.544542, 0.624302, 0.722914,\n0.384089, -0.277785, 0.159095, 0.765567, -0.567205, 0.303621, -0.587098, -0.422928, 0.690253, 0.273964, 0.714423, 0.643850, 0.642782, 0.781431,\n0.345671, -0.277785, 0.230970, 0.692311, -0.555607, 0.460442, -0.715184, -0.443416, 0.540273, 0.098946, 0.705151, 0.702119, 0.672735, 0.753249,\n0.326641, 0.353553, 0.135299, 0.635404, 0.720869, 0.276786, -0.116036, -0.265239, 0.957175, -0.762496, 0.642333, 0.077514, 0.557787, 0.353629,\n0.384089, 0.277785, 0.159095, 0.750900, 0.582587, 0.311034, -0.170456, -0.284039, 0.943540, -0.637258, 0.762804, 0.109690, 0.568840, 0.415192,\n0.293969, 0.353553, 0.196424, 0.591116, 0.697093, 0.405763, -0.254938, -0.315802, 0.913934, -0.765365, 0.643528, 0.009416, 0.579002, 0.334905,\n0.384089, -0.277785, 0.159095, 0.765567, -0.567205, 0.303621, -0.587098, -0.422928, 0.690253, 0.273964, 0.714423, 0.643850, 0.642782, 0.781431,\n0.326641, -0.353553, 0.135299, 0.635404, -0.720869, 0.276785, -0.732722, -0.449753, 0.510726, 0.255124, 0.534302, 0.805874, 0.669894, 0.836185,\n0.293969, -0.353553, 0.196424, 0.589174, -0.707137, 0.390937, -0.801426, -0.449803, 0.394199, 0.104128, 0.546243, 0.831129, 0.698089, 0.807023,\n0.384089, 0.277785, 0.159095, 0.750900, 0.582587, 0.311034, -0.170456, -0.284039, 0.943540, -0.637258, 0.762804, 0.109690, 0.568840, 0.415192,\n0.426777, 0.191342, 0.176777, 0.843230, 0.395637, 0.363915, -0.249378, -0.311815, 0.916833, -0.476120, 0.863962, 0.163949, 0.578878, 0.477160,\n0.345671, 0.277785, 0.230970, 0.706109, 0.528022, 0.471807, -0.336462, -0.336087, 0.879681, -0.627113, 0.775743, 0.070370, 0.592373, 0.394688,\n0.326641, -0.353553, 0.135299, 0.635404, -0.720869, 0.276785, -0.732722, -0.449753, 0.510726, 0.255124, 0.534302, 0.805874, 0.669894, 0.836185,\n0.256640, -0.415735, 0.106304, 0.505801, -0.839191, 0.199808, -0.855445, -0.458062, 0.241648, 0.051734, 0.260712, 0.964029, 0.713786, 0.882694,\n0.230970, -0.415735, 0.154329, 0.482375, -0.820324, 0.307218, -0.875306, -0.437791, 0.205375, 0.031552, 0.366764, 0.929779, 0.735745, 0.853787,\n0.426777, 0.191342, 0.176777, 0.843230, 0.395637, 0.363915, -0.249378, -0.311815, 0.916833, -0.476120, 0.863962, 0.163949, 0.578878, 0.477160,\n0.453064, 0.097545, 0.187665, 0.917971, 0.195006, 0.345401, -0.273171, -0.320559, 0.906984, -0.287255, 0.927329, 0.239888, 0.588664, 0.539227,\n0.407747, 0.097545, 0.272447, 0.832947, 0.195006, 0.517853, -0.426367, -0.370351, 0.825258, -0.352234, 0.908612, 0.224402, 0.615573, 0.515927,\n0.407747, -0.277785, 0.081106, 0.820488, -0.555401, 0.135385, -0.388731, -0.368416, 0.844487, 0.417575, 0.744024, 0.521593, 0.609075, 0.807270,\n0.346760, -0.353553, 0.068975, 0.688774, -0.706948, 0.160670, -0.589351, -0.416932, 0.691978, 0.406980, 0.560448, 0.721294, 0.636789, 0.864121,\n0.384089, -0.277785, 0.159095, 0.765567, -0.567205, 0.303621, -0.587098, -0.422928, 0.690253, 0.273964, 0.714423, 0.643850, 0.642782, 0.781431,\n0.407747, 0.277785, 0.081106, 0.815119, 0.555607, 0.163958, -0.041973, -0.225641, 0.973306, -0.578069, 0.798528, 0.167894, 0.545057, 0.432130,\n0.453064, 0.191342, 0.090120, 0.905876, 0.382712, 0.181440, -0.088455, -0.247989, 0.964716, -0.414697, 0.888549, 0.196233, 0.553039, 0.495510,\n0.426777, 0.191342, 0.176777, 0.843230, 0.395637, 0.363915, -0.249378, -0.311815, 0.916833, -0.476120, 0.863962, 0.163949, 0.578878, 0.477160,\n0.346760, -0.353553, 0.068975, 0.688774, -0.706948, 0.160670, -0.589351, -0.416932, 0.691978, 0.406980, 0.560448, 0.721294, 0.636789, 0.864121,\n0.272448, -0.415735, 0.054193, 0.548328, -0.831354, 0.090477, -0.759805, -0.450075, 0.469179, 0.307801, 0.301235, 0.902505, 0.687796, 0.912014,\n0.256640, -0.415735, 0.106304, 0.505801, -0.839191, 0.199808, -0.855445, -0.458062, 0.241648, 0.051734, 0.260712, 0.964029, 0.713786, 0.882694,\n0.453064, 0.191342, 0.090120, 0.905876, 0.382712, 0.181440, -0.088455, -0.247989, 0.964716, -0.414697, 0.888549, 0.196233, 0.553039, 0.495510,\n0.480970, 0.097545, 0.095671, 0.967717, 0.195006, 0.159677, -0.106435, -0.258093, 0.960239, -0.227764, 0.947900, 0.222730, 0.560981, 0.558903,\n0.453064, 0.097545, 0.187665, 0.917971, 0.195006, 0.345401, -0.273171, -0.320559, 0.906984, -0.287255, 0.927329, 0.239888, 0.588664, 0.539227,\n0.272448, -0.415735, 0.054193, 0.548328, -0.831354, 0.090477, -0.759805, -0.450075, 0.469179, 0.307801, 0.301235, 0.902505, 0.687796, 0.912014,\n0.187665, -0.461940, 0.037329, 0.361208, -0.929163, 0.078641, -0.930186, -0.364953, -0.039539, -0.049843, 0.064976, 0.996641, 0.780385, 0.935456,\n0.256640, -0.415735, 0.106304, 0.505801, -0.839191, 0.199808, -0.855445, -0.458062, 0.241648, 0.051734, 0.260712, 0.964029, 0.713786, 0.882694,\n0.480970, 0.097545, 0.095671, 0.967717, 0.195006, 0.159677, -0.106435, -0.258093, 0.960239, -0.227764, 0.947900, 0.222730, 0.560981, 0.558903,\n0.490393, 0.000000, 0.097545, 0.973856, 0.000000, 0.227166, -0.216729, -0.299626, 0.929114, -0.069516, 0.952027, 0.298015, 0.569479, 0.622121,\n0.453064, 0.097545, 0.187665, 0.917971, 0.195006, 0.345401, -0.273171, -0.320559, 0.906984, -0.287255, 0.927329, 0.239888, 0.588664, 0.539227,\n0.095671, 0.490393, 0.019030, 0.222787, 0.973859, 0.044314, 0.222436, -0.095039, 0.970304, -0.937833, 0.201692, 0.282472, 0.495010, 0.184398,\n0.187665, 0.461940, 0.037329, 0.394878, 0.916136, 0.069037, 0.150979, -0.138830, 0.978740, -0.900394, 0.370962, 0.227325, 0.513410, 0.244425,\n0.176777, 0.461940, 0.073223, 0.344025, 0.929163, 0.135289, 0.104990, -0.181246, 0.977818, -0.933849, 0.323568, 0.152413, 0.527662, 0.233762,\n0.187665, -0.461940, 0.037329, 0.361208, -0.929163, 0.078641, -0.804954, -0.353269, -0.476707, -0.587712, -0.161370, 0.792814, 0.780385, 0.935456,\n0.095671, -0.490393, 0.019030, 0.191324, -0.980789, 0.038055, -0.769801, -0.173994, -0.614112, -0.685546, -0.105782, 0.720303, 0.878052, 0.917359,\n0.090120, -0.490393, 0.037329, 0.200230, -0.976741, 0.076720, -0.795149, -0.207753, -0.569716, -0.589941, -0.057676, 0.805384, 0.870555, 0.905851,\n0.490393, 0.000000, 0.097545, 0.973856, 0.000000, 0.227166, -0.216729, -0.299626, 0.929114, -0.069516, 0.952027, 0.298015, 0.569479, 0.622121,\n0.480970, -0.097545, 0.095671, 0.967717, -0.195006, 0.159677, -0.214521, -0.304707, 0.927973, 0.136665, 0.938306, 0.317654, 0.579306, 0.684921,\n0.453064, -0.097545, 0.187665, 0.917971, -0.195006, 0.345401, -0.394808, -0.365434, 0.842962, 0.044080, 0.915562, 0.399754, 0.610368, 0.662513,\n0.187665, 0.461940, 0.037329, 0.394878, 0.916136, 0.069037, 0.150979, -0.138830, 0.978740, -0.900394, 0.370962, 0.227325, 0.513410, 0.244425,\n0.272448, 0.415735, 0.054193, 0.545382, 0.831490, 0.105750, 0.084079, -0.179799, 0.980104, -0.834031, 0.525792, 0.167141, 0.526326, 0.306241,\n0.176777, 0.461940, 0.073223, 0.344025, 0.929163, 0.135289, 0.104990, -0.181246, 0.977818, -0.933849, 0.323568, 0.152413, 0.527662, 0.233762,\n0.480970, -0.097545, 0.095671, 0.967717, -0.195006, 0.159677, -0.214521, -0.304707, 0.927973, 0.136665, 0.938306, 0.317654, 0.579306, 0.684921,\n0.453064, -0.191342, 0.090120, 0.899784, -0.382537, 0.209889, -0.350426, -0.346922, 0.869969, 0.254532, 0.850869, 0.459603, 0.591705, 0.746902,\n0.453064, -0.097545, 0.187665, 0.917971, -0.195006, 0.345401, -0.394808, -0.365434, 0.842962, 0.044080, 0.915562, 0.399754, 0.610368, 0.662513,\n0.272448, 0.415735, 0.054193, 0.545382, 0.831490, 0.105750, 0.084079, -0.179799, 0.980104, -0.834031, 0.525792, 0.167141, 0.526326, 0.306241,\n0.346760, 0.353553, 0.068975, 0.688774, 0.706948, 0.160670, -0.005444, -0.216572, 0.976251, -0.724924, 0.674253, 0.140953, 0.536424, 0.368955,\n0.256640, 0.415735, 0.106304, 0.514273, 0.831489, 0.210118, -0.025383, -0.230135, 0.972828, -0.857217, 0.505928, 0.095995, 0.544655, 0.292902,\n0.453064, -0.191342, 0.090120, 0.899784, -0.382537, 0.209889, -0.350426, -0.346922, 0.869969, 0.254532, 0.850869, 0.459603, 0.591705, 0.746902,\n0.407747, -0.277785, 0.081106, 0.820488, -0.555401, 0.135385, -0.388731, -0.368416, 0.844487, 0.417575, 0.744024, 0.521593, 0.609075, 0.807270,\n0.384089, -0.277785, 0.159095, 0.765567, -0.567205, 0.303621, -0.587098, -0.422928, 0.690253, 0.273964, 0.714423, 0.643850, 0.642782, 0.781431,\n0.346760, 0.353553, 0.068975, 0.688774, 0.706948, 0.160670, -0.005444, -0.216572, 0.976251, -0.724924, 0.674253, 0.140953, 0.536424, 0.368955,\n0.407747, 0.277785, 0.081106, 0.815119, 0.555607, 0.163958, -0.041973, -0.225641, 0.973306, -0.578069, 0.798528, 0.167894, 0.545057, 0.432130,\n0.384089, 0.277785, 0.159095, 0.750900, 0.582587, 0.311034, -0.170456, -0.284039, 0.943540, -0.637258, 0.762804, 0.109690, 0.568840, 0.415192,\n0.191342, 0.461940, -0.000000, 0.352136, 0.935949, 0.000000, 0.255192, -0.096012, 0.962112, -0.902615, 0.339595, 0.264501, 0.498880, 0.252406,\n0.277785, 0.415735, -0.000000, 0.543761, 0.839192, -0.008964, 0.204389, -0.122060, 0.971250, -0.814058, 0.530012, 0.237479, 0.507822, 0.316262,\n0.187665, 0.461940, 0.037329, 0.394878, 0.916136, 0.069037, 0.150979, -0.138830, 0.978740, -0.900394, 0.370962, 0.227325, 0.513410, 0.244425,\n0.490393, -0.097545, -0.000000, 0.980274, -0.195005, -0.032182, -0.013067, -0.226420, 0.973942, 0.197399, 0.957908, 0.208438, 0.546288, 0.702787,\n0.461940, -0.191342, -0.000000, 0.923442, -0.382538, 0.030317, -0.144235, -0.272797, 0.951198, 0.352860, 0.877533, 0.324693, 0.556083, 0.766452,\n0.480970, -0.097545, 0.095671, 0.967717, -0.195006, 0.159677, -0.214521, -0.304707, 0.927973, 0.136665, 0.938306, 0.317654, 0.579306, 0.684921,\n0.277785, 0.415735, -0.000000, 0.543761, 0.839192, -0.008964, 0.204389, -0.122060, 0.971250, -0.814058, 0.530012, 0.237479, 0.507822, 0.316262,\n0.353554, 0.353553, -0.000000, 0.706884, 0.706949, 0.023206, 0.125175, -0.157319, 0.979582, -0.696682, 0.690197, 0.195606, 0.514875, 0.380541,\n0.272448, 0.415735, 0.054193, 0.545382, 0.831490, 0.105750, 0.084079, -0.179799, 0.980104, -0.834031, 0.525792, 0.167141, 0.526326, 0.306241,\n0.461940, -0.191342, -0.000000, 0.923442, -0.382538, 0.030317, -0.144235, -0.272797, 0.951198, 0.352860, 0.877533, 0.324693, 0.556083, 0.766452,\n0.415735, -0.277785, -0.000000, 0.831136, -0.555400, -0.027288, -0.161499, -0.288052, 0.943898, 0.537566, 0.789958, 0.294938, 0.570592, 0.829046,\n0.407747, -0.277785, 0.081106, 0.820488, -0.555401, 0.135385, -0.388731, -0.368416, 0.844487, 0.417575, 0.744024, 0.521593, 0.609075, 0.807270,\n0.353554, 0.353553, -0.000000, 0.706884, 0.706949, 0.023206, 0.125175, -0.157319, 0.979582, -0.696682, 0.690197, 0.195606, 0.514875, 0.380541,\n0.415735, 0.277785, -0.000000, 0.831444, 0.555606, 0.001784, 0.106358, -0.162310, 0.980991, -0.544500, 0.814178, 0.201579, 0.520977, 0.445030,\n0.407747, 0.277785, 0.081106, 0.815119, 0.555607, 0.163958, -0.041973, -0.225641, 0.973306, -0.578069, 0.798528, 0.167894, 0.545057, 0.432130,\n0.415735, -0.277785, -0.000000, 0.831136, -0.555400, -0.027288, -0.161499, -0.288052, 0.943898, 0.537566, 0.789958, 0.294938, 0.570592, 0.829046,\n0.353554, -0.353553, -0.000000, 0.706884, -0.706949, 0.023206, -0.388828, -0.360967, 0.847653, 0.573742, 0.592259, 0.565729, 0.596152, 0.889050,\n0.407747, -0.277785, 0.081106, 0.820488, -0.555401, 0.135385, -0.388731, -0.368416, 0.844487, 0.417575, 0.744024, 0.521593, 0.609075, 0.807270,\n0.415735, 0.277785, -0.000000, 0.831444, 0.555606, 0.001784, 0.106358, -0.162310, 0.980991, -0.544500, 0.814178, 0.201579, 0.520977, 0.445030,\n0.461940, 0.191342, -0.000000, 0.929088, 0.369649, -0.012471, 0.083053, -0.175655, 0.980942, -0.360348, 0.912280, 0.194666, 0.526697, 0.509604,\n0.453064, 0.191342, 0.090120, 0.905876, 0.382712, 0.181440, -0.088455, -0.247989, 0.964716, -0.414697, 0.888549, 0.196233, 0.553039, 0.495510,\n0.353554, -0.353553, -0.000000, 0.706884, -0.706949, 0.023206, -0.388828, -0.360967, 0.847653, 0.573742, 0.592259, 0.565729, 0.596152, 0.889050,\n0.277785, -0.415735, -0.000000, 0.555444, -0.831354, -0.018237, -0.598101, -0.414648, 0.685815, 0.586529, 0.376136, 0.717290, 0.653363, 0.940796,\n0.272448, -0.415735, 0.054193, 0.548328, -0.831354, 0.090477, -0.759805, -0.450075, 0.469179, 0.307801, 0.301235, 0.902505, 0.687796, 0.912014,\n0.461940, 0.191342, -0.000000, 0.929088, 0.369649, -0.012471, 0.083053, -0.175655, 0.980942, -0.360348, 0.912280, 0.194666, 0.526697, 0.509604,\n0.490393, 0.097545, -0.000000, 0.984244, 0.175718, -0.019687, 0.053867, -0.191932, 0.979929, -0.168970, 0.967514, 0.188060, 0.532482, 0.574164,\n0.480970, 0.097545, 0.095671, 0.967717, 0.195006, 0.159677, -0.106435, -0.258093, 0.960239, -0.227764, 0.947900, 0.222730, 0.560981, 0.558903,\n0.277785, -0.415735, -0.000000, 0.555444, -0.831354, -0.018237, -0.598101, -0.414648, 0.685815, 0.586529, 0.376136, 0.717290, 0.653363, 0.940796,\n0.191342, -0.461940, -0.000000, 0.382652, -0.923888, 0.002983, -0.883013, -0.364769, 0.295351, 0.059284, 0.027776, 0.997855, 0.782721, 0.960585,\n0.272448, -0.415735, 0.054193, 0.548328, -0.831354, 0.090477, -0.759805, -0.450075, 0.469179, 0.307801, 0.301235, 0.902505, 0.687796, 0.912014,\n0.490393, 0.097545, -0.000000, 0.984244, 0.175718, -0.019687, 0.053867, -0.191932, 0.979929, -0.168970, 0.967514, 0.188060, 0.532482, 0.574164,\n0.500000, 0.000000, -0.000000, 0.999461, -0.000000, 0.032814, -0.031958, -0.226843, 0.973407, -0.007702, 0.972059, 0.234608, 0.538797, 0.638607,\n0.480970, 0.097545, 0.095671, 0.967717, 0.195006, 0.159677, -0.106435, -0.258093, 0.960239, -0.227764, 0.947900, 0.222730, 0.560981, 0.558903,\n0.097545, 0.490393, -0.000000, 0.195071, 0.980789, -0.000000, 0.311436, -0.061942, 0.948246, -0.926912, 0.184355, 0.326876, 0.486168, 0.189402,\n0.191342, 0.461940, -0.000000, 0.352136, 0.935949, 0.000000, 0.255192, -0.096012, 0.962112, -0.902615, 0.339595, 0.264501, 0.498880, 0.252406,\n0.095671, 0.490393, 0.019030, 0.222787, 0.973859, 0.044314, 0.222436, -0.095039, 0.970304, -0.937833, 0.201692, 0.282472, 0.495010, 0.184398,\n0.191342, -0.461940, -0.000000, 0.382652, -0.923888, 0.002983, -0.784059, -0.326443, -0.527908, -0.293899, -0.118664, 0.948442, 0.782721, 0.960585,\n0.097545, -0.490393, -0.000000, 0.214348, -0.976741, 0.005744, -0.829297, -0.185092, -0.527265, -0.384625, -0.078998, 0.919686, 0.890236, 0.927070,\n0.187665, -0.461940, 0.037329, 0.361208, -0.929163, 0.078641, -0.930186, -0.364953, -0.039539, -0.049843, 0.064976, 0.996641, 0.780385, 0.935456,\n0.500000, 0.000000, -0.000000, 0.999461, -0.000000, 0.032814, -0.031958, -0.226843, 0.973407, -0.007702, 0.972059, 0.234608, 0.538797, 0.638607,\n0.490393, -0.097545, -0.000000, 0.980274, -0.195005, -0.032182, -0.013067, -0.226420, 0.973942, 0.197399, 0.957908, 0.208438, 0.546288, 0.702787,\n0.480970, -0.097545, 0.095671, 0.967717, -0.195006, 0.159677, -0.214521, -0.304707, 0.927973, 0.136665, 0.938306, 0.317654, 0.579306, 0.684921,\n0.453064, 0.191342, -0.090120, 0.895005, 0.400772, -0.195824, 0.253101, -0.094792, 0.962785, -0.366434, 0.910934, 0.189538, 0.499915, 0.518924,\n0.480970, 0.097545, -0.095671, 0.956310, 0.208865, -0.204562, 0.230483, -0.108168, 0.967046, -0.181699, 0.972781, 0.143816, 0.503275, 0.584332,\n0.461940, 0.191342, -0.000000, 0.929088, 0.369649, -0.012471, 0.083053, -0.175655, 0.980942, -0.360348, 0.912280, 0.194666, 0.526697, 0.509604,\n0.272448, -0.415735, -0.054193, 0.541214, -0.831354, -0.126245, -0.577114, -0.476427, 0.663292, 0.616148, 0.289905, 0.732337, 0.599170, 0.966771,\n0.187665, -0.461940, -0.037329, 0.394878, -0.916136, -0.069037, -0.777232, -0.373182, 0.506602, 0.502732, 0.152571, 0.850872, 0.803866, 0.984622,\n0.277785, -0.415735, -0.000000, 0.555444, -0.831354, -0.018237, -0.598101, -0.414648, 0.685815, 0.586529, 0.376136, 0.717290, 0.653363, 0.940796,\n0.480970, 0.097545, -0.095671, 0.956310, 0.208865, -0.204562, 0.230483, -0.108168, 0.967046, -0.181699, 0.972781, 0.143816, 0.503275, 0.584332,\n0.490393, 0.000000, -0.097545, 0.986659, -0.000000, -0.162803, 0.161158, -0.141797, 0.976689, 0.024489, 0.988622, 0.148412, 0.506995, 0.649694,\n0.490393, 0.097545, -0.000000, 0.984244, 0.175718, -0.019687, 0.053867, -0.191932, 0.979929, -0.168970, 0.967514, 0.188060, 0.532482, 0.574164,\n0.095671, 0.490393, -0.019030, 0.222787, 0.973859, -0.044314, 0.347838, -0.036945, 0.936826, -0.900239, 0.222962, 0.373975, 0.477031, 0.192654,\n0.187665, 0.461940, -0.037329, 0.404835, 0.910837, -0.080527, 0.316484, -0.056952, 0.946887, -0.851624, 0.407647, 0.329487, 0.484155, 0.257585,\n0.191342, 0.461940, -0.000000, 0.352136, 0.935949, 0.000000, 0.255192, -0.096012, 0.962112, -0.902615, 0.339595, 0.264501, 0.498880, 0.252406,\n0.187665, -0.461940, -0.037329, 0.394878, -0.916136, -0.069037, -0.792255, -0.301506, -0.530496, -0.466512, -0.264678, 0.843986, 0.803866, 0.984622,\n0.095671, -0.490393, -0.019030, 0.222787, -0.973859, -0.044314, -0.711124, -0.131252, -0.690706, -0.669132, -0.185817, 0.719538, 0.907224, 0.934025,\n0.191342, -0.461940, -0.000000, 0.382652, -0.923888, 0.002983, -0.784059, -0.326443, -0.527908, -0.293899, -0.118664, 0.948442, 0.782721, 0.960585,\n0.490393, 0.000000, -0.097545, 0.986659, -0.000000, -0.162803, 0.161158, -0.141797, 0.976689, 0.024489, 0.988622, 0.148412, 0.506995, 0.649694,\n0.480970, -0.097545, -0.095671, 0.955160, -0.195006, -0.222807, 0.199646, -0.131542, 0.970999, 0.212424, 0.975523, 0.056846, 0.511490, 0.714959,\n0.490393, -0.097545, -0.000000, 0.980274, -0.195005, -0.032182, -0.013067, -0.226420, 0.973942, 0.197399, 0.957908, 0.208438, 0.546288, 0.702787,\n0.187665, 0.461940, -0.037329, 0.404835, 0.910837, -0.080527, 0.316484, -0.056952, 0.946887, -0.851624, 0.407647, 0.329487, 0.484155, 0.257585,\n0.272448, 0.415735, -0.054193, 0.558327, 0.820324, -0.123852, 0.303124, -0.062748, 0.950883, -0.767142, 0.567331, 0.299381, 0.489174, 0.322784,\n0.277785, 0.415735, -0.000000, 0.543761, 0.839192, -0.008964, 0.204389, -0.122060, 0.971250, -0.814058, 0.530012, 0.237479, 0.507822, 0.316262,\n0.480970, -0.097545, -0.095671, 0.955160, -0.195006, -0.222807, 0.199646, -0.131542, 0.970999, 0.212424, 0.975523, 0.056846, 0.511490, 0.714959,\n0.453064, -0.191342, -0.090120, 0.911613, -0.382537, -0.150420, 0.087633, -0.176658, 0.980363, 0.403254, 0.903220, 0.146900, 0.517534, 0.780027,\n0.490393, -0.097545, -0.000000, 0.980274, -0.195005, -0.032182, -0.013067, -0.226420, 0.973942, 0.197399, 0.957908, 0.208438, 0.546288, 0.702787,\n0.272448, 0.415735, -0.054193, 0.558327, 0.820324, -0.123852, 0.303124, -0.062748, 0.950883, -0.767142, 0.567331, 0.299381, 0.489174, 0.322784,\n0.346760, 0.353553, -0.068975, 0.704900, 0.697093, -0.131065, 0.265510, -0.087972, 0.960086, -0.658164, 0.711704, 0.245557, 0.493157, 0.388113,\n0.277785, 0.415735, -0.000000, 0.543761, 0.839192, -0.008964, 0.204389, -0.122060, 0.971250, -0.814058, 0.530012, 0.237479, 0.507822, 0.316262,\n0.453064, -0.191342, -0.090120, 0.911613, -0.382537, -0.150420, 0.087633, -0.176658, 0.980363, 0.403254, 0.903220, 0.146900, 0.517534, 0.780027,\n0.407747, -0.277785, -0.081106, 0.822514, -0.539042, -0.181394, 0.098463, -0.179163, 0.978880, 0.559041, 0.824922, 0.083529, 0.526914, 0.844671,\n0.415735, -0.277785, -0.000000, 0.831136, -0.555400, -0.027288, -0.161499, -0.288052, 0.943898, 0.537566, 0.789958, 0.294938, 0.570592, 0.829046,\n0.346760, 0.353553, -0.068975, 0.704900, 0.697093, -0.131065, 0.265510, -0.087972, 0.960086, -0.658164, 0.711704, 0.245557, 0.493157, 0.388113,\n0.407747, 0.277785, -0.081106, 0.829321, 0.539042, -0.147176, 0.236915, -0.100664, 0.966301, -0.504913, 0.835747, 0.215849, 0.496629, 0.453507,\n0.415735, 0.277785, -0.000000, 0.831444, 0.555606, 0.001784, 0.106358, -0.162310, 0.980991, -0.544500, 0.814178, 0.201579, 0.520977, 0.445030,\n0.407747, -0.277785, -0.081106, 0.822514, -0.539042, -0.181394, 0.098463, -0.179163, 0.978880, 0.559041, 0.824922, 0.083529, 0.526914, 0.844671,\n0.346760, -0.353553, -0.068975, 0.704900, -0.697093, -0.131065, -0.060717, -0.243402, 0.968023, 0.702873, 0.661647, 0.261136, 0.545138, 0.908176,\n0.415735, -0.277785, -0.000000, 0.831136, -0.555400, -0.027288, -0.161499, -0.288052, 0.943898, 0.537566, 0.789958, 0.294938, 0.570592, 0.829046,\n0.407747, 0.277785, -0.081106, 0.829321, 0.539042, -0.147176, 0.236915, -0.100664, 0.966301, -0.504913, 0.835747, 0.215849, 0.496629, 0.453507,\n0.453064, 0.191342, -0.090120, 0.895005, 0.400772, -0.195824, 0.253101, -0.094792, 0.962785, -0.366434, 0.910934, 0.189538, 0.499915, 0.518924,\n0.461940, 0.191342, -0.000000, 0.929088, 0.369649, -0.012471, 0.083053, -0.175655, 0.980942, -0.360348, 0.912280, 0.194666, 0.526697, 0.509604,\n0.346760, -0.353553, -0.068975, 0.704900, -0.697093, -0.131065, -0.060717, -0.243402, 0.968023, 0.702873, 0.661647, 0.261136, 0.545138, 0.908176,\n0.272448, -0.415735, -0.054193, 0.541214, -0.831354, -0.126245, -0.577114, -0.476427, 0.663292, 0.616148, 0.289905, 0.732337, 0.599170, 0.966771,\n0.277785, -0.415735, -0.000000, 0.555444, -0.831354, -0.018237, -0.598101, -0.414648, 0.685815, 0.586529, 0.376136, 0.717290, 0.653363, 0.940796,\n0.426777, -0.191342, -0.176777, 0.864751, -0.382538, -0.325378, 0.324072, -0.069888, 0.943447, 0.386897, 0.920540, -0.054003, 0.476902, 0.786308,\n0.384089, -0.277785, -0.159095, 0.767470, -0.555607, -0.319829, 0.341734, -0.067542, 0.937366, 0.539164, 0.829297, -0.146864, 0.479145, 0.852075,\n0.407747, -0.277785, -0.081106, 0.822514, -0.539042, -0.181394, 0.098463, -0.179163, 0.978880, 0.559041, 0.824922, 0.083529, 0.526914, 0.844671,\n0.326641, 0.353553, -0.135299, 0.631468, 0.729955, -0.261563, 0.398337, -0.015971, 0.917100, -0.663967, 0.683254, 0.303830, 0.471329, 0.391486,\n0.384089, 0.277785, -0.159095, 0.765567, 0.567205, -0.303621, 0.385074, -0.025920, 0.922522, -0.514652, 0.823117, 0.240024, 0.472108, 0.457294,\n0.346760, 0.353553, -0.068975, 0.704900, 0.697093, -0.131065, 0.265510, -0.087972, 0.960086, -0.658164, 0.711704, 0.245557, 0.493157, 0.388113,\n0.384089, -0.277785, -0.159095, 0.767470, -0.555607, -0.319829, 0.341734, -0.067542, 0.937366, 0.539164, 0.829297, -0.146864, 0.479145, 0.852075,\n0.326641, -0.353553, -0.135299, 0.652380, -0.707137, -0.272688, 0.291421, -0.098085, 0.951553, 0.697056, 0.701070, -0.150380, 0.483764, 0.917774,\n0.346760, -0.353553, -0.068975, 0.704900, -0.697093, -0.131065, -0.060717, -0.243402, 0.968023, 0.702873, 0.661647, 0.261136, 0.545138, 0.908176,\n0.384089, 0.277785, -0.159095, 0.765567, 0.567205, -0.303621, 0.385074, -0.025920, 0.922522, -0.514652, 0.823117, 0.240024, 0.472108, 0.457294,\n0.426777, 0.191342, -0.176777, 0.854011, 0.382713, -0.352415, 0.390777, -0.024696, 0.920154, -0.341723, 0.923419, 0.174708, 0.472849, 0.523103,\n0.453064, 0.191342, -0.090120, 0.895005, 0.400772, -0.195824, 0.253101, -0.094792, 0.962785, -0.366434, 0.910934, 0.189538, 0.499915, 0.518924,\n0.326641, -0.353553, -0.135299, 0.652380, -0.707137, -0.272688, 0.291421, -0.098085, 0.951553, 0.697056, 0.701070, -0.150380, 0.483764, 0.917774,\n0.256640, -0.415735, -0.106304, 0.506185, -0.831354, -0.229408, 0.269357, -0.100298, 0.957803, 0.774420, 0.555220, -0.303324, 0.501545, 0.983100,\n0.272448, -0.415735, -0.054193, 0.541214, -0.831354, -0.126245, -0.017698, -0.161362, 0.986737, 0.836185, 0.547940, -0.023580, 0.599170, 0.966771,\n0.426777, 0.191342, -0.176777, 0.854011, 0.382713, -0.352415, 0.390777, -0.024696, 0.920154, -0.341723, 0.923419, 0.174708, 0.472849, 0.523103,\n0.453064, 0.097545, -0.187665, 0.893339, 0.195006, -0.404867, 0.415526, -0.015381, 0.909451, -0.176002, 0.980795, 0.084056, 0.473610, 0.588911,\n0.480970, 0.097545, -0.095671, 0.956310, 0.208865, -0.204562, 0.230483, -0.108168, 0.967046, -0.181699, 0.972781, 0.143816, 0.503275, 0.584332,\n0.256640, -0.415735, -0.106304, 0.506185, -0.831354, -0.229408, -0.451833, -0.482215, 0.750544, 0.634834, 0.179131, 0.751597, 0.501545, 0.983100,\n0.176777, -0.461940, -0.073223, 0.358305, -0.923819, -0.134817, -0.532949, -0.320959, 0.782912, 0.645968, 0.141057, 0.750219, 0.889443, 1.002041,\n0.272448, -0.415735, -0.054193, 0.541214, -0.831354, -0.126245, -0.577114, -0.476427, 0.663292, 0.616148, 0.289905, 0.732337, 0.599170, 0.966771,\n0.453064, 0.097545, -0.187665, 0.893339, 0.195006, -0.404867, 0.415526, -0.015381, 0.909451, -0.176002, 0.980795, 0.084056, 0.473610, 0.588911,\n0.461940, 0.000000, -0.191342, 0.935939, 0.000000, -0.352163, 0.351751, -0.048347, 0.934844, 0.019938, 0.998396, 0.052990, 0.474458, 0.654717,\n0.480970, 0.097545, -0.095671, 0.956310, 0.208865, -0.204562, 0.230483, -0.108168, 0.967046, -0.181699, 0.972781, 0.143816, 0.503275, 0.584332,\n0.090120, 0.490393, -0.037329, 0.195833, 0.976741, -0.087334, 0.421336, -0.003387, 0.906898, -0.880226, 0.214339, 0.423392, 0.467730, 0.194097,\n0.176777, 0.461940, -0.073223, 0.338842, 0.931233, -0.134132, 0.405589, -0.015942, 0.913916, -0.849791, 0.364109, 0.381156, 0.469318, 0.259882,\n0.095671, 0.490393, -0.019030, 0.222787, 0.973859, -0.044314, 0.347838, -0.036945, 0.936826, -0.900239, 0.222962, 0.373975, 0.477031, 0.192654,\n0.176777, -0.461940, -0.073223, 0.358305, -0.923819, -0.134817, -0.538038, -0.086314, -0.838490, -0.726213, -0.366540, 0.581604, 0.889443, 1.002041,\n0.090120, -0.490393, -0.037329, 0.195833, -0.976741, -0.087334, -0.450755, -0.010566, -0.892585, -0.819615, -0.211923, 0.532278, 0.927836, 0.937310,\n0.095671, -0.490393, -0.019030, 0.222787, -0.973859, -0.044314, -0.711124, -0.131252, -0.690706, -0.669132, -0.185817, 0.719538, 0.907224, 0.934025,\n0.461940, 0.000000, -0.191342, 0.935939, 0.000000, -0.352163, 0.351751, -0.048347, 0.934844, 0.019938, 0.998396, 0.052990, 0.474458, 0.654717,\n0.453064, -0.097545, -0.187665, 0.893339, -0.195006, -0.404867, 0.407862, -0.026395, 0.912662, 0.175367, 0.980788, -0.085453, 0.475493, 0.720518,\n0.480970, -0.097545, -0.095671, 0.955160, -0.195006, -0.222807, 0.199646, -0.131542, 0.970999, 0.212424, 0.975523, 0.056846, 0.511490, 0.714959,\n0.176777, 0.461940, -0.073223, 0.338842, 0.931233, -0.134132, 0.405589, -0.015942, 0.913916, -0.849791, 0.364109, 0.381156, 0.469318, 0.259882,\n0.256640, 0.415735, -0.106304, 0.487769, 0.849271, -0.202041, 0.403795, -0.014299, 0.914738, -0.773018, 0.527728, 0.352059, 0.470438, 0.325681,\n0.187665, 0.461940, -0.037329, 0.404835, 0.910837, -0.080527, 0.316484, -0.056952, 0.946887, -0.851624, 0.407647, 0.329487, 0.484155, 0.257585,\n0.453064, -0.097545, -0.187665, 0.893339, -0.195006, -0.404867, 0.407862, -0.026395, 0.912662, 0.175367, 0.980788, -0.085453, 0.475493, 0.720518,\n0.426777, -0.191342, -0.176777, 0.864751, -0.382538, -0.325378, 0.324072, -0.069888, 0.943447, 0.386897, 0.920540, -0.054003, 0.476902, 0.786308,\n0.480970, -0.097545, -0.095671, 0.955160, -0.195006, -0.222807, 0.199646, -0.131542, 0.970999, 0.212424, 0.975523, 0.056846, 0.511490, 0.714959,\n0.256640, 0.415735, -0.106304, 0.487769, 0.849271, -0.202041, 0.403795, -0.014299, 0.914738, -0.773018, 0.527728, 0.352059, 0.470438, 0.325681,\n0.326641, 0.353553, -0.135299, 0.631468, 0.729955, -0.261563, 0.398337, -0.015971, 0.917100, -0.663967, 0.683254, 0.303830, 0.471329, 0.391486,\n0.272448, 0.415735, -0.054193, 0.558327, 0.820324, -0.123852, 0.303124, -0.062748, 0.950883, -0.767142, 0.567331, 0.299381, 0.489174, 0.322784,\n0.159095, -0.461940, -0.106304, 0.325118, -0.923819, -0.202130, -0.265505, 0.115975, -0.957109, -0.936279, -0.344503, 0.068552, 1.028460, 0.996322,\n0.081106, -0.490393, -0.054193, 0.175033, -0.976741, -0.123861, -0.276227, 0.072033, -0.958389, -0.976416, -0.188355, 0.105515, 0.949381, 0.936409,\n0.090120, -0.490393, -0.037329, 0.195833, -0.976741, -0.087334, -0.401853, 0.001306, -0.915703, -0.978702, -0.189077, -0.079958, 0.927836, 0.937310,\n0.415735, 0.000000, -0.277785, 0.849251, 0.000000, -0.527989, 0.527365, 0.048626, 0.848246, -0.022230, 0.999113, -0.035756, 0.441746, 0.653353,\n0.407747, -0.097545, -0.272448, 0.797188, -0.195005, -0.571371, 0.593675, 0.081183, 0.800599, 0.091707, 0.974530, -0.204648, 0.439204, 0.719005,\n0.453064, -0.097545, -0.187665, 0.893339, -0.195006, -0.404867, 0.407862, -0.026395, 0.912662, 0.175367, 0.980788, -0.085453, 0.475493, 0.720518,\n0.159095, 0.461940, -0.106304, 0.325118, 0.923819, -0.202130, 0.475092, 0.025251, 0.879574, -0.820328, 0.381848, 0.425740, 0.454457, 0.259262,\n0.230970, 0.415735, -0.154329, 0.467879, 0.823575, -0.320645, 0.507932, 0.046326, 0.860151, -0.720709, 0.565537, 0.400932, 0.451681, 0.324898,\n0.256640, 0.415735, -0.106304, 0.487769, 0.849271, -0.202041, 0.403795, -0.014299, 0.914738, -0.773018, 0.527728, 0.352059, 0.470438, 0.325681,\n0.407747, -0.097545, -0.272448, 0.797188, -0.195005, -0.571371, 0.593675, 0.081183, 0.800599, 0.091707, 0.974530, -0.204648, 0.439204, 0.719005,\n0.384089, -0.191342, -0.256640, 0.784657, -0.382539, -0.487829, 0.546746, 0.056122, 0.835415, 0.299008, 0.922862, -0.242733, 0.435752, 0.784594,\n0.453064, -0.097545, -0.187665, 0.893339, -0.195006, -0.404867, 0.407862, -0.026395, 0.912662, 0.175367, 0.980788, -0.085453, 0.475493, 0.720518,\n0.230970, 0.415735, -0.154329, 0.467879, 0.823575, -0.320645, 0.507932, 0.046326, 0.860151, -0.720709, 0.565537, 0.400932, 0.451681, 0.324898,\n0.293969, 0.353553, -0.196424, 0.606889, 0.683554, -0.405511, 0.515943, 0.049265, 0.855205, -0.604310, 0.728259, 0.323186, 0.449475, 0.390573,\n0.326641, 0.353553, -0.135299, 0.631468, 0.729955, -0.261563, 0.398337, -0.015971, 0.917100, -0.663967, 0.683254, 0.303830, 0.471329, 0.391486,\n0.384089, -0.191342, -0.256640, 0.784657, -0.382539, -0.487829, 0.546746, 0.056122, 0.835415, 0.299008, 0.922862, -0.242733, 0.435752, 0.784594,\n0.345671, -0.277785, -0.230970, 0.690329, -0.555606, -0.463409, 0.598747, 0.079171, 0.797016, 0.401473, 0.827027, -0.393504, 0.430299, 0.850042,\n0.384089, -0.277785, -0.159095, 0.767470, -0.555607, -0.319829, 0.341734, -0.067542, 0.937366, 0.539164, 0.829297, -0.146864, 0.479145, 0.852075,\n0.293969, 0.353553, -0.196424, 0.606889, 0.683554, -0.405511, 0.515943, 0.049265, 0.855205, -0.604310, 0.728259, 0.323186, 0.449475, 0.390573,\n0.345671, 0.277785, -0.230970, 0.709871, 0.539041, -0.453341, 0.512783, 0.045711, 0.857301, -0.482277, 0.841088, 0.244909, 0.447546, 0.456269,\n0.384089, 0.277785, -0.159095, 0.765567, 0.567205, -0.303621, 0.385074, -0.025920, 0.922522, -0.514652, 0.823117, 0.240024, 0.472108, 0.457294,\n0.345671, -0.277785, -0.230970, 0.690329, -0.555606, -0.463409, 0.598747, 0.079171, 0.797016, 0.401473, 0.827027, -0.393504, 0.430299, 0.850042,\n0.293969, -0.353553, -0.196424, 0.586645, -0.707137, -0.394721, 0.638981, 0.104722, 0.762061, 0.490459, 0.698079, -0.521666, 0.419256, 0.915096,\n0.326641, -0.353553, -0.135299, 0.652380, -0.707137, -0.272688, 0.291421, -0.098085, 0.951553, 0.697056, 0.701070, -0.150380, 0.483764, 0.917774,\n0.345671, 0.277785, -0.230970, 0.709871, 0.539041, -0.453341, 0.512783, 0.045711, 0.857301, -0.482277, 0.841088, 0.244909, 0.447546, 0.456269,\n0.384089, 0.191342, -0.256640, 0.768848, 0.382715, -0.512251, 0.534081, 0.056154, 0.843567, -0.349360, 0.922386, 0.164774, 0.445715, 0.521971,\n0.426777, 0.191342, -0.176777, 0.854011, 0.382713, -0.352415, 0.390777, -0.024696, 0.920154, -0.341723, 0.923419, 0.174708, 0.472849, 0.523103,\n0.293969, -0.353553, -0.196424, 0.586645, -0.707137, -0.394721, 0.638981, 0.104722, 0.762061, 0.490459, 0.698079, -0.521666, 0.419256, 0.915096,\n0.230970, -0.415735, -0.154329, 0.451704, -0.831354, -0.323751, 0.744392, 0.151170, 0.650406, 0.464096, 0.528874, -0.710569, 0.380348, 0.978136,\n0.256640, -0.415735, -0.106304, 0.506185, -0.831354, -0.229408, 0.269357, -0.100298, 0.957803, 0.774420, 0.555220, -0.303324, 0.501545, 0.983100,\n0.384089, 0.191342, -0.256640, 0.768848, 0.382715, -0.512251, 0.534081, 0.056154, 0.843567, -0.349360, 0.922386, 0.164774, 0.445715, 0.521971,\n0.407747, 0.097545, -0.272448, 0.797188, 0.195005, -0.571371, 0.569117, 0.073123, 0.818999, -0.207816, 0.977197, 0.043561, 0.443836, 0.587669,\n0.453064, 0.097545, -0.187665, 0.893339, 0.195006, -0.404867, 0.415526, -0.015381, 0.909451, -0.176002, 0.980795, 0.084056, 0.473610, 0.588911,\n0.230970, -0.415735, -0.154329, 0.451704, -0.831354, -0.323751, -0.783851, -0.196509, -0.589035, 0.789340, 0.541532, -0.289286, 1.318419, 0.978136,\n0.159095, -0.461940, -0.106304, 0.325118, -0.923819, -0.202130, -0.797343, -0.152863, -0.583846, 0.862239, 0.377366, -0.337843, 1.028460, 0.996322,\n0.256640, -0.415735, -0.106304, 0.506185, -0.831354, -0.229408, -0.737198, -0.279051, -0.615362, 0.778159, 0.554952, -0.294104, 0.501545, 0.983100,\n0.407747, 0.097545, -0.272448, 0.797188, 0.195005, -0.571371, 0.569117, 0.073123, 0.818999, -0.207816, 0.977197, 0.043561, 0.443836, 0.587669,\n0.415735, 0.000000, -0.277785, 0.849251, 0.000000, -0.527989, 0.527365, 0.048626, 0.848246, -0.022230, 0.999113, -0.035756, 0.441746, 0.653353,\n0.453064, 0.097545, -0.187665, 0.893339, 0.195006, -0.404867, 0.415526, -0.015381, 0.909451, -0.176002, 0.980795, 0.084056, 0.473610, 0.588911,\n0.081106, 0.490393, -0.054193, 0.175033, 0.976740, -0.123861, 0.476286, 0.026103, 0.878903, -0.860138, 0.212914, 0.463497, 0.458394, 0.193707,\n0.159095, 0.461940, -0.106304, 0.325118, 0.923819, -0.202130, 0.475092, 0.025251, 0.879574, -0.820328, 0.381848, 0.425740, 0.454457, 0.259262,\n0.090120, 0.490393, -0.037329, 0.195833, 0.976741, -0.087334, 0.421336, -0.003387, 0.906898, -0.880226, 0.214339, 0.423392, 0.467730, 0.194097,\n0.250000, -0.353553, -0.250000, 0.498368, -0.707136, -0.501585, 0.855249, 0.306204, 0.418077, 0.156373, 0.642382, -0.750262, 0.361877, 0.900985,\n0.196424, -0.415735, -0.196424, 0.379865, -0.831354, -0.405652, 0.914855, 0.402534, 0.031733, -0.006948, 0.435946, -0.899946, 0.304204, 0.956342,\n0.230970, -0.415735, -0.154329, 0.451704, -0.831354, -0.323751, 0.744392, 0.151170, 0.650406, 0.464096, 0.528874, -0.710569, 0.380348, 0.978136,\n0.326641, 0.191342, -0.326641, 0.654139, 0.382714, -0.652405, 0.658861, 0.135319, 0.739994, -0.368423, 0.914522, 0.167075, 0.418746, 0.515574,\n0.346760, 0.097545, -0.346760, 0.670403, 0.195003, -0.715915, 0.698880, 0.158166, 0.697532, -0.255799, 0.966439, 0.023704, 0.414327, 0.580670,\n0.407747, 0.097545, -0.272448, 0.797188, 0.195005, -0.571371, 0.569117, 0.073123, 0.818999, -0.207816, 0.977197, 0.043561, 0.443836, 0.587669,\n0.196424, -0.415735, -0.196424, 0.379865, -0.831354, -0.405652, 0.914855, 0.402534, 0.031733, -0.006948, 0.435946, -0.899946, 0.304204, 0.956342,\n0.135299, -0.461940, -0.135299, 0.266065, -0.929163, -0.256643, 0.900533, 0.334565, -0.277683, -0.073827, 0.245816, -0.966501, 0.139104, 0.974700,\n0.230970, -0.415735, -0.154329, 0.451704, -0.831354, -0.323751, 0.821102, 0.529311, -0.213590, -0.099538, 0.313655, -0.944306, 0.380348, 0.978136,\n0.346760, 0.097545, -0.346760, 0.670403, 0.195003, -0.715915, 0.698880, 0.158166, 0.697532, -0.255799, 0.966439, 0.023704, 0.414327, 0.580670,\n0.353553, 0.000000, -0.353553, 0.729927, 0.000000, -0.683525, 0.676669, 0.141278, 0.722606, -0.093335, 0.990633, -0.099671, 0.409461, 0.645691,\n0.407747, 0.097545, -0.272448, 0.797188, 0.195005, -0.571371, 0.569117, 0.073123, 0.818999, -0.207816, 0.977197, 0.043561, 0.443836, 0.587669,\n0.068975, 0.490393, -0.068975, 0.147506, 0.976741, -0.155628, 0.528648, 0.055128, 0.847049, -0.838346, 0.206961, 0.504325, 0.449147, 0.191490,\n0.135299, 0.461940, -0.135299, 0.282643, 0.918409, -0.276836, 0.557519, 0.077564, 0.826533, -0.781661, 0.387802, 0.488483, 0.439657, 0.255733,\n0.081106, 0.490393, -0.054193, 0.175033, 0.976740, -0.123861, 0.476286, 0.026103, 0.878903, -0.860138, 0.212914, 0.463497, 0.458394, 0.193707,\n0.135299, -0.461940, -0.135299, 0.266065, -0.929163, -0.256643, -0.056301, 0.250806, -0.966399, -0.959422, -0.229465, -0.163875, 0.139104, 0.974700,\n0.068975, -0.490393, -0.068975, 0.137937, -0.980789, -0.137937, -0.202289, 0.108434, -0.973304, -0.984450, -0.151062, 0.089663, 0.030632, 0.931469,\n0.081106, -0.490393, -0.054193, 0.175033, -0.976741, -0.123861, -0.276227, 0.072033, -0.958389, -0.976416, -0.188355, 0.105515, 0.011310, 0.936409,\n0.353553, 0.000000, -0.353553, 0.729927, 0.000000, -0.683525, 0.676669, 0.141278, 0.722606, -0.093335, 0.990633, -0.099671, 0.409461, 0.645691,\n0.346760, -0.097545, -0.346760, 0.670403, -0.195003, -0.715915, 0.741983, 0.182238, 0.645175, -0.023312, 0.958836, -0.283001, 0.403621, 0.710549,\n0.407747, -0.097545, -0.272448, 0.797188, -0.195005, -0.571371, 0.593675, 0.081183, 0.800599, 0.091707, 0.974530, -0.204648, 0.439204, 0.719005,\n0.135299, 0.461940, -0.135299, 0.282643, 0.918409, -0.276836, 0.557519, 0.077564, 0.826533, -0.781661, 0.387802, 0.488483, 0.439657, 0.255733,\n0.196424, 0.415735, -0.196424, 0.395423, 0.820324, -0.413170, 0.605387, 0.105528, 0.788904, -0.691963, 0.561867, 0.453313, 0.432975, 0.320449,\n0.230970, 0.415735, -0.154329, 0.467879, 0.823575, -0.320645, 0.507932, 0.046326, 0.860151, -0.720709, 0.565537, 0.400932, 0.451681, 0.324898,\n0.346760, -0.097545, -0.346760, 0.670403, -0.195003, -0.715915, 0.741983, 0.182238, 0.645175, -0.023312, 0.958836, -0.283001, 0.403621, 0.710549,\n0.326641, -0.191342, -0.326641, 0.658902, -0.395637, -0.639781, 0.739641, 0.185811, 0.646842, 0.138491, 0.899778, -0.413788, 0.395849, 0.775082,\n0.407747, -0.097545, -0.272448, 0.797188, -0.195005, -0.571371, 0.593675, 0.081183, 0.800599, 0.091707, 0.974530, -0.204648, 0.439204, 0.719005,\n0.196424, 0.415735, -0.196424, 0.395423, 0.820324, -0.413170, 0.605387, 0.105528, 0.788904, -0.691963, 0.561867, 0.453313, 0.432975, 0.320449,\n0.250000, 0.353553, -0.250000, 0.498876, 0.720868, -0.481115, 0.605696, 0.107056, 0.788461, -0.619306, 0.684856, 0.383969, 0.427684, 0.385399,\n0.230970, 0.415735, -0.154329, 0.467879, 0.823575, -0.320645, 0.507932, 0.046326, 0.860151, -0.720709, 0.565537, 0.400932, 0.451681, 0.324898,\n0.326641, -0.191342, -0.326641, 0.658902, -0.395637, -0.639781, 0.739641, 0.185811, 0.646842, 0.138491, 0.899778, -0.413788, 0.395849, 0.775082,\n0.293969, -0.277785, -0.293969, 0.590820, -0.571807, -0.569182, 0.775901, 0.209314, 0.595118, 0.230577, 0.795724, -0.560051, 0.384002, 0.838924,\n0.345671, -0.277785, -0.230970, 0.690329, -0.555606, -0.463409, 0.598747, 0.079171, 0.797016, 0.401473, 0.827027, -0.393504, 0.430299, 0.850042,\n0.250000, 0.353553, -0.250000, 0.498876, 0.720868, -0.481115, 0.605696, 0.107056, 0.788461, -0.619306, 0.684856, 0.383969, 0.427684, 0.385399,\n0.293969, 0.277785, -0.293969, 0.591101, 0.567205, -0.573479, 0.629924, 0.119442, 0.767417, -0.501666, 0.815265, 0.289265, 0.423084, 0.450465,\n0.293969, 0.353553, -0.196424, 0.606889, 0.683554, -0.405511, 0.515943, 0.049265, 0.855205, -0.604310, 0.728259, 0.323186, 0.449475, 0.390573,\n0.293969, -0.277785, -0.293969, 0.590820, -0.571807, -0.569182, 0.775901, 0.209314, 0.595118, 0.230577, 0.795724, -0.560051, 0.384002, 0.838924,\n0.250000, -0.353553, -0.250000, 0.498368, -0.707136, -0.501585, 0.855249, 0.306204, 0.418077, 0.156373, 0.642382, -0.750262, 0.361877, 0.900985,\n0.293969, -0.353553, -0.196424, 0.586645, -0.707137, -0.394721, 0.638981, 0.104722, 0.762061, 0.490459, 0.698079, -0.521666, 0.419256, 0.915096,\n0.293969, 0.277785, -0.293969, 0.591101, 0.567205, -0.573479, 0.629924, 0.119442, 0.767417, -0.501666, 0.815265, 0.289265, 0.423084, 0.450465,\n0.326641, 0.191342, -0.326641, 0.654139, 0.382714, -0.652405, 0.658861, 0.135319, 0.739994, -0.368423, 0.914522, 0.167075, 0.418746, 0.515574,\n0.384089, 0.191342, -0.256640, 0.768848, 0.382715, -0.512251, 0.534081, 0.056154, 0.843567, -0.349360, 0.922386, 0.164774, 0.445715, 0.521971,\n0.256640, -0.191342, -0.384089, 0.514294, -0.382715, -0.767484, 0.855989, 0.284135, 0.431914, -0.074345, 0.871641, -0.484473, 0.358489, 0.758785,\n0.230970, -0.277785, -0.345671, 0.484442, -0.555401, -0.675904, 0.874746, 0.297240, 0.382711, 0.004245, 0.774101, -0.633048, 0.342507, 0.820416,\n0.326641, -0.191342, -0.326641, 0.658902, -0.395637, -0.639781, 0.739641, 0.185811, 0.646842, 0.138491, 0.899778, -0.413788, 0.395849, 0.775082,\n0.196424, 0.353553, -0.293969, 0.405763, 0.697093, -0.591116, 0.707347, 0.170066, 0.686104, -0.582535, 0.695611, 0.420449, 0.406033, 0.376093,\n0.230970, 0.277785, -0.345671, 0.482349, 0.539041, -0.690488, 0.730933, 0.186757, 0.656398, -0.485070, 0.820724, 0.301860, 0.398842, 0.440069,\n0.293969, 0.277785, -0.293969, 0.591101, 0.567205, -0.573479, 0.629924, 0.119442, 0.767417, -0.501666, 0.815265, 0.289265, 0.423084, 0.450465,\n0.230970, -0.277785, -0.345671, 0.484442, -0.555401, -0.675904, 0.874746, 0.297240, 0.382711, 0.004245, 0.774101, -0.633048, 0.342507, 0.820416,\n0.196424, -0.353553, -0.293969, 0.390937, -0.707137, -0.589174, 0.914099, 0.373161, 0.158662, -0.116262, 0.597050, -0.793734, 0.315550, 0.878976,\n0.250000, -0.353553, -0.250000, 0.498368, -0.707136, -0.501585, 0.855249, 0.306204, 0.418077, 0.156373, 0.642382, -0.750262, 0.361877, 0.900985,\n0.230970, 0.277785, -0.345671, 0.482349, 0.539041, -0.690488, 0.730933, 0.186757, 0.656398, -0.485070, 0.820724, 0.301860, 0.398842, 0.440069,\n0.256640, 0.191342, -0.384089, 0.514294, 0.382715, -0.767484, 0.761224, 0.208485, 0.614062, -0.392267, 0.900783, 0.186326, 0.392136, 0.504171,\n0.326641, 0.191342, -0.326641, 0.654139, 0.382714, -0.652405, 0.658861, 0.135319, 0.739994, -0.368423, 0.914522, 0.167075, 0.418746, 0.515574,\n0.196424, -0.353553, -0.293969, 0.390937, -0.707137, -0.589174, 0.914099, 0.373161, 0.158662, -0.116262, 0.597050, -0.793734, 0.315550, 0.878976,\n0.154329, -0.415735, -0.230970, 0.293425, -0.831354, -0.471967, 0.871401, 0.435627, -0.225587, -0.290327, 0.392886, -0.872554, 0.260582, 0.928725,\n0.196424, -0.415735, -0.196424, 0.379865, -0.831354, -0.405652, 0.914855, 0.402534, 0.031733, -0.006948, 0.435946, -0.899946, 0.304204, 0.956342,\n0.256640, 0.191342, -0.384089, 0.514294, 0.382715, -0.767484, 0.761224, 0.208485, 0.614062, -0.392267, 0.900783, 0.186326, 0.392136, 0.504171,\n0.272448, 0.097545, -0.407747, 0.517853, 0.195006, -0.832947, 0.799611, 0.235733, 0.552316, -0.309649, 0.950378, 0.029986, 0.385399, 0.568265,\n0.346760, 0.097545, -0.346760, 0.670403, 0.195003, -0.715915, 0.698880, 0.158166, 0.697532, -0.255799, 0.966439, 0.023704, 0.414327, 0.580670,\n0.154329, -0.415735, -0.230970, 0.293425, -0.831354, -0.471967, 0.871401, 0.435627, -0.225587, -0.290327, 0.392886, -0.872554, 0.260582, 0.928725,\n0.106304, -0.461940, -0.159095, 0.230404, -0.916136, -0.328037, 0.789524, 0.373055, -0.487321, -0.638563, 0.112026, -0.761372, 0.149638, 0.949935,\n0.196424, -0.415735, -0.196424, 0.379865, -0.831354, -0.405652, 0.914855, 0.402534, 0.031733, -0.006948, 0.435946, -0.899946, 0.304204, 0.956342,\n0.272448, 0.097545, -0.407747, 0.517853, 0.195006, -0.832947, 0.799611, 0.235733, 0.552316, -0.309649, 0.950378, 0.029986, 0.385399, 0.568265,\n0.277785, 0.000000, -0.415735, 0.582558, 0.000000, -0.812789, 0.791754, 0.226032, 0.567481, -0.181594, 0.974722, -0.130156, 0.378101, 0.632212,\n0.346760, 0.097545, -0.346760, 0.670403, 0.195003, -0.715915, 0.698880, 0.158166, 0.697532, -0.255799, 0.966439, 0.023704, 0.414327, 0.580670,\n0.054193, 0.490393, -0.081106, 0.114308, 0.976741, -0.181415, 0.577264, 0.083314, 0.812296, -0.813643, 0.196824, 0.547033, 0.440119, 0.187485,\n0.106304, 0.461940, -0.159095, 0.210110, 0.923888, -0.319821, 0.624158, 0.125030, 0.771229, -0.748221, 0.362510, 0.555655, 0.425005, 0.249351,\n0.068975, 0.490393, -0.068975, 0.147506, 0.976741, -0.155628, 0.528648, 0.055128, 0.847049, -0.838346, 0.206961, 0.504325, 0.449147, 0.191490,\n0.106304, -0.461940, -0.159095, 0.230404, -0.916136, -0.328037, 0.158051, 0.367863, -0.916350, -0.889781, -0.061867, -0.452176, 0.149638, 0.949935,\n0.054193, -0.490393, -0.081106, 0.126198, -0.973859, -0.188870, 0.072963, 0.198989, -0.977282, -0.975189, -0.086882, -0.203613, 0.045633, 0.923222,\n0.135299, -0.461940, -0.135299, 0.266065, -0.929163, -0.256643, -0.056301, 0.250806, -0.966399, -0.959422, -0.229465, -0.163875, 0.139104, 0.974700,\n0.277785, 0.000000, -0.415735, 0.582558, 0.000000, -0.812789, 0.791754, 0.226032, 0.567481, -0.181594, 0.974722, -0.130156, 0.378101, 0.632212,\n0.272448, -0.097545, -0.407747, 0.517853, -0.195006, -0.832947, 0.844844, 0.269565, 0.462140, -0.150175, 0.937830, -0.312926, 0.369532, 0.695826,\n0.346760, -0.097545, -0.346760, 0.670403, -0.195003, -0.715915, 0.741983, 0.182238, 0.645175, -0.023312, 0.958836, -0.283001, 0.403621, 0.710549,\n0.106304, 0.461940, -0.159095, 0.210110, 0.923888, -0.319821, 0.624158, 0.125030, 0.771229, -0.748221, 0.362510, 0.555655, 0.425005, 0.249351,\n0.154329, 0.415735, -0.230970, 0.306409, 0.831489, -0.463399, 0.673121, 0.154953, 0.723117, -0.670248, 0.534137, 0.515233, 0.414383, 0.312422,\n0.135299, 0.461940, -0.135299, 0.282643, 0.918409, -0.276836, 0.557519, 0.077564, 0.826533, -0.781661, 0.387802, 0.488483, 0.439657, 0.255733,\n0.272448, -0.097545, -0.407747, 0.517853, -0.195006, -0.832947, 0.844844, 0.269565, 0.462140, -0.150175, 0.937830, -0.312926, 0.369532, 0.695826,\n0.256640, -0.191342, -0.384089, 0.514294, -0.382715, -0.767484, 0.855989, 0.284135, 0.431914, -0.074345, 0.871641, -0.484473, 0.358489, 0.758785,\n0.346760, -0.097545, -0.346760, 0.670403, -0.195003, -0.715915, 0.741983, 0.182238, 0.645175, -0.023312, 0.958836, -0.283001, 0.403621, 0.710549,\n0.154329, 0.415735, -0.230970, 0.306409, 0.831489, -0.463399, 0.673121, 0.154953, 0.723117, -0.670248, 0.534137, 0.515233, 0.414383, 0.312422,\n0.196424, 0.353553, -0.293969, 0.405763, 0.697093, -0.591116, 0.707347, 0.170066, 0.686104, -0.582535, 0.695611, 0.420449, 0.406033, 0.376093,\n0.196424, 0.415735, -0.196424, 0.395423, 0.820324, -0.413170, 0.605387, 0.105528, 0.788904, -0.691963, 0.561867, 0.453313, 0.432975, 0.320449,\n0.073223, -0.461940, -0.176777, 0.158028, -0.923819, -0.348692, 0.351012, 0.382620, -0.854630, -0.944682, -0.038662, -0.325701, 0.148297, 0.924790,\n0.037329, -0.490393, -0.090120, 0.076720, -0.976740, -0.200230, 0.046042, 0.204078, -0.977871, -0.996783, -0.079808, 0.007381, 0.055761, 0.912636,\n0.054193, -0.490393, -0.081106, 0.126198, -0.973859, -0.188870, 0.072963, 0.198989, -0.977282, -0.975189, -0.086882, -0.203613, 0.045633, 0.923222,\n0.191342, 0.000000, -0.461940, 0.412789, 0.000000, -0.910827, 0.867606, 0.304390, 0.393201, -0.271702, 0.954471, -0.123136, 0.347954, 0.613692,\n0.187665, -0.097545, -0.453064, 0.345398, -0.195004, -0.917972, 0.901940, 0.339189, 0.267312, -0.270622, 0.915923, -0.296394, 0.337345, 0.675882,\n0.272448, -0.097545, -0.407747, 0.517853, -0.195006, -0.832947, 0.844844, 0.269565, 0.462140, -0.150175, 0.937830, -0.312926, 0.369532, 0.695826,\n0.073223, 0.461940, -0.176777, 0.144749, 0.931233, -0.334444, 0.674962, 0.154225, 0.721554, -0.715354, 0.332011, 0.614848, 0.410583, 0.240213,\n0.106304, 0.415735, -0.256640, 0.202041, 0.849271, -0.487769, 0.729025, 0.202156, 0.653954, -0.641871, 0.490990, 0.589008, 0.395951, 0.300965,\n0.106304, 0.461940, -0.159095, 0.210110, 0.923888, -0.319821, 0.624158, 0.125030, 0.771229, -0.748221, 0.362510, 0.555655, 0.425005, 0.249351,\n0.187665, -0.097545, -0.453064, 0.345398, -0.195004, -0.917972, 0.901940, 0.339189, 0.267312, -0.270622, 0.915923, -0.296394, 0.337345, 0.675882,\n0.176777, -0.191342, -0.426777, 0.354681, -0.382715, -0.853071, 0.910663, 0.348166, 0.222427, -0.228651, 0.849181, -0.476036, 0.324176, 0.737162,\n0.272448, -0.097545, -0.407747, 0.517853, -0.195006, -0.832947, 0.844844, 0.269565, 0.462140, -0.150175, 0.937830, -0.312926, 0.369532, 0.695826,\n0.106304, 0.415735, -0.256640, 0.202041, 0.849271, -0.487769, 0.729025, 0.202156, 0.653954, -0.641871, 0.490990, 0.589008, 0.395951, 0.300965,\n0.135299, 0.353553, -0.326641, 0.256646, 0.716972, -0.648139, 0.784086, 0.237640, 0.573355, -0.558550, 0.657303, 0.505939, 0.384563, 0.362880,\n0.154329, 0.415735, -0.230970, 0.306409, 0.831489, -0.463399, 0.673121, 0.154953, 0.723117, -0.670248, 0.534137, 0.515233, 0.414383, 0.312422,\n0.176777, -0.191342, -0.426777, 0.354681, -0.382715, -0.853071, 0.910663, 0.348166, 0.222427, -0.228651, 0.849181, -0.476036, 0.324176, 0.737162,\n0.159095, -0.277785, -0.384089, 0.343269, -0.555401, -0.757427, 0.918601, 0.366641, 0.147466, -0.207285, 0.741746, -0.637845, 0.306159, 0.796676,\n0.256640, -0.191342, -0.384089, 0.514294, -0.382715, -0.767484, 0.855989, 0.284135, 0.431914, -0.074345, 0.871641, -0.484473, 0.358489, 0.758785,\n0.135299, 0.353553, -0.326641, 0.256646, 0.716972, -0.648139, 0.784086, 0.237640, 0.573355, -0.558550, 0.657303, 0.505939, 0.384563, 0.362880,\n0.159095, 0.277785, -0.384089, 0.343269, 0.555401, -0.757427, 0.801936, 0.246493, 0.544188, -0.489566, 0.794019, 0.360359, 0.374888, 0.425400,\n0.196424, 0.353553, -0.293969, 0.405763, 0.697093, -0.591116, 0.707347, 0.170066, 0.686104, -0.582535, 0.695611, 0.420449, 0.406033, 0.376093,\n0.159095, -0.277785, -0.384089, 0.343269, -0.555401, -0.757427, 0.918601, 0.366641, 0.147466, -0.207285, 0.741746, -0.637845, 0.306159, 0.796676,\n0.135299, -0.353553, -0.326641, 0.268482, -0.707136, -0.654122, 0.902614, 0.421859, -0.085576, -0.339988, 0.565790, -0.751192, 0.278480, 0.852494,\n0.196424, -0.353553, -0.293969, 0.390937, -0.707137, -0.589174, 0.914099, 0.373161, 0.158662, -0.116262, 0.597050, -0.793734, 0.315550, 0.878976,\n0.159095, 0.277785, -0.384089, 0.343269, 0.555401, -0.757427, 0.801936, 0.246493, 0.544188, -0.489566, 0.794019, 0.360359, 0.374888, 0.425400,\n0.176777, 0.191342, -0.426777, 0.354681, 0.382715, -0.853071, 0.838031, 0.274468, 0.471563, -0.412065, 0.882985, 0.224812, 0.366006, 0.488197,\n0.256640, 0.191342, -0.384089, 0.514294, 0.382715, -0.767484, 0.761224, 0.208485, 0.614062, -0.392267, 0.900783, 0.186326, 0.392136, 0.504171,\n0.135299, -0.353553, -0.326641, 0.268482, -0.707136, -0.654122, 0.902614, 0.421859, -0.085576, -0.339988, 0.565790, -0.751192, 0.278480, 0.852494,\n0.106304, -0.415735, -0.256640, 0.195712, -0.831354, -0.520142, 0.781917, 0.452404, -0.428878, -0.565160, 0.337843, -0.752633, 0.230558, 0.899550,\n0.154329, -0.415735, -0.230970, 0.293425, -0.831354, -0.471967, 0.871401, 0.435627, -0.225587, -0.290327, 0.392886, -0.872554, 0.260582, 0.928725,\n0.176777, 0.191342, -0.426777, 0.354681, 0.382715, -0.853071, 0.838031, 0.274468, 0.471563, -0.412065, 0.882985, 0.224812, 0.366006, 0.488197,\n0.187665, 0.097545, -0.453064, 0.345398, 0.195004, -0.917972, 0.868991, 0.302874, 0.391308, -0.358378, 0.931447, 0.063022, 0.357242, 0.551036,\n0.272448, 0.097545, -0.407747, 0.517853, 0.195006, -0.832947, 0.799611, 0.235733, 0.552316, -0.309649, 0.950378, 0.029986, 0.385399, 0.568265,\n0.106304, -0.415735, -0.256640, 0.195712, -0.831354, -0.520142, 0.781917, 0.452404, -0.428878, -0.565160, 0.337843, -0.752633, 0.230558, 0.899550,\n0.073223, -0.461940, -0.176777, 0.158028, -0.923819, -0.348692, 0.730736, 0.346915, -0.587941, -0.526365, 0.219962, -0.821314, 0.148297, 0.924790,\n0.154329, -0.415735, -0.230970, 0.293425, -0.831354, -0.471967, 0.871401, 0.435627, -0.225587, -0.290327, 0.392886, -0.872554, 0.260582, 0.928725,\n0.187665, 0.097545, -0.453064, 0.345398, 0.195004, -0.917972, 0.868991, 0.302874, 0.391308, -0.358378, 0.931447, 0.063022, 0.357242, 0.551036,\n0.191342, 0.000000, -0.461940, 0.412789, 0.000000, -0.910827, 0.867606, 0.304390, 0.393201, -0.271702, 0.954471, -0.123136, 0.347954, 0.613692,\n0.272448, 0.097545, -0.407747, 0.517853, 0.195006, -0.832947, 0.799611, 0.235733, 0.552316, -0.309649, 0.950378, 0.029986, 0.385399, 0.568265,\n0.037329, 0.490393, -0.090120, 0.076720, 0.976740, -0.200230, 0.621152, 0.110266, 0.775894, -0.785459, 0.182905, 0.591270, 0.431446, 0.181761,\n0.073223, 0.461940, -0.176777, 0.144749, 0.931233, -0.334444, 0.674962, 0.154225, 0.721554, -0.715354, 0.332011, 0.614848, 0.410583, 0.240213,\n0.054193, 0.490393, -0.081106, 0.114308, 0.976741, -0.181415, 0.577264, 0.083314, 0.812296, -0.813643, 0.196824, 0.547033, 0.440119, 0.187485,\n0.068975, -0.353553, -0.346760, 0.135711, -0.707136, -0.693932, 0.834724, 0.458897, -0.304383, -0.532345, 0.538668, -0.653028, 0.247735, 0.823865,\n0.054193, -0.415735, -0.272448, 0.090476, -0.831354, -0.548329, 0.704662, 0.442513, -0.554647, -0.688308, 0.345720, -0.637738, 0.206623, 0.870322,\n0.106304, -0.415735, -0.256640, 0.195712, -0.831354, -0.520142, 0.781917, 0.452404, -0.428878, -0.565160, 0.337843, -0.752633, 0.230558, 0.899550,\n0.090120, 0.191342, -0.453064, 0.181442, 0.382715, -0.905874, 0.888381, 0.331252, 0.317886, -0.417947, 0.863841, 0.281245, 0.340374, 0.468222,\n0.095671, 0.097545, -0.480970, 0.159676, 0.195003, -0.967718, 0.907052, 0.357868, 0.221779, -0.392058, 0.912195, 0.119124, 0.329902, 0.529720,\n0.187665, 0.097545, -0.453064, 0.345398, 0.195004, -0.917972, 0.868991, 0.302874, 0.391308, -0.358378, 0.931447, 0.063022, 0.357242, 0.551036,\n0.054193, -0.415735, -0.272448, 0.090476, -0.831354, -0.548329, 0.704662, 0.442513, -0.554647, -0.688308, 0.345720, -0.637738, 0.206623, 0.870322,\n0.037329, -0.461940, -0.187665, 0.086967, -0.923819, -0.372820, 0.499455, 0.364240, -0.786049, -0.840689, 0.132730, -0.525000, 0.142004, 0.900074,\n0.106304, -0.415735, -0.256640, 0.195712, -0.831354, -0.520142, 0.781917, 0.452404, -0.428878, -0.565160, 0.337843, -0.752633, 0.230558, 0.899550,\n0.095671, 0.097545, -0.480970, 0.159676, 0.195003, -0.967718, 0.907052, 0.357868, 0.221779, -0.392058, 0.912195, 0.119124, 0.329902, 0.529720,\n0.097545, 0.000000, -0.490392, 0.227166, -0.000000, -0.973856, 0.909769, 0.356771, 0.212217, -0.347462, 0.934185, -0.081051, 0.319079, 0.591068,\n0.187665, 0.097545, -0.453064, 0.345398, 0.195004, -0.917972, 0.868991, 0.302874, 0.391308, -0.358378, 0.931447, 0.063022, 0.357242, 0.551036,\n0.019030, 0.490393, -0.095671, 0.036183, 0.976740, -0.211349, 0.659716, 0.135510, 0.739197, -0.754201, 0.165442, 0.635461, 0.423278, 0.174421,\n0.037329, 0.461940, -0.187665, 0.081206, 0.918409, -0.387209, 0.738308, 0.205550, 0.642379, -0.674035, 0.336788, 0.657457, 0.396472, 0.228455,\n0.037329, 0.490393, -0.090120, 0.076720, 0.976740, -0.200230, 0.621152, 0.110266, 0.775894, -0.785459, 0.182905, 0.591270, 0.431446, 0.181761,\n0.037329, -0.461940, -0.187665, 0.086967, -0.923819, -0.372820, 0.187773, 0.382731, -0.904576, -0.992709, -0.111716, 0.045255, 0.142004, 0.900074,\n0.019030, -0.490393, -0.095671, 0.036183, -0.976740, -0.211349, 0.052590, 0.213056, -0.975624, -0.999332, -0.036443, -0.002670, 0.061468, 0.900623,\n0.037329, -0.490393, -0.090120, 0.076720, -0.976740, -0.200230, 0.046042, 0.204078, -0.977871, -0.996783, -0.079808, 0.007381, 0.055761, 0.912636,\n0.097545, 0.000000, -0.490392, 0.227166, -0.000000, -0.973856, 0.909769, 0.356771, 0.212217, -0.347462, 0.934185, -0.081051, 0.319079, 0.591068,\n0.095671, -0.097545, -0.480970, 0.159676, -0.195003, -0.967718, 0.917851, 0.390187, 0.072822, -0.370733, 0.896694, -0.241863, 0.307086, 0.651912,\n0.187665, -0.097545, -0.453064, 0.345398, -0.195004, -0.917972, 0.901940, 0.339189, 0.267312, -0.270622, 0.915923, -0.296394, 0.337345, 0.675882,\n0.037329, 0.461940, -0.187665, 0.081206, 0.918409, -0.387209, 0.738308, 0.205550, 0.642379, -0.674035, 0.336788, 0.657457, 0.396472, 0.228455,\n0.054193, 0.415735, -0.272448, 0.113643, 0.812813, -0.571333, 0.814593, 0.252991, 0.521951, -0.588700, 0.518324, 0.620301, 0.377698, 0.286284,\n0.106304, 0.415735, -0.256640, 0.202041, 0.849271, -0.487769, 0.729025, 0.202156, 0.653954, -0.641871, 0.490990, 0.589008, 0.395951, 0.300965,\n0.095671, -0.097545, -0.480970, 0.159676, -0.195003, -0.967718, 0.917851, 0.390187, 0.072822, -0.370733, 0.896694, -0.241863, 0.307086, 0.651912,\n0.090120, -0.191342, -0.453064, 0.181442, -0.382715, -0.905874, 0.917940, 0.396380, 0.016395, -0.366507, 0.828481, -0.423428, 0.292765, 0.711739,\n0.187665, -0.097545, -0.453064, 0.345398, -0.195004, -0.917972, 0.901940, 0.339189, 0.267312, -0.270622, 0.915923, -0.296394, 0.337345, 0.675882,\n0.054193, 0.415735, -0.272448, 0.113643, 0.812813, -0.571333, 0.814593, 0.252991, 0.521951, -0.588700, 0.518324, 0.620301, 0.377698, 0.286284,\n0.068975, 0.353553, -0.346760, 0.125620, 0.692993, -0.709916, 0.852105, 0.291102, 0.434944, -0.517805, 0.656181, 0.548912, 0.363272, 0.346065,\n0.135299, 0.353553, -0.326641, 0.256646, 0.716972, -0.648139, 0.784086, 0.237640, 0.573355, -0.558550, 0.657303, 0.505939, 0.384563, 0.362880,\n0.090120, -0.191342, -0.453064, 0.181442, -0.382715, -0.905874, 0.917940, 0.396380, 0.016395, -0.366507, 0.828481, -0.423428, 0.292765, 0.711739,\n0.081106, -0.277785, -0.407746, 0.188908, -0.555401, -0.809842, 0.909904, 0.409148, -0.068350, -0.381060, 0.718607, -0.581719, 0.274182, 0.769656,\n0.176777, -0.191342, -0.426777, 0.354681, -0.382715, -0.853071, 0.910663, 0.348166, 0.222427, -0.228651, 0.849181, -0.476036, 0.324176, 0.737162,\n0.068975, 0.353553, -0.346760, 0.125620, 0.692993, -0.709916, 0.852105, 0.291102, 0.434944, -0.517805, 0.656181, 0.548912, 0.363272, 0.346065,\n0.081106, 0.277785, -0.407746, 0.188908, 0.555401, -0.809842, 0.860507, 0.303704, 0.409012, -0.473585, 0.773975, 0.420332, 0.351222, 0.406884,\n0.135299, 0.353553, -0.326641, 0.256646, 0.716972, -0.648139, 0.784086, 0.237640, 0.573355, -0.558550, 0.657303, 0.505939, 0.384563, 0.362880,\n0.081106, -0.277785, -0.407746, 0.188908, -0.555401, -0.809842, 0.909904, 0.409148, -0.068350, -0.381060, 0.718607, -0.581719, 0.274182, 0.769656,\n0.068975, -0.353553, -0.346760, 0.135711, -0.707136, -0.693932, 0.834724, 0.458897, -0.304383, -0.532345, 0.538668, -0.653028, 0.247735, 0.823865,\n0.135299, -0.353553, -0.326641, 0.268482, -0.707136, -0.654122, 0.902614, 0.421859, -0.085576, -0.339988, 0.565790, -0.751192, 0.278480, 0.852494,\n0.081106, 0.277785, -0.407746, 0.188908, 0.555401, -0.809842, 0.860507, 0.303704, 0.409012, -0.473585, 0.773975, 0.420332, 0.351222, 0.406884,\n0.090120, 0.191342, -0.453064, 0.181442, 0.382715, -0.905874, 0.888381, 0.331252, 0.317886, -0.417947, 0.863841, 0.281245, 0.340374, 0.468222,\n0.176777, 0.191342, -0.426777, 0.354681, 0.382715, -0.853071, 0.838031, 0.274468, 0.471563, -0.412065, 0.882985, 0.224812, 0.366006, 0.488197,\n0.000000, -0.191342, -0.461940, 0.001225, -0.382712, -0.923867, 0.884445, 0.431532, -0.177590, -0.477862, 0.811333, -0.336729, 0.263760, 0.683901,\n0.000000, -0.277785, -0.415735, 0.027286, -0.555402, -0.831134, 0.864465, 0.430611, -0.259374, -0.512060, 0.706308, -0.488798, 0.245498, 0.740897,\n0.090120, -0.191342, -0.453064, 0.181442, -0.382715, -0.905874, 0.917940, 0.396380, 0.016395, -0.366507, 0.828481, -0.423428, 0.292765, 0.711739,\n0.000000, 0.353553, -0.353553, -0.002278, 0.707136, -0.707074, 0.885216, 0.330340, 0.327517, -0.463666, 0.625729, 0.627278, 0.342092, 0.326013,\n0.000000, 0.277785, -0.415735, 0.027286, 0.555402, -0.831134, 0.897111, 0.353167, 0.265454, -0.441123, 0.752799, 0.488573, 0.327761, 0.385025,\n0.068975, 0.353553, -0.346760, 0.125620, 0.692993, -0.709916, 0.852105, 0.291102, 0.434944, -0.517805, 0.656181, 0.548912, 0.363272, 0.346065,\n0.000000, -0.277785, -0.415735, 0.027286, -0.555402, -0.831134, 0.864465, 0.430611, -0.259374, -0.512060, 0.706308, -0.488798, 0.245498, 0.740897,\n0.000000, -0.353553, -0.353553, -0.002278, -0.707136, -0.707073, 0.777385, 0.443514, -0.446058, -0.629127, 0.550624, -0.548646, 0.221035, 0.794554,\n0.068975, -0.353553, -0.346760, 0.135711, -0.707136, -0.693932, 0.834724, 0.458897, -0.304383, -0.532345, 0.538668, -0.653028, 0.247735, 0.823865,\n0.000000, 0.277785, -0.415735, 0.027286, 0.555402, -0.831134, 0.897111, 0.353167, 0.265454, -0.441123, 0.752799, 0.488573, 0.327761, 0.385025,\n0.000000, 0.191342, -0.461940, 0.001225, 0.382712, -0.923867, 0.912486, 0.377533, 0.157603, -0.408033, 0.843652, 0.348942, 0.315152, 0.444897,\n0.090120, 0.191342, -0.453064, 0.181442, 0.382715, -0.905874, 0.888381, 0.331252, 0.317886, -0.417947, 0.863841, 0.281245, 0.340374, 0.468222,\n0.000000, -0.353553, -0.353553, -0.002278, -0.707136, -0.707073, 0.777385, 0.443514, -0.446058, -0.629127, 0.550624, -0.548646, 0.221035, 0.794554,\n0.000000, -0.415735, -0.277785, -0.018239, -0.831353, -0.555445, 0.621602, 0.425696, -0.657566, -0.773857, 0.363506, -0.518660, 0.185712, 0.841768,\n0.054193, -0.415735, -0.272448, 0.090476, -0.831354, -0.548329, 0.704662, 0.442513, -0.554647, -0.688308, 0.345720, -0.637738, 0.206623, 0.870322,\n0.000000, 0.191342, -0.461940, 0.001225, 0.382712, -0.923867, 0.912486, 0.377533, 0.157603, -0.408033, 0.843652, 0.348942, 0.315152, 0.444897,\n0.000000, 0.097545, -0.490392, -0.032184, 0.195004, -0.980274, 0.915184, 0.399982, 0.049521, -0.403106, 0.894943, 0.191264, 0.303277, 0.505133,\n0.095671, 0.097545, -0.480970, 0.159676, 0.195003, -0.967718, 0.907052, 0.357868, 0.221779, -0.392058, 0.912195, 0.119124, 0.329902, 0.529720,\n0.000000, -0.415735, -0.277785, -0.018239, -0.831353, -0.555445, 0.621602, 0.425696, -0.657566, -0.773857, 0.363506, -0.518660, 0.185712, 0.841768,\n0.000000, -0.461940, -0.191342, 0.012560, -0.923819, -0.382623, 0.405169, 0.354534, -0.842700, -0.919889, 0.139328, -0.366594, 0.133142, 0.876209,\n0.054193, -0.415735, -0.272448, 0.090476, -0.831354, -0.548329, 0.704662, 0.442513, -0.554647, -0.688308, 0.345720, -0.637738, 0.206623, 0.870322,\n0.000000, 0.097545, -0.490392, -0.032184, 0.195004, -0.980274, 0.915184, 0.399982, 0.049521, -0.403106, 0.894943, 0.191264, 0.303277, 0.505133,\n0.000000, 0.000000, -0.500000, 0.032810, 0.000000, -0.999462, 0.915905, 0.400267, 0.030067, -0.400494, 0.916205, -0.013147, 0.291335, 0.565336,\n0.095671, 0.097545, -0.480970, 0.159676, 0.195003, -0.967718, 0.907052, 0.357868, 0.221779, -0.392058, 0.912195, 0.119124, 0.329902, 0.529720,\n0.000000, 0.490393, -0.097545, -0.005744, 0.976741, -0.214348, 0.692756, 0.158469, 0.703546, -0.721155, 0.144448, 0.677547, 0.415789, 0.165599,\n0.000000, 0.461940, -0.191342, 0.005745, 0.931233, -0.364380, 0.758912, 0.233220, 0.607998, -0.641928, 0.282829, 0.712696, 0.382751, 0.214243,\n0.019030, 0.490393, -0.095671, 0.036183, 0.976740, -0.211349, 0.659716, 0.135510, 0.739197, -0.754201, 0.165442, 0.635461, 0.423278, 0.174421,\n0.000000, -0.461940, -0.191342, 0.012560, -0.923819, -0.382623, 0.405169, 0.354534, -0.842700, -0.919889, 0.139328, -0.366594, 0.133142, 0.876209,\n0.000000, -0.490393, -0.097545, -0.005744, -0.976741, -0.214348, 0.034559, 0.214029, -0.976216, -0.999964, 0.006941, -0.004830, 0.063552, 0.887927,\n0.019030, -0.490393, -0.095671, 0.036183, -0.976740, -0.211349, 0.052590, 0.213056, -0.975624, -0.999332, -0.036443, -0.002670, 0.061468, 0.900623,\n0.000000, 0.000000, -0.500000, 0.032810, 0.000000, -0.999462, 0.915905, 0.400267, 0.030067, -0.400494, 0.916205, -0.013147, 0.291335, 0.565336,\n0.000000, -0.097545, -0.490392, -0.032184, -0.195004, -0.980274, 0.898724, 0.423503, -0.113753, -0.441786, 0.882545, -0.161058, 0.278511, 0.625101,\n0.095671, -0.097545, -0.480970, 0.159676, -0.195003, -0.967718, 0.917851, 0.390187, 0.072822, -0.370733, 0.896694, -0.241863, 0.307086, 0.651912,\n0.000000, 0.461940, -0.191342, 0.005745, 0.931233, -0.364380, 0.758912, 0.233220, 0.607998, -0.641928, 0.282829, 0.712696, 0.382751, 0.214243,\n0.000000, 0.415735, -0.277785, -0.008963, 0.839191, -0.543763, 0.843305, 0.298564, 0.446874, -0.530292, 0.457033, 0.714081, 0.359606, 0.268628,\n0.037329, 0.461940, -0.187665, 0.081206, 0.918409, -0.387209, 0.738308, 0.205550, 0.642379, -0.674035, 0.336788, 0.657457, 0.396472, 0.228455,\n0.000000, -0.097545, -0.490392, -0.032184, -0.195004, -0.980274, 0.898724, 0.423503, -0.113753, -0.441786, 0.882545, -0.161058, 0.278511, 0.625101,\n0.000000, -0.191342, -0.461940, 0.001225, -0.382712, -0.923867, 0.884445, 0.431532, -0.177590, -0.477862, 0.811333, -0.336729, 0.263760, 0.683901,\n0.095671, -0.097545, -0.480970, 0.159676, -0.195003, -0.967718, 0.917851, 0.390187, 0.072822, -0.370733, 0.896694, -0.241863, 0.307086, 0.651912,\n0.000000, 0.415735, -0.277785, -0.008963, 0.839191, -0.543763, 0.843305, 0.298564, 0.446874, -0.530292, 0.457033, 0.714081, 0.359606, 0.268628,\n0.000000, 0.353553, -0.353553, -0.002278, 0.707136, -0.707074, 0.885216, 0.330340, 0.327517, -0.463666, 0.625729, 0.627278, 0.342092, 0.326013,\n0.054193, 0.415735, -0.272448, 0.113643, 0.812813, -0.571333, 0.814593, 0.252991, 0.521951, -0.588700, 0.518324, 0.620301, 0.377698, 0.286284,\n-0.019030, 0.490393, -0.095671, -0.047449, 0.976740, -0.209109, 0.720722, 0.178423, 0.669869, -0.688169, 0.119771, 0.715597, 0.409185, 0.155461,\n-0.037329, 0.461940, -0.187665, -0.073153, 0.918409, -0.388811, 0.820704, 0.276940, 0.499749, -0.577847, 0.278718, 0.767079, 0.369501, 0.197772,\n0.000000, 0.490393, -0.097545, -0.005744, 0.976741, -0.214348, 0.692756, 0.158469, 0.703546, -0.721155, 0.144448, 0.677547, 0.415789, 0.165599,\n-0.037329, -0.461940, -0.187665, -0.062326, -0.923818, -0.377723, 0.293765, 0.344714, -0.891557, -0.966939, 0.149657, -0.206475, 0.122716, 0.853506,\n-0.019030, -0.490393, -0.095671, -0.047449, -0.976740, -0.209109, 0.005107, 0.209105, -0.977880, -0.998869, 0.047031, 0.006975, 0.062791, 0.875124,\n0.000000, -0.490393, -0.097545, -0.005744, -0.976741, -0.214348, 0.034559, 0.214029, -0.976216, -0.999964, 0.006941, -0.004830, 0.063552, 0.887927,\n-0.097545, 0.000000, -0.490392, -0.162803, 0.000000, -0.986659, 0.889654, 0.432396, -0.146796, -0.424493, 0.902718, 0.070043, 0.264451, 0.537476,\n-0.095671, -0.097545, -0.480970, -0.222807, -0.195001, -0.955160, 0.850108, 0.440699, -0.288273, -0.479884, 0.874796, -0.066654, 0.251234, 0.596552,\n0.000000, -0.097545, -0.490392, -0.032184, -0.195004, -0.980274, 0.898724, 0.423503, -0.113753, -0.441786, 0.882545, -0.161058, 0.278511, 0.625101,\n-0.037329, 0.461940, -0.187665, -0.073153, 0.918409, -0.388811, 0.820704, 0.276940, 0.499749, -0.577847, 0.278718, 0.767079, 0.369501, 0.197772,\n-0.054193, 0.415735, -0.272448, -0.123852, 0.820324, -0.558327, 0.891297, 0.339289, 0.300788, -0.458808, 0.451562, 0.765236, 0.341615, 0.248277,\n0.000000, 0.415735, -0.277785, -0.008963, 0.839191, -0.543763, 0.843305, 0.298564, 0.446874, -0.530292, 0.457033, 0.714081, 0.359606, 0.268628,\n-0.095671, -0.097545, -0.480970, -0.222807, -0.195001, -0.955160, 0.850108, 0.440699, -0.288273, -0.479884, 0.874796, -0.066654, 0.251234, 0.596552,\n-0.090120, -0.191342, -0.453064, -0.179030, -0.382715, -0.906354, 0.828764, 0.437784, -0.348562, -0.538512, 0.809104, -0.235279, 0.236558, 0.654833,\n0.000000, -0.097545, -0.490392, -0.032184, -0.195004, -0.980274, 0.898724, 0.423503, -0.113753, -0.441786, 0.882545, -0.161058, 0.278511, 0.625101,\n-0.054193, 0.415735, -0.272448, -0.123852, 0.820324, -0.558327, 0.891297, 0.339289, 0.300788, -0.458808, 0.451562, 0.765236, 0.341615, 0.248277,\n-0.068975, 0.353553, -0.346760, -0.140171, 0.707135, -0.693046, 0.904749, 0.375819, 0.200471, -0.400546, 0.599626, 0.692828, 0.320886, 0.303136,\n0.000000, 0.415735, -0.277785, -0.008963, 0.839191, -0.543763, 0.843305, 0.298564, 0.446874, -0.530292, 0.457033, 0.714081, 0.359606, 0.268628,\n-0.090120, -0.191342, -0.453064, -0.179030, -0.382715, -0.906354, 0.828764, 0.437784, -0.348562, -0.538512, 0.809104, -0.235279, 0.236558, 0.654833,\n-0.081106, -0.277785, -0.407746, -0.135384, -0.555402, -0.820488, 0.793047, 0.435663, -0.425763, -0.601789, 0.703956, -0.377222, 0.219119, 0.711578,\n0.000000, -0.191342, -0.461940, 0.001225, -0.382712, -0.923867, 0.884445, 0.431532, -0.177590, -0.477862, 0.811333, -0.336729, 0.263760, 0.683901,\n-0.068975, 0.353553, -0.346760, -0.140171, 0.707135, -0.693046, 0.904749, 0.375819, 0.200471, -0.400546, 0.599626, 0.692828, 0.320886, 0.303136,\n-0.081106, 0.277785, -0.407746, -0.135383, 0.555402, -0.820488, 0.911657, 0.394132, 0.116368, -0.387847, 0.732320, 0.559716, 0.304332, 0.360378,\n0.000000, 0.353553, -0.353553, -0.002278, 0.707136, -0.707074, 0.885216, 0.330340, 0.327517, -0.463666, 0.625729, 0.627278, 0.342092, 0.326013,\n-0.081106, -0.277785, -0.407746, -0.135384, -0.555402, -0.820488, 0.793047, 0.435663, -0.425763, -0.601789, 0.703956, -0.377222, 0.219119, 0.711578,\n-0.068975, -0.353553, -0.346760, -0.140173, -0.707136, -0.693044, 0.689218, 0.432850, -0.581050, -0.710846, 0.559118, -0.426714, 0.196860, 0.765537,\n0.000000, -0.353553, -0.353553, -0.002278, -0.707136, -0.707073, 0.777385, 0.443514, -0.446058, -0.629127, 0.550624, -0.548646, 0.221035, 0.794554,\n-0.081106, 0.277785, -0.407746, -0.135383, 0.555402, -0.820488, 0.911657, 0.394132, 0.116368, -0.387847, 0.732320, 0.559716, 0.304332, 0.360378,\n-0.090120, 0.191342, -0.453064, -0.179030, 0.382714, -0.906354, 0.910722, 0.412984, -0.005508, -0.372236, 0.826407, 0.422483, 0.290147, 0.418927,\n0.000000, 0.191342, -0.461940, 0.001225, 0.382712, -0.923867, 0.912486, 0.377533, 0.157603, -0.408033, 0.843652, 0.348942, 0.315152, 0.444897,\n-0.068975, -0.353553, -0.346760, -0.140173, -0.707136, -0.693044, 0.689218, 0.432850, -0.581050, -0.710846, 0.559118, -0.426714, 0.196860, 0.765537,\n-0.054193, -0.415735, -0.272447, -0.126245, -0.831354, -0.541214, 0.533240, 0.403180, -0.743707, -0.831103, 0.386509, -0.399847, 0.166387, 0.814368,\n0.000000, -0.415735, -0.277785, -0.018239, -0.831353, -0.555445, 0.621602, 0.425696, -0.657566, -0.773857, 0.363506, -0.518660, 0.185712, 0.841768,\n-0.090120, 0.191342, -0.453064, -0.179030, 0.382714, -0.906354, 0.910722, 0.412984, -0.005508, -0.372236, 0.826407, 0.422483, 0.290147, 0.418927,\n-0.095671, 0.097545, -0.480970, -0.222807, 0.195001, -0.955160, 0.895121, 0.429028, -0.121213, -0.386845, 0.881660, 0.270234, 0.277149, 0.478121,\n0.000000, 0.097545, -0.490392, -0.032184, 0.195004, -0.980274, 0.915184, 0.399982, 0.049521, -0.403106, 0.894943, 0.191264, 0.303277, 0.505133,\n-0.054193, -0.415735, -0.272447, -0.126245, -0.831354, -0.541214, 0.533240, 0.403180, -0.743707, -0.831103, 0.386509, -0.399847, 0.166387, 0.814368,\n-0.037329, -0.461940, -0.187665, -0.062326, -0.923818, -0.377723, 0.293765, 0.344714, -0.891557, -0.966939, 0.149657, -0.206475, 0.122716, 0.853506,\n0.000000, -0.415735, -0.277785, -0.018239, -0.831353, -0.555445, 0.621602, 0.425696, -0.657566, -0.773857, 0.363506, -0.518660, 0.185712, 0.841768,\n-0.095671, 0.097545, -0.480970, -0.222807, 0.195001, -0.955160, 0.895121, 0.429028, -0.121213, -0.386845, 0.881660, 0.270234, 0.277149, 0.478121,\n-0.097545, 0.000000, -0.490392, -0.162803, 0.000000, -0.986659, 0.889654, 0.432396, -0.146796, -0.424493, 0.902718, 0.070043, 0.264451, 0.537476,\n0.000000, 0.097545, -0.490392, -0.032184, 0.195004, -0.980274, 0.915184, 0.399982, 0.049521, -0.403106, 0.894943, 0.191264, 0.303277, 0.505133,\n-0.159095, 0.277785, -0.384089, -0.292849, 0.555401, -0.778311, 0.907581, 0.417621, -0.043475, -0.307206, 0.716186, 0.626659, 0.280665, 0.333544,\n-0.176777, 0.191342, -0.426777, -0.352417, 0.382711, -0.854011, 0.883472, 0.437048, -0.168719, -0.309846, 0.813373, 0.492361, 0.265072, 0.391051,\n-0.090120, 0.191342, -0.453064, -0.179030, 0.382714, -0.906354, 0.910722, 0.412984, -0.005508, -0.372236, 0.826407, 0.422483, 0.290147, 0.418927,\n-0.135299, -0.353553, -0.326641, -0.272686, -0.707137, -0.652380, 0.576754, 0.422583, -0.699127, -0.768468, 0.568069, -0.294542, 0.174219, 0.737534,\n-0.106304, -0.415735, -0.256640, -0.229404, -0.831354, -0.506186, 0.439662, 0.375467, -0.815918, -0.865682, 0.412003, -0.284340, 0.147889, 0.788507,\n-0.054193, -0.415735, -0.272447, -0.126245, -0.831354, -0.541214, 0.533240, 0.403180, -0.743707, -0.831103, 0.386509, -0.399847, 0.166387, 0.814368,\n-0.176777, 0.191342, -0.426777, -0.352417, 0.382711, -0.854011, 0.883472, 0.437048, -0.168719, -0.309846, 0.813373, 0.492361, 0.265072, 0.391051,\n-0.187665, 0.097545, -0.453063, -0.391219, 0.214340, -0.894989, 0.854975, 0.444502, -0.267274, -0.339559, 0.870264, 0.356847, 0.251210, 0.449541,\n-0.095671, 0.097545, -0.480970, -0.222807, 0.195001, -0.955160, 0.895121, 0.429028, -0.121213, -0.386845, 0.881660, 0.270234, 0.277149, 0.478121,\n-0.106304, -0.415735, -0.256640, -0.229404, -0.831354, -0.506186, 0.439662, 0.375467, -0.815918, -0.865682, 0.412003, -0.284340, 0.147889, 0.788507,\n-0.073223, -0.461940, -0.176777, -0.134816, -0.923819, -0.358306, 0.278951, 0.311597, -0.908347, -0.957085, 0.215029, -0.194297, 0.111219, 0.832233,\n-0.054193, -0.415735, -0.272447, -0.126245, -0.831354, -0.541214, 0.533240, 0.403180, -0.743707, -0.831103, 0.386509, -0.399847, 0.166387, 0.814368,\n-0.187665, 0.097545, -0.453063, -0.391219, 0.214340, -0.894989, 0.854975, 0.444502, -0.267274, -0.339559, 0.870264, 0.356847, 0.251210, 0.449541,\n-0.191342, 0.000000, -0.461939, -0.369614, 0.014067, -0.929079, 0.834379, 0.445033, -0.325202, -0.406693, 0.896575, 0.175370, 0.238072, 0.508437,\n-0.095671, 0.097545, -0.480970, -0.222807, 0.195001, -0.955160, 0.895121, 0.429028, -0.121213, -0.386845, 0.881660, 0.270234, 0.277149, 0.478121,\n-0.037329, 0.490393, -0.090120, -0.087334, 0.976741, -0.195833, 0.744510, 0.194610, 0.638617, -0.657136, 0.091260, 0.748227, 0.403723, 0.144215,\n-0.073223, 0.461940, -0.176777, -0.134132, 0.931233, -0.338842, 0.826294, 0.293856, 0.480508, -0.550138, 0.214426, 0.807075, 0.356819, 0.179254,\n-0.019030, 0.490393, -0.095671, -0.047449, 0.976740, -0.209109, 0.720722, 0.178423, 0.669869, -0.688169, 0.119771, 0.715597, 0.409185, 0.155461,\n-0.073223, -0.461940, -0.176777, -0.134816, -0.923819, -0.358306, 0.278951, 0.311597, -0.908347, -0.957085, 0.215029, -0.194297, 0.111219, 0.832233,\n-0.037329, -0.490393, -0.090120, -0.087334, -0.976741, -0.195833, -0.029583, 0.199040, -0.979545, -0.996041, 0.082342, 0.033505, 0.059830, 0.862660,\n-0.019030, -0.490393, -0.095671, -0.047449, -0.976740, -0.209109, 0.005107, 0.209105, -0.977880, -0.998869, 0.047031, 0.006975, 0.062791, 0.875124,\n-0.191342, 0.000000, -0.461939, -0.369614, 0.014067, -0.929079, 0.834379, 0.445033, -0.325202, -0.406693, 0.896575, 0.175370, 0.238072, 0.508437,\n-0.187665, -0.097545, -0.453063, -0.404872, -0.195001, -0.893338, 0.776134, 0.443237, -0.448505, -0.485196, 0.873920, 0.029134, 0.224815, 0.567268,\n-0.095671, -0.097545, -0.480970, -0.222807, -0.195001, -0.955160, 0.850108, 0.440699, -0.288273, -0.479884, 0.874796, -0.066654, 0.251234, 0.596552,\n-0.073223, 0.461940, -0.176777, -0.134132, 0.931233, -0.338842, 0.826294, 0.293856, 0.480508, -0.550138, 0.214426, 0.807075, 0.356819, 0.179254,\n-0.106304, 0.415735, -0.256640, -0.202041, 0.849271, -0.487769, 0.890927, 0.366210, 0.268587, -0.400183, 0.382977, 0.832576, 0.323603, 0.225532,\n-0.037329, 0.461940, -0.187665, -0.073153, 0.918409, -0.388811, 0.820704, 0.276940, 0.499749, -0.577847, 0.278718, 0.767079, 0.369501, 0.197772,\n-0.187665, -0.097545, -0.453063, -0.404872, -0.195001, -0.893338, 0.776134, 0.443237, -0.448505, -0.485196, 0.873920, 0.029134, 0.224815, 0.567268,\n-0.176777, -0.191342, -0.426777, -0.352417, -0.382711, -0.854011, 0.746183, 0.435847, -0.503238, -0.571178, 0.810838, -0.127660, 0.210574, 0.625544,\n-0.095671, -0.097545, -0.480970, -0.222807, -0.195001, -0.955160, 0.850108, 0.440699, -0.288273, -0.479884, 0.874796, -0.066654, 0.251234, 0.596552,\n-0.106304, 0.415735, -0.256640, -0.202041, 0.849271, -0.487769, 0.890927, 0.366210, 0.268587, -0.400183, 0.382977, 0.832576, 0.323603, 0.225532,\n-0.135299, 0.353553, -0.326641, -0.276827, 0.716973, -0.639779, 0.909646, 0.410108, 0.065994, -0.304417, 0.566071, 0.766090, 0.299422, 0.277880,\n-0.054193, 0.415735, -0.272448, -0.123852, 0.820324, -0.558327, 0.891297, 0.339289, 0.300788, -0.458808, 0.451562, 0.765236, 0.341615, 0.248277,\n-0.176777, -0.191342, -0.426777, -0.352417, -0.382711, -0.854011, 0.746183, 0.435847, -0.503238, -0.571178, 0.810838, -0.127660, 0.210574, 0.625544,\n-0.159095, -0.277785, -0.384089, -0.292849, -0.555401, -0.778311, 0.702292, 0.427450, -0.569274, -0.654524, 0.709832, -0.260262, 0.194249, 0.682630,\n-0.090120, -0.191342, -0.453064, -0.179030, -0.382715, -0.906354, 0.828764, 0.437784, -0.348562, -0.538512, 0.809104, -0.235279, 0.236558, 0.654833,\n-0.135299, 0.353553, -0.326641, -0.276827, 0.716973, -0.639779, 0.909646, 0.410108, 0.065994, -0.304417, 0.566071, 0.766090, 0.299422, 0.277880,\n-0.159095, 0.277785, -0.384089, -0.292849, 0.555401, -0.778311, 0.907581, 0.417621, -0.043475, -0.307206, 0.716186, 0.626659, 0.280665, 0.333544,\n-0.068975, 0.353553, -0.346760, -0.140171, 0.707135, -0.693046, 0.904749, 0.375819, 0.200471, -0.400546, 0.599626, 0.692828, 0.320886, 0.303136,\n-0.159095, -0.277785, -0.384089, -0.292849, -0.555401, -0.778311, 0.702292, 0.427450, -0.569274, -0.654524, 0.709832, -0.260262, 0.194249, 0.682630,\n-0.135299, -0.353553, -0.326641, -0.272686, -0.707137, -0.652380, 0.576754, 0.422583, -0.699127, -0.768468, 0.568069, -0.294542, 0.174219, 0.737534,\n-0.068975, -0.353553, -0.346760, -0.140173, -0.707136, -0.693044, 0.689218, 0.432850, -0.581050, -0.710846, 0.559118, -0.426714, 0.196860, 0.765537,\n-0.272447, -0.097545, -0.407746, -0.558298, -0.214342, -0.801474, 0.681722, 0.432038, -0.590422, -0.476278, 0.873807, 0.098084, 0.198820, 0.538176,\n-0.256640, -0.191342, -0.384089, -0.512253, -0.382709, -0.768850, 0.644036, 0.421066, -0.638688, -0.572971, 0.819163, -0.026007, 0.185294, 0.596918,\n-0.187665, -0.097545, -0.453063, -0.404872, -0.195001, -0.893338, 0.776134, 0.443237, -0.448505, -0.485196, 0.873920, 0.029134, 0.224815, 0.567268,\n-0.154329, 0.415735, -0.230970, -0.323634, 0.812812, -0.484353, 0.918254, 0.393264, 0.046397, -0.251390, 0.419638, 0.872185, 0.305371, 0.200714,\n-0.196424, 0.353553, -0.293969, -0.413158, 0.692995, -0.590812, 0.894119, 0.431785, -0.118799, -0.194508, 0.566648, 0.800672, 0.277352, 0.250728,\n-0.135299, 0.353553, -0.326641, -0.276827, 0.716973, -0.639779, 0.909646, 0.410108, 0.065994, -0.304417, 0.566071, 0.766090, 0.299422, 0.277880,\n-0.256640, -0.191342, -0.384089, -0.512253, -0.382709, -0.768850, 0.644036, 0.421066, -0.638688, -0.572971, 0.819163, -0.026007, 0.185294, 0.596918,\n-0.230970, -0.277785, -0.345671, -0.439067, -0.555400, -0.706223, 0.596184, 0.407948, -0.691479, -0.675894, 0.722059, -0.147644, 0.170279, 0.654825,\n-0.176777, -0.191342, -0.426777, -0.352417, -0.382711, -0.854011, 0.746183, 0.435847, -0.503238, -0.571178, 0.810838, -0.127660, 0.210574, 0.625544,\n-0.196424, 0.353553, -0.293969, -0.413158, 0.692995, -0.590812, 0.894119, 0.431785, -0.118799, -0.194508, 0.566648, 0.800672, 0.277352, 0.250728,\n-0.230970, 0.277785, -0.345671, -0.439067, 0.555400, -0.706223, 0.873457, 0.447995, -0.190718, -0.209973, 0.700842, 0.681712, 0.256377, 0.305165,\n-0.135299, 0.353553, -0.326641, -0.276827, 0.716973, -0.639779, 0.909646, 0.410108, 0.065994, -0.304417, 0.566071, 0.766090, 0.299422, 0.277880,\n-0.230970, -0.277785, -0.345671, -0.439067, -0.555400, -0.706223, 0.596184, 0.407948, -0.691479, -0.675894, 0.722059, -0.147644, 0.170279, 0.654825,\n-0.196424, -0.353553, -0.293969, -0.394721, -0.707137, -0.586645, 0.482177, 0.384077, -0.787394, -0.782293, 0.593524, -0.189067, 0.152459, 0.711126,\n-0.135299, -0.353553, -0.326641, -0.272686, -0.707137, -0.652380, 0.576754, 0.422583, -0.699127, -0.768468, 0.568069, -0.294542, 0.174219, 0.737534,\n-0.230970, 0.277785, -0.345671, -0.439067, 0.555400, -0.706223, 0.873457, 0.447995, -0.190718, -0.209973, 0.700842, 0.681712, 0.256377, 0.305165,\n-0.256640, 0.191342, -0.384089, -0.512253, 0.382709, -0.768850, 0.830430, 0.449048, -0.329760, -0.221181, 0.806241, 0.548685, 0.239550, 0.362041,\n-0.176777, 0.191342, -0.426777, -0.352417, 0.382711, -0.854011, 0.883472, 0.437048, -0.168719, -0.309846, 0.813373, 0.492361, 0.265072, 0.391051,\n-0.196424, -0.353553, -0.293969, -0.394721, -0.707137, -0.586645, 0.482177, 0.384077, -0.787394, -0.782293, 0.593524, -0.189067, 0.152459, 0.711126,\n-0.154329, -0.415735, -0.230970, -0.323751, -0.831354, -0.451704, 0.341020, 0.342794, -0.875327, -0.881708, 0.438268, -0.174676, 0.129782, 0.764530,\n-0.106304, -0.415735, -0.256640, -0.229404, -0.831354, -0.506186, 0.439662, 0.375467, -0.815918, -0.865682, 0.412003, -0.284340, 0.147889, 0.788507,\n-0.256640, 0.191342, -0.384089, -0.512253, 0.382709, -0.768850, 0.830430, 0.449048, -0.329760, -0.221181, 0.806241, 0.548685, 0.239550, 0.362041,\n-0.272447, 0.097545, -0.407746, -0.544372, 0.195104, -0.815839, 0.789456, 0.447951, -0.419642, -0.282887, 0.872904, 0.397508, 0.225087, 0.420258,\n-0.187665, 0.097545, -0.453063, -0.391219, 0.214340, -0.894989, 0.854975, 0.444502, -0.267274, -0.339559, 0.870264, 0.356847, 0.251210, 0.449541,\n-0.154329, -0.415735, -0.230970, -0.323751, -0.831354, -0.451704, 0.341020, 0.342794, -0.875327, -0.881708, 0.438268, -0.174676, 0.129782, 0.764530,\n-0.106304, -0.461940, -0.159095, -0.202130, -0.923819, -0.325118, 0.205477, 0.284579, -0.936373, -0.962027, 0.249471, -0.110763, 0.098921, 0.812641,\n-0.106304, -0.415735, -0.256640, -0.229404, -0.831354, -0.506186, 0.439662, 0.375467, -0.815918, -0.865682, 0.412003, -0.284340, 0.147889, 0.788507,\n-0.272447, 0.097545, -0.407746, -0.544372, 0.195104, -0.815839, 0.789456, 0.447951, -0.419642, -0.282887, 0.872904, 0.397508, 0.225087, 0.420258,\n-0.277785, 0.000000, -0.415734, -0.567155, -0.014068, -0.823491, 0.735303, 0.441781, -0.513965, -0.369902, 0.897691, 0.239424, 0.211808, 0.479137,\n-0.191342, 0.000000, -0.461939, -0.369614, 0.014067, -0.929079, 0.834379, 0.445033, -0.325202, -0.406693, 0.896575, 0.175370, 0.238072, 0.508437,\n-0.054193, 0.490393, -0.081106, -0.123861, 0.976740, -0.175033, 0.764866, 0.206349, 0.610246, -0.629681, 0.058961, 0.774613, 0.399731, 0.132109,\n-0.106304, 0.461940, -0.159095, -0.216376, 0.918409, -0.331219, 0.872556, 0.334106, 0.356398, -0.458757, 0.203827, 0.864868, 0.344837, 0.158918,\n-0.037329, 0.490393, -0.090120, -0.087334, 0.976741, -0.195833, 0.744510, 0.194610, 0.638617, -0.657136, 0.091260, 0.748227, 0.403723, 0.144215,\n-0.106304, -0.461940, -0.159095, -0.202130, -0.923819, -0.325118, 0.205477, 0.284579, -0.936373, -0.962027, 0.249471, -0.110763, 0.098921, 0.812641,\n-0.054193, -0.490393, -0.081106, -0.123861, -0.976741, -0.175033, -0.067419, 0.184267, -0.980561, -0.990961, 0.112595, 0.072931, 0.055167, 0.850885,\n-0.037329, -0.490393, -0.090120, -0.087334, -0.976741, -0.195833, -0.029583, 0.199040, -0.979545, -0.996041, 0.082342, 0.033505, 0.059830, 0.862660,\n-0.277785, 0.000000, -0.415734, -0.567155, -0.014068, -0.823491, 0.735303, 0.441781, -0.513965, -0.369902, 0.897691, 0.239424, 0.211808, 0.479137,\n-0.272447, -0.097545, -0.407746, -0.558298, -0.214342, -0.801474, 0.681722, 0.432038, -0.590422, -0.476278, 0.873807, 0.098084, 0.198820, 0.538176,\n-0.187665, -0.097545, -0.453063, -0.404872, -0.195001, -0.893338, 0.776134, 0.443237, -0.448505, -0.485196, 0.873920, 0.029134, 0.224815, 0.567268,\n-0.106304, 0.461940, -0.159095, -0.216376, 0.918409, -0.331219, 0.872556, 0.334106, 0.356398, -0.458757, 0.203827, 0.864868, 0.344837, 0.158918,\n-0.154329, 0.415735, -0.230970, -0.323634, 0.812812, -0.484353, 0.918254, 0.393264, 0.046397, -0.251390, 0.419638, 0.872185, 0.305371, 0.200714,\n-0.106304, 0.415735, -0.256640, -0.202041, 0.849271, -0.487769, 0.890927, 0.366210, 0.268587, -0.400183, 0.382977, 0.832576, 0.323603, 0.225532,\n-0.196424, -0.415735, -0.196424, -0.405652, -0.831354, -0.379865, 0.233381, 0.307611, -0.922447, -0.886823, 0.458619, -0.056686, 0.111798, 0.742764,\n-0.135299, -0.461940, -0.135299, -0.256643, -0.929163, -0.266065, 0.100015, 0.248275, -0.963512, -0.962627, 0.270377, -0.015682, 0.085985, 0.794966,\n-0.154329, -0.415735, -0.230970, -0.323751, -0.831354, -0.451704, 0.341020, 0.342794, -0.875327, -0.881708, 0.438268, -0.174676, 0.129782, 0.764530,\n-0.346760, 0.097545, -0.346760, -0.682044, 0.175715, -0.709887, 0.700637, 0.435191, -0.565435, -0.213770, 0.880404, 0.423309, 0.198358, 0.391169,\n-0.353553, 0.000000, -0.353553, -0.729930, 0.000000, -0.683522, 0.619322, 0.423115, -0.661372, -0.288938, 0.906260, 0.308556, 0.185261, 0.450486,\n-0.277785, 0.000000, -0.415734, -0.567155, -0.014068, -0.823491, 0.735303, 0.441781, -0.513965, -0.369902, 0.897691, 0.239424, 0.211808, 0.479137,\n-0.068975, 0.490393, -0.068975, -0.155628, 0.976741, -0.147506, 0.781762, 0.213065, 0.586047, -0.607565, 0.023093, 0.793934, 0.397636, 0.119453,\n-0.135299, 0.461940, -0.135299, -0.272685, 0.923888, -0.268466, 0.884277, 0.350616, 0.308420, -0.408884, 0.141302, 0.901581, 0.333754, 0.137005,\n-0.054193, 0.490393, -0.081106, -0.123861, 0.976740, -0.175033, 0.764866, 0.206349, 0.610246, -0.629681, 0.058961, 0.774613, 0.399731, 0.132109,\n-0.135299, -0.461940, -0.135299, -0.256643, -0.929163, -0.266065, 0.100015, 0.248275, -0.963512, -0.962627, 0.270377, -0.015682, 0.085985, 0.794966,\n-0.068975, -0.490393, -0.068975, -0.137937, -0.980789, -0.137937, -0.127161, 0.155652, -0.979593, -0.984645, 0.120749, 0.126070, 0.049184, 0.840082,\n-0.054193, -0.490393, -0.081106, -0.123861, -0.976741, -0.175033, -0.067419, 0.184267, -0.980561, -0.990961, 0.112595, 0.072931, 0.055167, 0.850885,\n-0.353553, 0.000000, -0.353553, -0.729930, 0.000000, -0.683522, 0.619322, 0.423115, -0.661372, -0.288938, 0.906260, 0.308556, 0.185261, 0.450486,\n-0.346760, -0.097545, -0.346760, -0.693076, -0.195103, -0.693960, 0.583791, 0.412832, -0.699113, -0.425191, 0.888027, 0.174986, 0.172843, 0.510158,\n-0.277785, 0.000000, -0.415734, -0.567155, -0.014068, -0.823491, 0.735303, 0.441781, -0.513965, -0.369902, 0.897691, 0.239424, 0.211808, 0.479137,\n-0.135299, 0.461940, -0.135299, -0.272685, 0.923888, -0.268466, 0.884277, 0.350616, 0.308420, -0.408884, 0.141302, 0.901581, 0.333754, 0.137005,\n-0.196424, 0.415735, -0.196424, -0.394718, 0.831489, -0.390926, 0.904146, 0.427203, -0.004267, -0.178287, 0.348073, 0.920358, 0.286589, 0.174154,\n-0.106304, 0.461940, -0.159095, -0.216376, 0.918409, -0.331219, 0.872556, 0.334106, 0.356398, -0.458757, 0.203827, 0.864868, 0.344837, 0.158918,\n-0.346760, -0.097545, -0.346760, -0.693076, -0.195103, -0.693960, 0.583791, 0.412832, -0.699113, -0.425191, 0.888027, 0.174986, 0.172843, 0.510158,\n-0.326641, -0.191342, -0.326641, -0.652404, -0.382712, -0.654142, 0.524934, 0.394366, -0.754267, -0.550111, 0.832832, 0.061393, 0.160290, 0.569759,\n-0.272447, -0.097545, -0.407746, -0.558298, -0.214342, -0.801474, 0.681722, 0.432038, -0.590422, -0.476278, 0.873807, 0.098084, 0.198820, 0.538176,\n-0.196424, 0.415735, -0.196424, -0.394718, 0.831489, -0.390926, 0.904146, 0.427203, -0.004267, -0.178287, 0.348073, 0.920358, 0.286589, 0.174154,\n-0.250000, 0.353553, -0.250000, -0.501585, 0.707137, -0.498368, 0.862463, 0.453755, -0.224195, -0.070115, 0.540952, 0.838126, 0.254155, 0.222217,\n-0.154329, 0.415735, -0.230970, -0.323634, 0.812812, -0.484353, 0.918254, 0.393264, 0.046397, -0.251390, 0.419638, 0.872185, 0.305371, 0.200714,\n-0.326641, -0.191342, -0.326641, -0.652404, -0.382712, -0.654142, 0.524934, 0.394366, -0.754267, -0.550111, 0.832832, 0.061393, 0.160290, 0.569759,\n-0.293969, -0.277785, -0.293969, -0.568407, -0.555401, -0.606996, 0.477308, 0.378320, -0.793127, -0.672364, 0.738768, -0.046353, 0.146753, 0.628844,\n-0.256640, -0.191342, -0.384089, -0.512253, -0.382709, -0.768850, 0.644036, 0.421066, -0.638688, -0.572971, 0.819163, -0.026007, 0.185294, 0.596918,\n-0.250000, 0.353553, -0.250000, -0.501585, 0.707137, -0.498368, 0.862463, 0.453755, -0.224195, -0.070115, 0.540952, 0.838126, 0.254155, 0.222217,\n-0.293969, 0.277785, -0.293969, -0.568407, 0.555401, -0.606996, 0.818212, 0.458957, -0.346249, -0.086044, 0.693592, 0.715211, 0.230950, 0.275958,\n-0.196424, 0.353553, -0.293969, -0.413158, 0.692995, -0.590812, 0.894119, 0.431785, -0.118799, -0.194508, 0.566648, 0.800672, 0.277352, 0.250728,\n-0.293969, -0.277785, -0.293969, -0.568407, -0.555401, -0.606996, 0.477308, 0.378320, -0.793127, -0.672364, 0.738768, -0.046353, 0.146753, 0.628844,\n-0.250000, -0.353553, -0.250000, -0.501585, -0.707137, -0.498368, 0.366360, 0.348243, -0.862848, -0.783933, 0.615157, -0.083856, 0.131139, 0.686825,\n-0.196424, -0.353553, -0.293969, -0.394721, -0.707137, -0.586645, 0.482177, 0.384077, -0.787394, -0.782293, 0.593524, -0.189067, 0.152459, 0.711126,\n-0.293969, 0.277785, -0.293969, -0.568407, 0.555401, -0.606996, 0.818212, 0.458957, -0.346249, -0.086044, 0.693592, 0.715211, 0.230950, 0.275958,\n-0.326641, 0.191342, -0.326641, -0.665784, 0.369646, -0.648147, 0.739250, 0.444604, -0.505803, -0.105249, 0.813449, 0.572034, 0.213116, 0.332732,\n-0.256640, 0.191342, -0.384089, -0.512253, 0.382709, -0.768850, 0.830430, 0.449048, -0.329760, -0.221181, 0.806241, 0.548685, 0.239550, 0.362041,\n-0.250000, -0.353553, -0.250000, -0.501585, -0.707137, -0.498368, 0.366360, 0.348243, -0.862848, -0.783933, 0.615157, -0.083856, 0.131139, 0.686825,\n-0.196424, -0.415735, -0.196424, -0.405652, -0.831354, -0.379865, 0.233381, 0.307611, -0.922447, -0.886823, 0.458619, -0.056686, 0.111798, 0.742764,\n-0.154329, -0.415735, -0.230970, -0.323751, -0.831354, -0.451704, 0.341020, 0.342794, -0.875327, -0.881708, 0.438268, -0.174676, 0.129782, 0.764530,\n-0.326641, 0.191342, -0.326641, -0.665784, 0.369646, -0.648147, 0.739250, 0.444604, -0.505803, -0.105249, 0.813449, 0.572034, 0.213116, 0.332732,\n-0.346760, 0.097545, -0.346760, -0.682044, 0.175715, -0.709887, 0.700637, 0.435191, -0.565435, -0.213770, 0.880404, 0.423309, 0.198358, 0.391169,\n-0.272447, 0.097545, -0.407746, -0.544372, 0.195104, -0.815839, 0.789456, 0.447951, -0.419642, -0.282887, 0.872904, 0.397508, 0.225087, 0.420258,\n-0.345671, -0.277785, -0.230970, -0.675904, -0.555401, -0.484442, 0.342223, 0.345636, -0.873739, -0.651508, 0.757561, 0.040474, 0.123337, 0.605312,\n-0.293969, -0.353553, -0.196424, -0.589174, -0.707137, -0.390937, 0.243911, 0.305609, -0.920386, -0.770505, 0.637379, 0.008307, 0.109967, 0.665096,\n-0.250000, -0.353553, -0.250000, -0.501585, -0.707137, -0.498368, 0.366360, 0.348243, -0.862848, -0.783933, 0.615157, -0.083856, 0.131139, 0.686825,\n-0.345671, 0.277785, -0.230970, -0.675904, 0.555401, -0.484442, 0.733379, 0.441885, -0.516616, 0.064220, 0.699210, 0.712026, 0.203700, 0.246751,\n-0.384089, 0.191342, -0.256640, -0.784659, 0.382534, -0.487831, 0.618375, 0.427315, -0.659556, 0.043165, 0.818719, 0.572570, 0.185222, 0.304054,\n-0.326641, 0.191342, -0.326641, -0.665784, 0.369646, -0.648147, 0.739250, 0.444604, -0.505803, -0.105249, 0.813449, 0.572034, 0.213116, 0.332732,\n-0.293969, -0.353553, -0.196424, -0.589174, -0.707137, -0.390937, 0.243911, 0.305609, -0.920386, -0.770505, 0.637379, 0.008307, 0.109967, 0.665096,\n-0.230970, -0.415735, -0.154329, -0.471967, -0.831354, -0.293425, 0.130413, 0.263329, -0.955850, -0.872466, 0.488269, 0.019939, 0.093775, 0.723522,\n-0.196424, -0.415735, -0.196424, -0.405652, -0.831354, -0.379865, 0.233381, 0.307611, -0.922447, -0.886823, 0.458619, -0.056686, 0.111798, 0.742764,\n-0.384089, 0.191342, -0.256640, -0.784659, 0.382534, -0.487831, 0.618375, 0.427315, -0.659556, 0.043165, 0.818719, 0.572570, 0.185222, 0.304054,\n-0.407746, 0.097545, -0.272447, -0.797191, 0.195002, -0.571368, 0.593819, 0.424021, -0.683802, -0.108956, 0.884390, 0.453853, 0.170581, 0.363231,\n-0.326641, 0.191342, -0.326641, -0.665784, 0.369646, -0.648147, 0.739250, 0.444604, -0.505803, -0.105249, 0.813449, 0.572034, 0.213116, 0.332732,\n-0.230970, -0.415735, -0.154329, -0.471967, -0.831354, -0.293425, 0.130413, 0.263329, -0.955850, -0.872466, 0.488269, 0.019939, 0.093775, 0.723522,\n-0.159095, -0.461940, -0.106304, -0.328037, -0.916136, -0.230404, 0.063299, 0.222035, -0.972982, -0.943929, 0.327507, 0.041678, 0.072524, 0.779430,\n-0.196424, -0.415735, -0.196424, -0.405652, -0.831354, -0.379865, 0.233381, 0.307611, -0.922447, -0.886823, 0.458619, -0.056686, 0.111798, 0.742764,\n-0.407746, 0.097545, -0.272447, -0.797191, 0.195002, -0.571368, 0.593819, 0.424021, -0.683802, -0.108956, 0.884390, 0.453853, 0.170581, 0.363231,\n-0.415734, 0.000000, -0.277785, -0.849252, 0.000000, -0.527987, 0.486058, 0.390539, -0.781810, -0.205283, 0.921321, 0.330192, 0.158051, 0.423412,\n-0.353553, 0.000000, -0.353553, -0.729930, 0.000000, -0.683522, 0.619322, 0.423115, -0.661372, -0.288938, 0.906260, 0.308556, 0.185261, 0.450486,\n-0.081106, 0.490393, -0.054193, -0.181415, 0.976741, -0.114308, 0.793396, 0.214049, 0.569830, -0.593424, -0.016042, 0.804730, 0.397996, 0.106635,\n-0.159095, 0.461940, -0.106304, -0.299778, 0.931233, -0.207216, 0.881538, 0.353432, 0.313013, -0.395877, 0.076196, 0.915137, 0.323912, 0.113774,\n-0.068975, 0.490393, -0.068975, -0.155628, 0.976741, -0.147506, 0.781762, 0.213065, 0.586047, -0.607565, 0.023093, 0.793934, 0.397636, 0.119453,\n-0.159095, -0.461940, -0.106304, -0.328037, -0.916136, -0.230404, 0.063299, 0.222035, -0.972982, -0.943929, 0.327507, 0.041678, 0.072524, 0.779430,\n-0.081106, -0.490393, -0.054193, -0.188870, -0.973859, -0.126198, -0.111340, 0.148919, -0.982561, -0.971871, 0.166960, 0.166104, 0.042176, 0.830481,\n-0.135299, -0.461940, -0.135299, -0.256643, -0.929163, -0.266065, 0.100015, 0.248275, -0.963512, -0.962627, 0.270377, -0.015682, 0.085985, 0.794966,\n-0.415734, 0.000000, -0.277785, -0.849252, 0.000000, -0.527987, 0.486058, 0.390539, -0.781810, -0.205283, 0.921321, 0.330192, 0.158051, 0.423412,\n-0.407746, -0.097545, -0.272447, -0.815145, -0.195102, -0.545412, 0.450428, 0.378534, -0.808595, -0.365600, 0.903621, 0.223170, 0.146537, 0.484073,\n-0.353553, 0.000000, -0.353553, -0.729930, 0.000000, -0.683522, 0.619322, 0.423115, -0.661372, -0.288938, 0.906260, 0.308556, 0.185261, 0.450486,\n-0.159095, 0.461940, -0.106304, -0.299778, 0.931233, -0.207216, 0.881538, 0.353432, 0.313013, -0.395877, 0.076196, 0.915137, 0.323912, 0.113774,\n-0.230970, 0.415735, -0.154329, -0.438981, 0.849271, -0.293317, 0.895086, 0.441771, -0.060488, -0.108067, 0.274177, 0.955588, 0.266710, 0.146213,\n-0.135299, 0.461940, -0.135299, -0.272685, 0.923888, -0.268466, 0.884277, 0.350616, 0.308420, -0.408884, 0.141302, 0.901581, 0.333754, 0.137005,\n-0.407746, -0.097545, -0.272447, -0.815145, -0.195102, -0.545412, 0.450428, 0.378534, -0.808595, -0.365600, 0.903621, 0.223170, 0.146537, 0.484073,\n-0.384089, -0.191342, -0.256640, -0.767487, -0.382710, -0.514293, 0.390974, 0.356338, -0.848624, -0.510347, 0.850256, 0.128881, 0.135222, 0.544826,\n-0.346760, -0.097545, -0.346760, -0.693076, -0.195103, -0.693960, 0.583791, 0.412832, -0.699113, -0.425191, 0.888027, 0.174986, 0.172843, 0.510158,\n-0.230970, 0.415735, -0.154329, -0.438981, 0.849271, -0.293317, 0.895086, 0.441771, -0.060488, -0.108067, 0.274177, 0.955588, 0.266710, 0.146213,\n-0.293969, 0.353553, -0.196424, -0.585615, 0.716973, -0.378161, 0.805466, 0.462339, -0.370765, 0.088480, 0.520278, 0.849401, 0.229053, 0.192977,\n-0.196424, 0.415735, -0.196424, -0.394718, 0.831489, -0.390926, 0.904146, 0.427203, -0.004267, -0.178287, 0.348073, 0.920358, 0.286589, 0.174154,\n-0.384089, -0.191342, -0.256640, -0.767487, -0.382710, -0.514293, 0.390974, 0.356338, -0.848624, -0.510347, 0.850256, 0.128881, 0.135222, 0.544826,\n-0.345671, -0.277785, -0.230970, -0.675904, -0.555401, -0.484442, 0.342223, 0.345636, -0.873739, -0.651508, 0.757561, 0.040474, 0.123337, 0.605312,\n-0.326641, -0.191342, -0.326641, -0.652404, -0.382712, -0.654142, 0.524934, 0.394366, -0.754267, -0.550111, 0.832832, 0.061393, 0.160290, 0.569759,\n-0.293969, 0.353553, -0.196424, -0.585615, 0.716973, -0.378161, 0.805466, 0.462339, -0.370765, 0.088480, 0.520278, 0.849401, 0.229053, 0.192977,\n-0.345671, 0.277785, -0.230970, -0.675904, 0.555401, -0.484442, 0.733379, 0.441885, -0.516616, 0.064220, 0.699210, 0.712026, 0.203700, 0.246751,\n-0.250000, 0.353553, -0.250000, -0.501585, 0.707137, -0.498368, 0.862463, 0.453755, -0.224195, -0.070115, 0.540952, 0.838126, 0.254155, 0.222217,\n-0.453063, -0.097545, -0.187665, -0.905885, -0.195102, -0.375909, 0.300401, 0.329673, -0.895028, -0.299521, 0.922643, 0.242934, 0.119628, 0.460773,\n-0.426777, -0.191342, -0.176777, -0.853073, -0.382711, -0.354682, 0.244429, 0.307448, -0.919636, -0.462279, 0.869583, 0.173560, 0.109843, 0.522841,\n-0.407746, -0.097545, -0.272447, -0.815145, -0.195102, -0.545412, 0.450428, 0.378534, -0.808595, -0.365600, 0.903621, 0.223170, 0.146537, 0.484073,\n-0.256640, 0.415735, -0.106304, -0.526547, 0.823576, -0.210884, 0.829709, 0.443764, -0.338611, 0.142178, 0.329869, 0.933259, 0.244750, 0.117306,\n-0.326641, 0.353553, -0.135299, -0.671767, 0.692994, -0.261703, 0.682089, 0.440871, -0.583427, 0.263530, 0.553750, 0.789881, 0.200859, 0.163815,\n-0.293969, 0.353553, -0.196424, -0.585615, 0.716973, -0.378161, 0.805466, 0.462339, -0.370765, 0.088480, 0.520278, 0.849401, 0.229053, 0.192977,\n-0.426777, -0.191342, -0.176777, -0.853073, -0.382711, -0.354682, 0.244429, 0.307448, -0.919636, -0.462279, 0.869583, 0.173560, 0.109843, 0.522841,\n-0.384089, -0.277785, -0.159095, -0.757427, -0.555401, -0.343269, 0.209220, 0.291565, -0.933390, -0.618888, 0.778237, 0.106417, 0.099805, 0.584808,\n-0.384089, -0.191342, -0.256640, -0.767487, -0.382710, -0.514293, 0.390974, 0.356338, -0.848624, -0.510347, 0.850256, 0.128881, 0.135222, 0.544826,\n-0.326641, 0.353553, -0.135299, -0.671767, 0.692994, -0.261703, 0.682089, 0.440871, -0.583427, 0.263530, 0.553750, 0.789881, 0.200859, 0.163815,\n-0.384089, 0.277785, -0.159095, -0.757427, 0.555401, -0.343269, 0.617410, 0.438239, -0.653262, 0.211028, 0.705770, 0.676281, 0.173746, 0.218568,\n-0.293969, 0.353553, -0.196424, -0.585615, 0.716973, -0.378161, 0.805466, 0.462339, -0.370765, 0.088480, 0.520278, 0.849401, 0.229053, 0.192977,\n-0.384089, -0.277785, -0.159095, -0.757427, -0.555401, -0.343269, 0.209220, 0.291565, -0.933390, -0.618888, 0.778237, 0.106417, 0.099805, 0.584808,\n-0.326641, -0.353553, -0.135299, -0.654122, -0.707136, -0.268482, 0.116320, 0.256687, -0.959469, -0.747494, 0.658614, 0.086494, 0.088752, 0.646371,\n-0.293969, -0.353553, -0.196424, -0.589174, -0.707137, -0.390937, 0.243911, 0.305609, -0.920386, -0.770505, 0.637379, 0.008307, 0.109967, 0.665096,\n-0.384089, 0.277785, -0.159095, -0.757427, 0.555401, -0.343269, 0.617410, 0.438239, -0.653262, 0.211028, 0.705770, 0.676281, 0.173746, 0.218568,\n-0.426777, 0.191342, -0.176777, -0.864752, 0.382536, -0.325378, 0.470541, 0.390773, -0.791131, 0.176344, 0.837945, 0.516479, 0.155266, 0.277086,\n-0.384089, 0.191342, -0.256640, -0.784659, 0.382534, -0.487831, 0.618375, 0.427315, -0.659556, 0.043165, 0.818719, 0.572570, 0.185222, 0.304054,\n-0.326641, -0.353553, -0.135299, -0.654122, -0.707136, -0.268482, 0.116320, 0.256687, -0.959469, -0.747494, 0.658614, 0.086494, 0.088752, 0.646371,\n-0.256640, -0.415735, -0.106304, -0.520142, -0.831354, -0.195709, 0.020183, 0.217118, -0.975937, -0.853963, 0.510011, 0.103126, 0.075620, 0.707098,\n-0.230970, -0.415735, -0.154329, -0.471967, -0.831354, -0.293425, 0.130413, 0.263329, -0.955850, -0.872466, 0.488269, 0.019939, 0.093775, 0.723522,\n-0.426777, 0.191342, -0.176777, -0.864752, 0.382536, -0.325378, 0.470541, 0.390773, -0.791131, 0.176344, 0.837945, 0.516479, 0.155266, 0.277086,\n-0.453063, 0.097545, -0.187665, -0.893339, 0.195000, -0.404871, 0.449384, 0.386693, -0.805309, 0.000144, 0.901072, 0.433670, 0.141332, 0.337487,\n-0.384089, 0.191342, -0.256640, -0.784659, 0.382534, -0.487831, 0.618375, 0.427315, -0.659556, 0.043165, 0.818719, 0.572570, 0.185222, 0.304054,\n-0.256640, -0.415735, -0.106304, -0.520142, -0.831354, -0.195709, 0.020183, 0.217118, -0.975937, -0.853963, 0.510011, 0.103126, 0.075620, 0.707098,\n-0.176777, -0.461940, -0.073223, -0.348692, -0.923819, -0.158028, -0.044107, 0.184598, -0.981824, -0.935394, 0.332453, 0.120471, 0.058627, 0.766238,\n-0.230970, -0.415735, -0.154329, -0.471967, -0.831354, -0.293425, 0.130413, 0.263329, -0.955850, -0.872466, 0.488269, 0.019939, 0.093775, 0.723522,\n-0.453063, 0.097545, -0.187665, -0.893339, 0.195000, -0.404871, 0.449384, 0.386693, -0.805309, 0.000144, 0.901072, 0.433670, 0.141332, 0.337487,\n-0.461939, 0.000000, -0.191341, -0.935938, 0.000000, -0.352165, 0.330780, 0.343167, -0.879102, -0.119456, 0.940712, 0.317475, 0.129853, 0.398879,\n-0.415734, 0.000000, -0.277785, -0.849252, 0.000000, -0.527987, 0.486058, 0.390539, -0.781810, -0.205283, 0.921321, 0.330192, 0.158051, 0.423412,\n-0.090120, 0.490393, -0.037329, -0.200230, 0.976740, -0.076720, 0.795154, 0.207754, 0.569709, -0.589942, -0.057676, 0.805383, 0.401519, 0.094149,\n-0.176777, 0.461940, -0.073223, -0.348692, 0.923819, -0.158028, 0.896544, 0.377920, 0.231051, -0.291820, 0.053214, 0.954992, 0.315970, 0.089506,\n-0.081106, 0.490393, -0.054193, -0.181415, 0.976741, -0.114308, 0.793396, 0.214049, 0.569830, -0.593424, -0.016042, 0.804730, 0.397996, 0.106635,\n-0.176777, -0.461940, -0.073223, -0.348692, -0.923819, -0.158028, -0.044107, 0.184598, -0.981824, -0.935394, 0.332453, 0.120471, 0.058627, 0.766238,\n-0.090120, -0.490393, -0.037329, -0.200230, -0.976741, -0.076720, -0.201743, 0.117731, -0.972337, -0.956169, 0.177734, 0.232706, 0.034376, 0.822270,\n-0.081106, -0.490393, -0.054193, -0.188870, -0.973859, -0.126198, -0.111340, 0.148919, -0.982561, -0.971871, 0.166960, 0.166104, 0.042176, 0.830481,\n-0.461939, 0.000000, -0.191341, -0.935938, 0.000000, -0.352165, 0.330780, 0.343167, -0.879102, -0.119456, 0.940712, 0.317475, 0.129853, 0.398879,\n-0.453063, -0.097545, -0.187665, -0.905885, -0.195102, -0.375909, 0.300401, 0.329673, -0.895028, -0.299521, 0.922643, 0.242934, 0.119628, 0.460773,\n-0.415734, 0.000000, -0.277785, -0.849252, 0.000000, -0.527987, 0.486058, 0.390539, -0.781810, -0.205283, 0.921321, 0.330192, 0.158051, 0.423412,\n-0.176777, 0.461940, -0.073223, -0.348692, 0.923819, -0.158028, 0.896544, 0.377920, 0.231051, -0.291820, 0.053214, 0.954992, 0.315970, 0.089506,\n-0.256640, 0.415735, -0.106304, -0.526547, 0.823576, -0.210884, 0.829709, 0.443764, -0.338611, 0.142178, 0.329869, 0.933259, 0.244750, 0.117306,\n-0.230970, 0.415735, -0.154329, -0.438981, 0.849271, -0.293317, 0.895086, 0.441771, -0.060488, -0.108067, 0.274177, 0.955588, 0.266710, 0.146213,\n-0.272447, -0.415735, -0.054193, -0.530494, -0.842235, -0.096007, -0.090736, 0.169025, -0.981426, -0.841533, 0.509627, 0.179173, 0.057290, 0.693759,\n-0.187665, -0.461940, -0.037329, -0.361210, -0.929163, -0.078640, -0.150569, 0.141344, -0.978443, -0.919609, 0.340987, 0.195057, 0.044374, 0.755575,\n-0.256640, -0.415735, -0.106304, -0.520142, -0.831354, -0.195709, 0.020183, 0.217118, -0.975937, -0.853963, 0.510011, 0.103126, 0.075620, 0.707098,\n-0.480970, 0.097545, -0.095671, -0.956311, 0.208861, -0.204566, 0.264441, 0.319607, -0.909902, 0.126073, 0.925939, 0.356009, 0.110271, 0.315079,\n-0.490392, 0.000000, -0.097545, -0.986658, 0.000000, -0.162807, 0.156253, 0.280865, -0.946942, -0.044537, 0.961857, 0.269905, 0.100444, 0.377879,\n-0.461939, 0.000000, -0.191341, -0.935938, 0.000000, -0.352165, 0.330780, 0.343167, -0.879102, -0.119456, 0.940712, 0.317475, 0.129853, 0.398879,\n-0.095671, 0.490393, -0.019030, -0.191324, 0.980789, -0.038055, 0.769801, 0.173994, 0.614111, -0.685547, -0.105782, 0.720302, 0.409016, 0.082641,\n-0.187665, 0.461940, -0.037329, -0.361210, 0.929163, -0.078640, 0.876848, 0.367143, 0.310393, -0.352518, -0.057991, 0.934007, 0.311350, 0.064544,\n-0.090120, 0.490393, -0.037329, -0.200230, 0.976740, -0.076720, 0.795154, 0.207754, 0.569709, -0.589942, -0.057676, 0.805383, 0.401519, 0.094149,\n-0.187665, -0.461940, -0.037329, -0.361210, -0.929163, -0.078640, -0.150569, 0.141344, -0.978443, -0.919609, 0.340987, 0.195057, 0.044374, 0.755575,\n-0.095671, -0.490393, -0.019030, -0.191324, -0.980789, -0.038055, -0.260965, 0.088206, -0.961310, -0.944893, 0.173551, 0.277593, 0.025974, 0.815602,\n-0.090120, -0.490393, -0.037329, -0.200230, -0.976741, -0.076720, -0.201743, 0.117731, -0.972337, -0.956169, 0.177734, 0.232706, 0.034376, 0.822270,\n-0.490392, 0.000000, -0.097545, -0.986658, 0.000000, -0.162807, 0.156253, 0.280865, -0.946942, -0.044537, 0.961857, 0.269905, 0.100444, 0.377879,\n-0.480970, -0.097545, -0.095671, -0.961814, -0.195104, -0.191958, 0.135158, 0.271299, -0.952958, -0.238214, 0.942091, 0.236049, 0.091945, 0.441097,\n-0.461939, 0.000000, -0.191341, -0.935938, 0.000000, -0.352165, 0.330780, 0.343167, -0.879102, -0.119456, 0.940712, 0.317475, 0.129853, 0.398879,\n-0.187665, 0.461940, -0.037329, -0.361210, 0.929163, -0.078640, 0.915703, 0.337518, -0.218104, 0.165116, 0.146733, 0.975298, 0.311350, 0.064544,\n-0.272447, 0.415735, -0.054193, -0.530494, 0.842235, -0.096007, 0.809223, 0.469433, -0.353257, 0.225910, 0.249629, 0.941621, 0.218761, 0.087986,\n-0.256640, 0.415735, -0.106304, -0.526547, 0.823576, -0.210884, 0.829709, 0.443764, -0.338611, 0.142178, 0.329869, 0.933259, 0.244750, 0.117306,\n-0.480970, -0.097545, -0.095671, -0.961814, -0.195104, -0.191958, 0.135158, 0.271299, -0.952958, -0.238214, 0.942091, 0.236049, 0.091945, 0.441097,\n-0.453064, -0.191342, -0.090120, -0.905874, -0.382714, -0.181443, 0.088287, 0.248358, -0.964637, -0.414650, 0.888692, 0.195685, 0.084004, 0.504490,\n-0.453063, -0.097545, -0.187665, -0.905885, -0.195102, -0.375909, 0.300401, 0.329673, -0.895028, -0.299521, 0.922643, 0.242934, 0.119628, 0.460773,\n-0.272447, 0.415735, -0.054193, -0.530494, 0.842235, -0.096007, 0.809223, 0.469433, -0.353257, 0.225910, 0.249629, 0.941621, 0.218761, 0.087986,\n-0.346760, 0.353553, -0.068975, -0.670363, 0.729954, -0.133341, 0.615738, 0.446929, -0.648938, 0.419535, 0.521063, 0.743293, 0.167754, 0.135879,\n-0.256640, 0.415735, -0.106304, -0.526547, 0.823576, -0.210884, 0.829709, 0.443764, -0.338611, 0.142178, 0.329869, 0.933259, 0.244750, 0.117306,\n-0.453064, -0.191342, -0.090120, -0.905874, -0.382714, -0.181443, 0.088287, 0.248358, -0.964637, -0.414650, 0.888692, 0.195685, 0.084004, 0.504490,\n-0.407746, -0.277785, -0.081106, -0.805228, -0.567206, -0.172874, 0.047157, 0.229362, -0.972198, -0.591182, 0.790524, 0.159922, 0.076022, 0.567870,\n-0.426777, -0.191342, -0.176777, -0.853073, -0.382711, -0.354682, 0.244429, 0.307448, -0.919636, -0.462279, 0.869583, 0.173560, 0.109843, 0.522841,\n-0.346760, 0.353553, -0.068975, -0.670363, 0.729954, -0.133341, 0.615738, 0.446929, -0.648938, 0.419535, 0.521063, 0.743293, 0.167754, 0.135879,\n-0.407746, 0.277785, -0.081106, -0.805228, 0.567206, -0.172874, 0.451509, 0.397513, -0.798826, 0.392085, 0.728018, 0.562369, 0.140040, 0.192730,\n-0.326641, 0.353553, -0.135299, -0.671767, 0.692994, -0.261703, 0.682089, 0.440871, -0.583427, 0.263530, 0.553750, 0.789881, 0.200859, 0.163815,\n-0.407746, -0.277785, -0.081106, -0.805228, -0.567206, -0.172874, 0.047157, 0.229362, -0.972198, -0.591182, 0.790524, 0.159922, 0.076022, 0.567870,\n-0.346760, -0.353553, -0.068975, -0.670363, -0.729954, -0.133341, -0.023254, 0.200274, -0.979464, -0.741723, 0.653981, 0.148849, 0.067389, 0.631045,\n-0.326641, -0.353553, -0.135299, -0.654122, -0.707136, -0.268482, 0.116320, 0.256687, -0.959469, -0.747494, 0.658614, 0.086494, 0.088752, 0.646371,\n-0.407746, 0.277785, -0.081106, -0.805228, 0.567206, -0.172874, 0.451509, 0.397513, -0.798826, 0.392085, 0.728018, 0.562369, 0.140040, 0.192730,\n-0.453064, 0.191342, -0.090120, -0.901814, 0.400775, -0.161586, 0.311384, 0.343424, -0.886059, 0.302315, 0.852331, 0.426776, 0.122669, 0.253098,\n-0.426777, 0.191342, -0.176777, -0.864752, 0.382536, -0.325378, 0.470541, 0.390773, -0.791131, 0.176344, 0.837945, 0.516479, 0.155266, 0.277086,\n-0.346760, -0.353553, -0.068975, -0.670363, -0.729954, -0.133341, -0.023254, 0.200274, -0.979464, -0.741723, 0.653981, 0.148849, 0.067389, 0.631045,\n-0.272447, -0.415735, -0.054193, -0.530494, -0.842235, -0.096007, -0.090736, 0.169025, -0.981426, -0.841533, 0.509627, 0.179173, 0.057290, 0.693759,\n-0.256640, -0.415735, -0.106304, -0.520142, -0.831354, -0.195709, 0.020183, 0.217118, -0.975937, -0.853963, 0.510011, 0.103126, 0.075620, 0.707098,\n-0.453064, 0.191342, -0.090120, -0.901814, 0.400775, -0.161586, 0.311384, 0.343424, -0.886059, 0.302315, 0.852331, 0.426776, 0.122669, 0.253098,\n-0.480970, 0.097545, -0.095671, -0.956311, 0.208861, -0.204566, 0.264441, 0.319607, -0.909902, 0.126073, 0.925939, 0.356009, 0.110271, 0.315079,\n-0.426777, 0.191342, -0.176777, -0.864752, 0.382536, -0.325378, 0.470541, 0.390773, -0.791131, 0.176344, 0.837945, 0.516479, 0.155266, 0.277086,\n-0.095671, 0.490393, 0.019030, -0.209109, 0.976740, 0.047449, 0.634606, 0.098625, 0.766517, -0.730319, -0.188252, 0.656655, 0.438189, 0.065976,\n-0.097545, 0.490393, -0.000000, -0.227152, 0.973859, 0.000000, 0.737153, 0.171940, 0.653485, -0.576689, -0.134512, 0.805814, 0.421200, 0.072930,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n-0.095671, -0.490393, 0.019030, -0.209109, -0.976740, 0.047449, -0.365074, 0.032961, -0.930395, -0.899781, 0.211182, 0.381832, 0.946066, 0.807346,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n-0.097545, -0.490393, -0.000000, -0.227152, -0.973859, 0.000000, -0.300081, 0.069994, -0.951342, -0.917744, 0.214063, 0.334550, 0.955203, 0.810598,\n-0.090120, -0.490393, 0.037329, -0.180222, -0.980789, 0.074651, -0.415009, 0.007012, -0.909790, -0.889096, 0.194896, 0.414155, 0.936766, 0.805903,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n-0.095671, -0.490393, 0.019030, -0.209109, -0.976740, 0.047449, -0.365074, 0.032961, -0.930395, -0.899781, 0.211182, 0.381832, 0.946066, 0.807346,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n-0.090120, 0.490393, 0.037329, -0.195833, 0.976741, 0.087334, 0.450796, 0.010576, 0.892564, -0.819617, -0.211923, 0.532274, 0.458801, 0.062690,\n-0.095671, 0.490393, 0.019030, -0.209109, 0.976740, 0.047449, 0.634606, 0.098625, 0.766517, -0.730319, -0.188252, 0.656655, 0.438189, 0.065976,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n-0.081106, 0.490393, 0.054193, -0.162196, 0.980789, 0.108375, 0.362059, -0.043016, 0.931162, -0.975824, -0.175734, 0.129942, 0.480346, 0.063591,\n-0.090120, 0.490393, 0.037329, -0.195833, 0.976741, 0.087334, 0.450796, 0.010576, 0.892564, -0.819617, -0.211923, 0.532274, 0.458801, 0.062690,\n-0.081106, -0.490393, 0.054193, -0.188870, -0.973859, 0.126198, -0.473215, -0.022346, -0.880663, -0.864501, 0.225849, 0.449032, 0.927429, 0.806293,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n-0.090120, -0.490393, 0.037329, -0.180222, -0.980789, 0.074651, -0.415009, 0.007012, -0.909790, -0.889096, 0.194896, 0.414155, 0.936766, 0.805903,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n-0.068975, 0.490393, 0.068975, -0.160620, 0.973859, 0.160620, 0.049797, -0.154530, 0.986732, -0.984709, -0.169230, 0.041350, 0.499668, 0.068531,\n-0.081106, 0.490393, 0.054193, -0.162196, 0.980789, 0.108375, 0.362059, -0.043016, 0.931162, -0.975824, -0.175734, 0.129942, 0.480346, 0.063591,\n-0.068975, -0.490393, 0.068975, -0.137937, -0.980789, 0.137937, -0.513926, -0.048176, -0.856481, -0.847505, 0.188951, 0.496017, 0.918182, 0.808510,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n-0.081106, -0.490393, 0.054193, -0.188870, -0.973859, 0.126198, -0.473215, -0.022346, -0.880663, -0.864501, 0.225849, 0.449032, 0.927429, 0.806293,\n-0.054193, -0.490393, 0.081106, -0.126198, -0.973859, 0.188870, -0.585134, -0.080668, -0.806914, -0.822650, 0.209137, 0.528685, 0.909154, 0.812515,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n-0.068975, -0.490393, 0.068975, -0.137937, -0.980789, 0.137937, -0.513926, -0.048176, -0.856481, -0.847505, 0.188951, 0.496017, 0.918182, 0.808510,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n-0.054193, 0.490393, 0.081106, -0.114308, 0.976741, 0.181415, 0.007857, -0.181717, 0.983319, -0.992883, -0.118463, 0.012200, 0.514668, 0.076778,\n-0.068975, 0.490393, 0.068975, -0.160620, 0.973859, 0.160620, 0.049797, -0.154530, 0.986732, -0.984709, -0.169230, 0.041350, 0.499668, 0.068531,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n-0.037329, 0.490393, 0.090120, -0.076720, 0.976740, 0.200230, -0.046042, -0.204078, 0.977871, -0.996782, -0.079813, 0.007405, 0.524796, 0.087364,\n-0.054193, 0.490393, 0.081106, -0.114308, 0.976741, 0.181415, 0.007857, -0.181717, 0.983319, -0.992883, -0.118463, 0.012200, 0.514668, 0.076778,\n-0.037329, -0.490393, 0.090120, -0.076720, -0.976741, 0.200230, -0.621151, -0.110267, -0.775894, -0.785454, 0.182906, 0.591276, 0.900481, 0.818239,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n-0.054193, -0.490393, 0.081106, -0.126198, -0.973859, 0.188870, -0.585134, -0.080668, -0.806914, -0.822650, 0.209137, 0.528685, 0.909154, 0.812515,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n-0.019030, 0.490393, 0.095671, -0.036183, 0.976741, 0.211349, -0.052590, -0.213056, 0.975624, -0.999332, -0.036442, -0.002671, 0.530504, 0.099377,\n-0.037329, 0.490393, 0.090120, -0.076720, 0.976740, 0.200230, -0.046042, -0.204078, 0.977871, -0.996782, -0.079813, 0.007405, 0.524796, 0.087364,\n-0.019030, -0.490393, 0.095671, -0.036183, -0.976740, 0.211349, -0.659716, -0.135510, -0.739196, -0.754210, 0.165440, 0.635450, 0.892313, 0.825579,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n-0.037329, -0.490393, 0.090120, -0.076720, -0.976741, 0.200230, -0.621151, -0.110267, -0.775894, -0.785454, 0.182906, 0.591276, 0.900481, 0.818239,\n0.000000, -0.490393, 0.097545, -0.000000, -0.980789, 0.195071, -0.667310, -0.145285, -0.730472, -0.732975, 0.132698, 0.667187, 0.884825, 0.834401,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n-0.019030, -0.490393, 0.095671, -0.036183, -0.976740, 0.211349, -0.659716, -0.135510, -0.739196, -0.754210, 0.165440, 0.635450, 0.892313, 0.825579,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n0.000000, 0.490393, 0.097545, -0.000000, 0.980789, 0.195071, -0.010227, -0.195061, 0.980738, -0.998705, -0.009923, 0.049892, 0.532587, 0.112073,\n-0.019030, 0.490393, 0.095671, -0.036183, 0.976741, 0.211349, -0.052590, -0.213056, 0.975624, -0.999332, -0.036442, -0.002671, 0.530504, 0.099377,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n0.019030, 0.490393, 0.095671, 0.044314, 0.973859, 0.222787, -0.038854, -0.221157, 0.974464, -0.994442, 0.064320, -0.083357, 0.531827, 0.124876,\n0.000000, 0.490393, 0.097545, -0.000000, 0.980789, 0.195071, -0.010227, -0.195061, 0.980738, -0.998705, -0.009923, 0.049892, 0.532587, 0.112073,\n0.019030, -0.490393, 0.095671, 0.044314, -0.973859, 0.222787, -0.736482, -0.182524, -0.651368, -0.682533, 0.133332, 0.718590, 0.878221, 0.844539,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n0.000000, -0.490393, 0.097545, -0.000000, -0.980789, 0.195071, -0.667310, -0.145285, -0.730472, -0.732975, 0.132698, 0.667187, 0.884825, 0.834401,\n0.037329, -0.490393, 0.090120, 0.087334, -0.976741, 0.195832, -0.744511, -0.194610, -0.638616, -0.657112, 0.091266, 0.748248, 0.872759, 0.855785,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n0.019030, -0.490393, 0.095671, 0.044314, -0.973859, 0.222787, -0.736482, -0.182524, -0.651368, -0.682533, 0.133332, 0.718590, 0.878221, 0.844539,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n0.037329, 0.490393, 0.090120, 0.087334, 0.976741, 0.195832, 0.029590, -0.199040, 0.979544, -0.996041, 0.082349, 0.033470, 0.528865, 0.137340,\n0.019030, 0.490393, 0.095671, 0.044314, 0.973859, 0.222787, -0.038854, -0.221157, 0.974464, -0.994442, 0.064320, -0.083357, 0.531827, 0.124876,\n0.054193, -0.490393, 0.081106, 0.123861, -0.976741, 0.175033, -0.764866, -0.206349, -0.610246, -0.629644, 0.058971, 0.774642, 0.868766, 0.867891,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n0.037329, -0.490393, 0.090120, 0.087334, -0.976741, 0.195832, -0.744511, -0.194610, -0.638616, -0.657112, 0.091266, 0.748248, 0.872759, 0.855785,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n0.054193, 0.490393, 0.081106, 0.123861, 0.976741, 0.175033, 0.067422, -0.184267, 0.980561, -0.990960, 0.112591, 0.072953, 0.524202, 0.149115,\n0.037329, 0.490393, 0.090120, 0.087334, 0.976741, 0.195832, 0.029590, -0.199040, 0.979544, -0.996041, 0.082349, 0.033470, 0.528865, 0.137340,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n0.068975, 0.490393, 0.068975, 0.155628, 0.976741, 0.147506, 0.108362, -0.165305, 0.980271, -0.982856, 0.138166, 0.122082, 0.518220, 0.159918,\n0.054193, 0.490393, 0.081106, 0.123861, 0.976741, 0.175033, 0.067422, -0.184267, 0.980561, -0.990960, 0.112591, 0.072953, 0.524202, 0.149115,\n0.068975, -0.490393, 0.068975, 0.137937, -0.980789, 0.137937, -0.762550, -0.194038, -0.617143, -0.658063, 0.013330, 0.752845, 0.866671, 0.880547,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n0.054193, -0.490393, 0.081106, 0.123861, -0.976741, 0.175033, -0.764866, -0.206349, -0.610246, -0.629644, 0.058971, 0.774642, 0.868766, 0.867891,\n0.081106, -0.490393, 0.054193, 0.188870, -0.973859, 0.126198, -0.801537, -0.227128, -0.553128, -0.517361, 0.010550, 0.855703, 0.867032, 0.893366,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n0.068975, -0.490393, 0.068975, 0.137937, -0.980789, 0.137937, -0.762550, -0.194038, -0.617143, -0.658063, 0.013330, 0.752845, 0.866671, 0.880547,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n0.081106, 0.490393, 0.054193, 0.181415, 0.976741, 0.114308, 0.153068, -0.142866, 0.977834, -0.971223, 0.159712, 0.176687, 0.511212, 0.169520,\n0.068975, 0.490393, 0.068975, 0.155628, 0.976741, 0.147506, 0.108362, -0.165305, 0.980271, -0.982856, 0.138166, 0.122082, 0.518220, 0.159918,\n0.090120, -0.490393, 0.037329, 0.200230, -0.976741, 0.076720, -0.795149, -0.207753, -0.569716, -0.589941, -0.057676, 0.805384, 0.870555, 0.905851,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n0.081106, -0.490393, 0.054193, 0.188870, -0.973859, 0.126198, -0.801537, -0.227128, -0.553128, -0.517361, 0.010550, 0.855703, 0.867032, 0.893366,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n0.090120, 0.490393, 0.037329, 0.180222, 0.980789, 0.074651, 0.212929, -0.112995, 0.970512, -0.961087, 0.159432, 0.225594, 0.503412, 0.177731,\n0.081106, 0.490393, 0.054193, 0.181415, 0.976741, 0.114308, 0.153068, -0.142866, 0.977834, -0.971223, 0.159712, 0.176687, 0.511212, 0.169520,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n0.095671, 0.490393, 0.019030, 0.222787, 0.973859, 0.044314, 0.222436, -0.095039, 0.970304, -0.937833, 0.201692, 0.282472, 0.495010, 0.184398,\n0.090120, 0.490393, 0.037329, 0.180222, 0.980789, 0.074651, 0.212929, -0.112995, 0.970512, -0.961087, 0.159432, 0.225594, 0.503412, 0.177731,\n0.095671, -0.490393, 0.019030, 0.191324, -0.980789, 0.038055, -0.769801, -0.173994, -0.614112, -0.685546, -0.105782, 0.720303, 0.878052, 0.917359,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n0.090120, -0.490393, 0.037329, 0.200230, -0.976741, 0.076720, -0.795149, -0.207753, -0.569716, -0.589941, -0.057676, 0.805384, 0.870555, 0.905851,\n0.097545, -0.490393, -0.000000, 0.214348, -0.976741, 0.005744, -0.599533, -0.136207, -0.788675, -0.832607, -0.179636, 0.523924, 0.890236, 0.927070,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n0.095671, -0.490393, 0.019030, 0.191324, -0.980789, 0.038055, -0.769801, -0.173994, -0.614112, -0.685546, -0.105782, 0.720303, 0.878052, 0.917359,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n0.097545, 0.490393, -0.000000, 0.195071, 0.980789, -0.000000, 0.311436, -0.061942, 0.948246, -0.926912, 0.184355, 0.326876, 0.486168, 0.189402,\n0.095671, 0.490393, 0.019030, 0.222787, 0.973859, 0.044314, 0.222436, -0.095039, 0.970304, -0.937833, 0.201692, 0.282472, 0.495010, 0.184398,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n0.095671, 0.490393, -0.019030, 0.222787, 0.973859, -0.044314, 0.347838, -0.036945, 0.936826, -0.900239, 0.222962, 0.373975, 0.477031, 0.192654,\n0.097545, 0.490393, -0.000000, 0.195071, 0.980789, -0.000000, 0.311436, -0.061942, 0.948246, -0.926912, 0.184355, 0.326876, 0.486168, 0.189402,\n0.095671, -0.490393, -0.019030, 0.222787, -0.973859, -0.044314, -0.711124, -0.131252, -0.690706, -0.669132, -0.185817, 0.719538, 0.907224, 0.934025,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n0.097545, -0.490393, -0.000000, 0.214348, -0.976741, 0.005744, -0.599533, -0.136207, -0.788675, -0.832607, -0.179636, 0.523924, 0.890236, 0.927070,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n0.090120, 0.490393, -0.037329, 0.195833, 0.976741, -0.087334, 0.421336, -0.003387, 0.906898, -0.880226, 0.214339, 0.423392, 0.467730, 0.194097,\n0.095671, 0.490393, -0.019030, 0.222787, 0.973859, -0.044314, 0.347838, -0.036945, 0.936826, -0.900239, 0.222962, 0.373975, 0.477031, 0.192654,\n0.090120, -0.490393, -0.037329, 0.195833, -0.976741, -0.087334, -0.450755, -0.010566, -0.892585, -0.819615, -0.211923, 0.532278, 0.927836, 0.937310,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n0.095671, -0.490393, -0.019030, 0.222787, -0.973859, -0.044314, -0.711124, -0.131252, -0.690706, -0.669132, -0.185817, 0.719538, 0.907224, 0.934025,\n0.081106, -0.490393, -0.054193, 0.175033, -0.976741, -0.123861, -0.276227, 0.072033, -0.958389, -0.976416, -0.188355, 0.105515, 0.949381, 0.936409,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n0.090120, -0.490393, -0.037329, 0.195833, -0.976741, -0.087334, -0.450755, -0.010566, -0.892585, -0.819615, -0.211923, 0.532278, 0.927836, 0.937310,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n0.081106, 0.490393, -0.054193, 0.175033, 0.976740, -0.123861, 0.476286, 0.026103, 0.878903, -0.860138, 0.212914, 0.463497, 0.458394, 0.193707,\n0.090120, 0.490393, -0.037329, 0.195833, 0.976741, -0.087334, 0.421336, -0.003387, 0.906898, -0.880226, 0.214339, 0.423392, 0.467730, 0.194097,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n0.068975, 0.490393, -0.068975, 0.147506, 0.976741, -0.155628, 0.528648, 0.055128, 0.847049, -0.838346, 0.206961, 0.504325, 0.449147, 0.191490,\n0.081106, 0.490393, -0.054193, 0.175033, 0.976740, -0.123861, 0.476286, 0.026103, 0.878903, -0.860138, 0.212914, 0.463497, 0.458394, 0.193707,\n0.068975, -0.490393, -0.068975, 0.137937, -0.980789, -0.137937, -0.202289, 0.108434, -0.973304, -0.984450, -0.151062, 0.089663, 0.968703, 0.931469,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n0.081106, -0.490393, -0.054193, 0.175033, -0.976741, -0.123861, -0.276227, 0.072033, -0.958389, -0.976416, -0.188355, 0.105515, 0.949381, 0.936409,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n0.054193, 0.490393, -0.081106, 0.114308, 0.976741, -0.181415, 0.577264, 0.083314, 0.812296, -0.813643, 0.196824, 0.547033, 0.440119, 0.187485,\n0.068975, 0.490393, -0.068975, 0.147506, 0.976741, -0.155628, 0.528648, 0.055128, 0.847049, -0.838346, 0.206961, 0.504325, 0.449147, 0.191490,\n0.054193, -0.490393, -0.081106, 0.126198, -0.973859, -0.188870, -0.249450, 0.153121, -0.956205, -0.917724, -0.186900, 0.350500, 0.983704, 0.923222,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n0.068975, -0.490393, -0.068975, 0.137937, -0.980789, -0.137937, -0.202289, 0.108434, -0.973304, -0.984450, -0.151062, 0.089663, 0.968703, 0.931469,\n0.037329, -0.490393, -0.090120, 0.076720, -0.976740, -0.200230, 0.046042, 0.204078, -0.977871, -0.996783, -0.079808, 0.007381, 0.993832, 0.912636,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n0.054193, -0.490393, -0.081106, 0.126198, -0.973859, -0.188870, 0.072963, 0.198989, -0.977282, -0.975189, -0.086882, -0.203613, 0.983704, 0.923222,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n0.037329, 0.490393, -0.090120, 0.076720, 0.976740, -0.200230, 0.621152, 0.110266, 0.775894, -0.785459, 0.182905, 0.591270, 0.431446, 0.181761,\n0.054193, 0.490393, -0.081106, 0.114308, 0.976741, -0.181415, 0.577264, 0.083314, 0.812296, -0.813643, 0.196824, 0.547033, 0.440119, 0.187485,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n0.019030, 0.490393, -0.095671, 0.036183, 0.976740, -0.211349, 0.659716, 0.135510, 0.739197, -0.754201, 0.165442, 0.635461, 0.423278, 0.174421,\n0.037329, 0.490393, -0.090120, 0.076720, 0.976740, -0.200230, 0.621152, 0.110266, 0.775894, -0.785459, 0.182905, 0.591270, 0.431446, 0.181761,\n0.019030, -0.490393, -0.095671, 0.036183, -0.976740, -0.211349, 0.052590, 0.213056, -0.975624, -0.999332, -0.036443, -0.002670, 0.999539, 0.900623,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n0.037329, -0.490393, -0.090120, 0.076720, -0.976740, -0.200230, 0.046042, 0.204078, -0.977871, -0.996783, -0.079808, 0.007381, 0.993832, 0.912636,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n0.000000, 0.490393, -0.097545, -0.005744, 0.976741, -0.214348, 0.692756, 0.158469, 0.703546, -0.721155, 0.144448, 0.677547, 0.415789, 0.165599,\n0.019030, 0.490393, -0.095671, 0.036183, 0.976740, -0.211349, 0.659716, 0.135510, 0.739197, -0.754201, 0.165442, 0.635461, 0.423278, 0.174421,\n0.000000, -0.490393, -0.097545, -0.005744, -0.976741, -0.214348, 0.034559, 0.214029, -0.976216, -0.999964, 0.006941, -0.004830, 1.001623, 0.887927,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n0.019030, -0.490393, -0.095671, 0.036183, -0.976740, -0.211349, 0.052590, 0.213056, -0.975624, -0.999332, -0.036443, -0.002670, 0.999539, 0.900623,\n-0.019030, -0.490393, -0.095671, -0.047449, -0.976740, -0.209109, 0.005107, 0.209105, -0.977880, -0.998869, 0.047031, 0.006975, 1.000862, 0.875124,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n0.000000, -0.490393, -0.097545, -0.005744, -0.976741, -0.214348, 0.034559, 0.214029, -0.976216, -0.999964, 0.006941, -0.004830, 1.001623, 0.887927,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n-0.019030, 0.490393, -0.095671, -0.047449, 0.976740, -0.209109, 0.720722, 0.178423, 0.669869, -0.688169, 0.119771, 0.715597, 0.409185, 0.155461,\n0.000000, 0.490393, -0.097545, -0.005744, 0.976741, -0.214348, 0.692756, 0.158469, 0.703546, -0.721155, 0.144448, 0.677547, 0.415789, 0.165599,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n-0.037329, 0.490393, -0.090120, -0.087334, 0.976741, -0.195833, 0.744510, 0.194610, 0.638617, -0.657136, 0.091260, 0.748227, 0.403723, 0.144215,\n-0.019030, 0.490393, -0.095671, -0.047449, 0.976740, -0.209109, 0.720722, 0.178423, 0.669869, -0.688169, 0.119771, 0.715597, 0.409185, 0.155461,\n-0.037329, -0.490393, -0.090120, -0.087334, -0.976741, -0.195833, -0.029583, 0.199040, -0.979545, -0.996041, 0.082342, 0.033505, 0.997901, 0.862660,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n-0.019030, -0.490393, -0.095671, -0.047449, -0.976740, -0.209109, 0.005107, 0.209105, -0.977880, -0.998869, 0.047031, 0.006975, 1.000862, 0.875124,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n-0.054193, 0.490393, -0.081106, -0.123861, 0.976740, -0.175033, 0.764866, 0.206349, 0.610246, -0.629681, 0.058961, 0.774613, 0.399731, 0.132109,\n-0.037329, 0.490393, -0.090120, -0.087334, 0.976741, -0.195833, 0.744510, 0.194610, 0.638617, -0.657136, 0.091260, 0.748227, 0.403723, 0.144215,\n-0.054193, -0.490393, -0.081106, -0.123861, -0.976741, -0.175033, -0.067419, 0.184267, -0.980561, -0.990961, 0.112595, 0.072931, 0.993238, 0.850885,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n-0.037329, -0.490393, -0.090120, -0.087334, -0.976741, -0.195833, -0.029583, 0.199040, -0.979545, -0.996041, 0.082342, 0.033505, 0.997901, 0.862660,\n-0.068975, -0.490393, -0.068975, -0.137937, -0.980789, -0.137937, -0.127161, 0.155652, -0.979593, -0.984645, 0.120749, 0.126070, 0.987255, 0.840082,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n-0.054193, -0.490393, -0.081106, -0.123861, -0.976741, -0.175033, -0.067419, 0.184267, -0.980561, -0.990961, 0.112595, 0.072931, 0.993238, 0.850885,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n-0.068975, 0.490393, -0.068975, -0.155628, 0.976741, -0.147506, 0.781762, 0.213065, 0.586047, -0.607565, 0.023093, 0.793934, 0.397636, 0.119453,\n-0.054193, 0.490393, -0.081106, -0.123861, 0.976740, -0.175033, 0.764866, 0.206349, 0.610246, -0.629681, 0.058961, 0.774613, 0.399731, 0.132109,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n-0.081106, 0.490393, -0.054193, -0.181415, 0.976741, -0.114308, 0.793396, 0.214049, 0.569830, -0.593424, -0.016042, 0.804730, 0.397996, 0.106635,\n-0.068975, 0.490393, -0.068975, -0.155628, 0.976741, -0.147506, 0.781762, 0.213065, 0.586047, -0.607565, 0.023093, 0.793934, 0.397636, 0.119453,\n-0.081106, -0.490393, -0.054193, -0.188870, -0.973859, -0.126198, -0.111340, 0.148919, -0.982561, -0.971871, 0.166960, 0.166104, 0.980247, 0.830481,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n-0.068975, -0.490393, -0.068975, -0.137937, -0.980789, -0.137937, -0.127161, 0.155652, -0.979593, -0.984645, 0.120749, 0.126070, 0.987255, 0.840082,\n-0.090120, -0.490393, -0.037329, -0.200230, -0.976741, -0.076720, -0.201743, 0.117731, -0.972337, -0.956169, 0.177734, 0.232706, 0.972447, 0.822270,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n-0.081106, -0.490393, -0.054193, -0.188870, -0.973859, -0.126198, -0.111340, 0.148919, -0.982561, -0.971871, 0.166960, 0.166104, 0.980247, 0.830481,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n-0.090120, 0.490393, -0.037329, -0.200230, 0.976740, -0.076720, 0.795154, 0.207754, 0.569709, -0.589942, -0.057676, 0.805383, 0.401519, 0.094149,\n-0.081106, 0.490393, -0.054193, -0.181415, 0.976741, -0.114308, 0.793396, 0.214049, 0.569830, -0.593424, -0.016042, 0.804730, 0.397996, 0.106635,\n-0.095671, -0.490393, -0.019030, -0.191324, -0.980789, -0.038055, -0.260965, 0.088206, -0.961310, -0.944893, 0.173551, 0.277593, 0.964045, 0.815602,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n-0.090120, -0.490393, -0.037329, -0.200230, -0.976741, -0.076720, -0.201743, 0.117731, -0.972337, -0.956169, 0.177734, 0.232706, 0.972447, 0.822270,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n-0.095671, 0.490393, -0.019030, -0.191324, 0.980789, -0.038055, 0.769801, 0.173994, 0.614111, -0.685547, -0.105782, 0.720302, 0.409016, 0.082641,\n-0.090120, 0.490393, -0.037329, -0.200230, 0.976740, -0.076720, 0.795154, 0.207754, 0.569709, -0.589942, -0.057676, 0.805383, 0.401519, 0.094149,\n-0.415735, -0.277785, -0.000000, -0.849229, -0.528024, -0.000003, -0.103524, 0.166506, -0.980591, -0.517614, 0.832485, 0.197593, 0.051941, 0.554970,\n-0.353553, -0.353553, -0.000000, -0.729900, -0.683554, -0.000002, -0.140775, 0.150322, -0.978563, -0.668029, 0.713322, 0.211917, 0.045839, 0.619459,\n-0.407746, -0.277785, -0.081106, -0.805228, -0.567206, -0.172874, 0.047157, 0.229362, -0.972198, -0.591182, 0.790524, 0.159922, 0.076022, 0.567870,\n-0.415735, 0.277785, -0.000000, -0.842097, 0.539044, -0.017448, 0.204117, 0.288593, -0.935441, 0.490531, 0.778954, 0.390654, 0.101557, 0.170954,\n-0.461940, 0.191342, -0.000000, -0.923866, 0.382714, -0.001228, 0.101278, 0.241387, -0.965130, 0.370193, 0.894446, 0.250848, 0.087048, 0.233548,\n-0.453064, 0.191342, -0.090120, -0.901814, 0.400775, -0.161586, 0.311384, 0.343424, -0.886059, 0.302315, 0.852331, 0.426776, 0.122669, 0.253098,\n-0.353553, -0.353553, -0.000000, -0.729900, -0.683554, -0.000002, -0.140775, 0.150322, -0.978563, -0.668029, 0.713322, 0.211917, 0.045839, 0.619459,\n-0.277785, -0.415735, -0.000000, -0.582526, -0.812812, -0.000003, -0.182415, 0.130737, -0.974491, -0.789993, 0.566171, 0.235289, 0.038786, 0.683738,\n-0.346760, -0.353553, -0.068975, -0.670363, -0.729954, -0.133341, -0.023254, 0.200274, -0.979464, -0.741723, 0.653981, 0.148849, 0.067389, 0.631045,\n-0.461940, 0.191342, -0.000000, -0.923866, 0.382714, -0.001228, 0.101278, 0.241387, -0.965130, 0.370193, 0.894446, 0.250848, 0.087048, 0.233548,\n-0.490393, 0.097545, -0.000000, -0.980782, 0.195105, -0.000626, 0.044366, 0.219896, -0.974514, 0.190567, 0.958649, 0.211369, 0.077252, 0.297212,\n-0.480970, 0.097545, -0.095671, -0.956311, 0.208861, -0.204566, 0.264441, 0.319607, -0.909902, 0.126073, 0.925939, 0.356009, 0.110271, 0.315079,\n0.000000, 0.500000, -0.000000, 0.000000, 1.000000, -0.000000, 0.439407, -0.000000, 0.898288, -0.900302, 0.000000, 0.435266, 0.465044, 0.128343,\n-0.097545, 0.490393, -0.000000, -0.227152, 0.973859, 0.000000, 0.737153, 0.171940, 0.653485, -0.576689, -0.134512, 0.805814, 0.421200, 0.072930,\n-0.095671, 0.490393, -0.019030, -0.191324, 0.980789, -0.038055, 0.769801, 0.173994, 0.614111, -0.685547, -0.105782, 0.720302, 0.409016, 0.082641,\n-0.277785, -0.415735, -0.000000, -0.582526, -0.812812, -0.000003, -0.182415, 0.130737, -0.974491, -0.789993, 0.566171, 0.235289, 0.038786, 0.683738,\n-0.191342, -0.461940, -0.000000, -0.412766, -0.910837, -0.000002, -0.232681, 0.105446, -0.966820, -0.876357, 0.397140, 0.272541, 0.029845, 0.747594,\n-0.272447, -0.415735, -0.054193, -0.530494, -0.842235, -0.096007, -0.090736, 0.169025, -0.981426, -0.841533, 0.509627, 0.179173, 0.057290, 0.693759,\n-0.490393, 0.097545, -0.000000, -0.980782, 0.195105, -0.000626, 0.044366, 0.219896, -0.974514, 0.190567, 0.958649, 0.211369, 0.077252, 0.297212,\n-0.500000, 0.000000, -0.000000, -0.999462, -0.000000, 0.032810, -0.032196, 0.192512, -0.980766, 0.005789, 0.984313, 0.176334, 0.069762, 0.361393,\n-0.490392, 0.000000, -0.097545, -0.986658, 0.000000, -0.162807, 0.156253, 0.280865, -0.946942, -0.044537, 0.961857, 0.269905, 0.100444, 0.377879,\n-0.097545, 0.490393, -0.000000, -0.227152, 0.973859, 0.000000, 0.737153, 0.171940, 0.653485, -0.576689, -0.134512, 0.805814, 0.421200, 0.072930,\n-0.191342, 0.461940, -0.000000, -0.400759, 0.916136, -0.009327, 0.867461, 0.382703, 0.317885, -0.196013, -0.075792, 0.977668, 0.313686, 0.039415,\n-0.187665, 0.461940, -0.037329, -0.361210, 0.929163, -0.078640, 0.876848, 0.367143, 0.310393, -0.352518, -0.057991, 0.934007, 0.311350, 0.064544,\n-0.191342, -0.461940, -0.000000, -0.412766, -0.910837, -0.000002, -0.232681, 0.105446, -0.966820, -0.876357, 0.397140, 0.272541, 0.029845, 0.747594,\n-0.097545, -0.490393, -0.000000, -0.227152, -0.973859, 0.000000, -0.300081, 0.069994, -0.951342, -0.917744, 0.214063, 0.334550, 0.017133, 0.810598,\n-0.187665, -0.461940, -0.037329, -0.361210, -0.929163, -0.078640, -0.150569, 0.141344, -0.978443, -0.919609, 0.340987, 0.195057, 0.044374, 0.755575,\n-0.500000, 0.000000, -0.000000, -0.999462, -0.000000, 0.032810, -0.032196, 0.192512, -0.980766, 0.005789, 0.984313, 0.176334, 0.069762, 0.361393,\n-0.490393, -0.097545, -0.000000, -0.980782, -0.195105, -0.000626, -0.037587, 0.192093, -0.980657, -0.191292, 0.960975, 0.199836, 0.063447, 0.425835,\n-0.490392, 0.000000, -0.097545, -0.986658, 0.000000, -0.162807, 0.156253, 0.280865, -0.946942, -0.044537, 0.961857, 0.269905, 0.100444, 0.377879,\n-0.191342, 0.461940, -0.000000, -0.400759, 0.916136, -0.009327, 0.865221, 0.375100, -0.332705, 0.127173, 0.065707, 0.989702, 0.313686, 0.039415,\n-0.277785, 0.415735, -0.000000, -0.555535, 0.831489, -0.002683, 0.668118, 0.444458, -0.596720, 0.514926, 0.346562, 0.784057, 0.184327, 0.059204,\n-0.272447, 0.415735, -0.054193, -0.530494, 0.842235, -0.096007, 0.809223, 0.469433, -0.353257, 0.225910, 0.249629, 0.941621, 0.218761, 0.087986,\n-0.097545, -0.490393, -0.000000, -0.227152, -0.973859, 0.000000, -0.300081, 0.069994, -0.951342, -0.917744, 0.214063, 0.334550, 0.955203, 0.810598,\n0.000000, -0.500000, -0.000000, 0.000000, -1.000000, 0.000000, -0.431611, -0.000000, -0.902060, -0.900928, -0.000000, 0.433969, 0.934080, 0.871657,\n-0.095671, -0.490393, -0.019030, -0.191324, -0.980789, -0.038055, -0.260965, 0.088206, -0.961310, -0.944893, 0.173551, 0.277593, 0.964045, 0.815602,\n-0.490393, -0.097545, -0.000000, -0.980782, -0.195105, -0.000626, -0.037587, 0.192093, -0.980657, -0.191292, 0.960975, 0.199836, 0.063447, 0.425835,\n-0.461940, -0.191342, -0.000000, -0.931059, -0.364378, -0.018930, -0.053981, 0.188871, -0.980517, -0.360713, 0.911404, 0.198061, 0.057662, 0.490395,\n-0.480970, -0.097545, -0.095671, -0.961814, -0.195104, -0.191958, 0.135158, 0.271299, -0.952958, -0.238214, 0.942091, 0.236049, 0.091945, 0.441097,\n-0.277785, 0.415735, -0.000000, -0.555535, 0.831489, -0.002683, 0.668118, 0.444458, -0.596720, 0.514926, 0.346562, 0.784057, 0.184327, 0.059204,\n-0.353553, 0.353553, -0.000000, -0.716925, 0.697092, 0.008971, 0.305508, 0.325714, -0.894749, 0.613601, 0.624846, 0.482763, 0.127116, 0.110949,\n-0.346760, 0.353553, -0.068975, -0.670363, 0.729954, -0.133341, 0.615738, 0.446929, -0.648938, 0.419535, 0.521063, 0.743293, 0.167754, 0.135879,\n-0.461940, -0.191342, -0.000000, -0.931059, -0.364378, -0.018930, -0.053981, 0.188871, -0.980517, -0.360713, 0.911404, 0.198061, 0.057662, 0.490395,\n-0.415735, -0.277785, -0.000000, -0.849229, -0.528024, -0.000003, -0.103524, 0.166506, -0.980591, -0.517614, 0.832485, 0.197593, 0.051941, 0.554970,\n-0.453064, -0.191342, -0.090120, -0.905874, -0.382714, -0.181443, 0.088287, 0.248358, -0.964637, -0.414650, 0.888692, 0.195685, 0.084004, 0.504490,\n-0.353553, 0.353553, -0.000000, -0.716925, 0.697092, 0.008971, 0.305508, 0.325714, -0.894749, 0.613601, 0.624846, 0.482763, 0.127116, 0.110949,\n-0.415735, 0.277785, -0.000000, -0.842097, 0.539044, -0.017448, 0.204117, 0.288593, -0.935441, 0.490531, 0.778954, 0.390654, 0.101557, 0.170954,\n-0.407746, 0.277785, -0.081106, -0.805228, 0.567206, -0.172874, 0.451509, 0.397513, -0.798826, 0.392085, 0.728018, 0.562369, 0.140040, 0.192730,\n-0.353553, -0.353553, -0.000000, -0.729900, -0.683554, -0.000002, -0.140775, 0.150322, -0.978563, -0.668029, 0.713322, 0.211917, 0.045839, 0.619459,\n-0.346760, -0.353553, 0.068975, -0.693044, -0.707137, 0.140172, -0.277094, 0.081800, -0.957355, -0.665774, 0.702406, 0.251738, 0.024121, 0.611887,\n-0.277785, -0.415735, -0.000000, -0.582526, -0.812812, -0.000003, -0.182415, 0.130737, -0.974491, -0.789993, 0.566171, 0.235289, 0.038786, 0.683738,\n-0.461940, 0.191342, -0.000000, -0.923866, 0.382714, -0.001228, 0.101278, 0.241387, -0.965130, 0.370193, 0.894446, 0.250848, 0.087048, 0.233548,\n-0.453064, 0.191342, 0.090120, -0.916862, 0.364377, 0.163075, -0.109371, 0.163588, -0.980447, 0.385547, 0.914179, 0.125021, 0.048498, 0.219973,\n-0.490393, 0.097545, -0.000000, -0.980782, 0.195105, -0.000626, 0.044366, 0.219896, -0.974514, 0.190567, 0.958649, 0.211369, 0.077252, 0.297212,\n-0.277785, -0.415735, -0.000000, -0.582526, -0.812812, -0.000003, -0.182415, 0.130737, -0.974491, -0.789993, 0.566171, 0.235289, 0.038786, 0.683738,\n-0.272448, -0.415735, 0.054193, -0.544337, -0.831489, 0.111008, -0.298466, 0.068298, -0.951973, -0.783031, 0.551109, 0.288344, 0.020139, 0.677216,\n-0.191342, -0.461940, -0.000000, -0.412766, -0.910837, -0.000002, -0.232681, 0.105446, -0.966820, -0.876357, 0.397140, 0.272541, 0.029845, 0.747594,\n-0.490393, 0.097545, -0.000000, -0.980782, 0.195105, -0.000626, 0.044366, 0.219896, -0.974514, 0.190567, 0.958649, 0.211369, 0.077252, 0.297212,\n-0.480970, 0.097545, 0.095671, -0.961806, 0.181272, 0.205110, -0.182105, 0.135711, -0.973869, 0.201708, 0.975890, 0.083381, 0.042455, 0.285041,\n-0.500000, 0.000000, -0.000000, -0.999462, -0.000000, 0.032810, -0.032196, 0.192512, -0.980766, 0.005789, 0.984313, 0.176334, 0.069762, 0.361393,\n-0.191342, 0.461940, -0.000000, -0.400759, 0.916136, -0.009327, 0.867461, 0.382703, 0.317885, -0.196013, -0.075792, 0.977668, 0.313686, 0.039415,\n-0.097545, 0.490393, -0.000000, -0.227152, 0.973859, 0.000000, 0.737153, 0.171940, 0.653485, -0.576689, -0.134512, 0.805814, 0.421200, 0.072930,\n-0.187665, 0.461940, 0.037329, -0.388811, 0.918409, 0.073153, 0.727220, 0.257180, 0.636404, -0.511054, -0.281057, 0.812300, 0.334831, 0.015378,\n-0.191342, -0.461940, -0.000000, -0.412766, -0.910837, -0.000002, -0.232681, 0.105446, -0.966820, -0.876357, 0.397140, 0.272541, 0.029845, 0.747594,\n-0.187665, -0.461940, 0.037329, -0.374717, -0.923888, 0.077578, -0.328642, 0.054119, -0.942903, -0.865090, 0.378509, 0.329166, 0.015120, 0.742415,\n-0.097545, -0.490393, -0.000000, -0.227152, -0.973859, 0.000000, -0.300081, 0.069994, -0.951342, -0.917744, 0.214063, 0.334550, 0.017133, 0.810598,\n-0.480970, -0.097545, 0.095671, -0.967698, -0.162818, 0.192487, -0.213135, 0.120517, -0.969561, -0.136223, 0.980125, 0.144214, 0.034240, 0.415668,\n-0.490393, -0.097545, -0.000000, -0.980782, -0.195105, -0.000626, -0.037587, 0.192093, -0.980657, -0.191292, 0.960975, 0.199836, 0.063447, 0.425835,\n-0.500000, 0.000000, -0.000000, -0.999462, -0.000000, 0.032810, -0.032196, 0.192512, -0.980766, 0.005789, 0.984313, 0.176334, 0.069762, 0.361393,\n-0.191342, 0.461940, -0.000000, -0.400759, 0.916136, -0.009327, 0.865221, 0.375100, -0.332705, 0.127173, 0.065707, 0.989702, 0.313686, 0.039415,\n-0.187665, 0.461940, 0.037329, -0.388811, 0.918409, 0.073153, 0.865284, 0.391278, -0.313345, -0.266068, -0.187948, 0.945454, 0.334831, 0.015378,\n-0.277785, 0.415735, -0.000000, -0.555535, 0.831489, -0.002683, 0.791556, 0.527861, -0.307897, -0.272763, -0.179189, 0.945247, 0.184327, 0.059204,\n-0.453064, -0.191342, 0.090120, -0.913669, -0.369648, 0.169024, -0.223858, 0.110540, -0.968333, -0.340064, 0.922966, 0.180251, 0.030880, 0.481076,\n-0.461940, -0.191342, -0.000000, -0.931059, -0.364378, -0.018930, -0.053981, 0.188871, -0.980517, -0.360713, 0.911404, 0.198061, 0.057662, 0.490395,\n-0.490393, -0.097545, -0.000000, -0.980782, -0.195105, -0.000626, -0.037587, 0.192093, -0.980657, -0.191292, 0.960975, 0.199836, 0.063447, 0.425835,\n-0.277785, 0.415735, -0.000000, -0.555535, 0.831489, -0.002683, 0.668118, 0.444458, -0.596720, 0.514926, 0.346562, 0.784057, 0.184327, 0.059204,\n-0.272448, 0.415735, 0.054193, -0.571333, 0.812813, 0.113643, 0.539261, 0.476166, -0.694596, 0.644250, 0.358383, 0.675650, 0.130135, 0.033229,\n-0.353553, 0.353553, -0.000000, -0.716925, 0.697092, 0.008971, 0.305508, 0.325714, -0.894749, 0.613601, 0.624846, 0.482763, 0.127116, 0.110949,\n-0.461940, -0.191342, -0.000000, -0.931059, -0.364378, -0.018930, -0.053981, 0.188871, -0.980517, -0.360713, 0.911404, 0.198061, 0.057662, 0.490395,\n-0.453064, -0.191342, 0.090120, -0.913669, -0.369648, 0.169024, -0.223858, 0.110540, -0.968333, -0.340064, 0.922966, 0.180251, 0.030880, 0.481076,\n-0.415735, -0.277785, -0.000000, -0.849229, -0.528024, -0.000003, -0.103524, 0.166506, -0.980591, -0.517614, 0.832485, 0.197593, 0.051941, 0.554970,\n-0.407747, 0.277785, 0.081106, -0.825138, 0.543823, 0.152983, -0.041640, 0.211515, -0.976487, 0.563453, 0.811807, 0.153267, 0.057879, 0.155328,\n-0.415735, 0.277785, -0.000000, -0.842097, 0.539044, -0.017448, 0.204117, 0.288593, -0.935441, 0.490531, 0.778954, 0.390654, 0.101557, 0.170954,\n-0.353553, 0.353553, -0.000000, -0.716925, 0.697092, 0.008971, 0.305508, 0.325714, -0.894749, 0.613601, 0.624846, 0.482763, 0.127116, 0.110949,\n-0.415735, -0.277785, -0.000000, -0.849229, -0.528024, -0.000003, -0.103524, 0.166506, -0.980591, -0.517614, 0.832485, 0.197593, 0.051941, 0.554970,\n-0.407747, -0.277785, 0.081106, -0.815119, -0.555608, 0.163956, -0.255986, 0.091573, -0.962333, -0.520218, 0.826582, 0.214791, 0.027594, 0.546493,\n-0.353553, -0.353553, -0.000000, -0.729900, -0.683554, -0.000002, -0.140775, 0.150322, -0.978563, -0.668029, 0.713322, 0.211917, 0.045839, 0.619459,\n-0.415735, 0.277785, -0.000000, -0.842097, 0.539044, -0.017448, 0.204117, 0.288593, -0.935441, 0.490531, 0.778954, 0.390654, 0.101557, 0.170954,\n-0.407747, 0.277785, 0.081106, -0.825138, 0.543823, 0.152983, -0.041640, 0.211515, -0.976487, 0.563453, 0.811807, 0.153267, 0.057879, 0.155328,\n-0.461940, 0.191342, -0.000000, -0.923866, 0.382714, -0.001228, 0.101278, 0.241387, -0.965130, 0.370193, 0.894446, 0.250848, 0.087048, 0.233548,\n-0.187665, -0.461940, 0.037329, -0.374717, -0.923888, 0.077578, -0.328642, 0.054119, -0.942903, -0.865090, 0.378509, 0.329166, 0.953191, 0.742415,\n-0.176777, -0.461940, 0.073223, -0.338927, -0.929163, 0.147597, -0.417462, 0.007936, -0.908660, -0.841006, 0.369541, 0.395157, 0.938354, 0.740118,\n-0.095671, -0.490393, 0.019030, -0.209109, -0.976740, 0.047449, -0.365074, 0.032961, -0.930395, -0.899781, 0.211182, 0.381832, 0.946066, 0.807346,\n-0.490393, 0.000000, 0.097545, -0.980786, -0.000000, 0.195089, -0.193401, 0.131241, -0.972302, 0.025229, 0.991603, 0.126836, 0.037959, 0.350306,\n-0.461940, 0.000000, 0.191342, -0.935939, 0.000000, 0.352163, -0.351751, 0.048347, -0.934844, 0.019936, 0.998396, 0.052983, 0.005423, 0.345283,\n-0.480970, -0.097545, 0.095671, -0.967698, -0.162818, 0.192487, -0.213135, 0.120517, -0.969561, -0.136223, 0.980125, 0.144214, 0.034240, 0.415668,\n-0.256640, 0.415735, 0.106304, -0.501570, 0.842235, 0.197657, 0.571317, 0.494038, -0.655380, 0.745951, 0.305324, 0.591891, 0.032509, 0.016900,\n-0.272448, 0.415735, 0.054193, -0.571333, 0.812813, 0.113643, 0.539261, 0.476166, -0.694596, 0.644250, 0.358383, 0.675650, 0.130135, 0.033229,\n-0.187665, 0.461940, 0.037329, -0.388811, 0.918409, 0.073153, 0.722431, 0.353191, -0.594432, 0.435443, 0.113211, 0.893069, 0.334831, 0.015378,\n-0.480970, -0.097545, 0.095671, -0.967698, -0.162818, 0.192487, -0.213135, 0.120517, -0.969561, -0.136223, 0.980125, 0.144214, 0.034240, 0.415668,\n-0.453064, -0.097545, 0.187665, -0.898027, -0.208865, 0.387200, -0.400145, 0.021991, -0.916188, -0.186296, 0.977851, 0.095402, 0.004575, 0.411089,\n-0.453064, -0.191342, 0.090120, -0.913669, -0.369648, 0.169024, -0.223858, 0.110540, -0.968333, -0.340064, 0.922966, 0.180251, 0.030880, 0.481076,\n-0.326641, 0.353553, 0.135299, -0.631468, 0.729955, 0.261563, -0.275142, 0.104439, -0.955714, 0.701533, 0.681517, -0.208291, 0.014728, 0.082226,\n-0.346760, 0.353553, 0.068975, -0.703949, 0.692994, 0.155612, 0.004292, 0.223241, -0.974754, 0.706666, 0.661393, 0.251362, 0.076103, 0.091824,\n-0.272448, 0.415735, 0.054193, -0.571333, 0.812813, 0.113643, 0.024842, 0.155531, -0.987519, 0.816774, 0.576669, -0.018255, 0.130135, 0.033229,\n-0.453064, -0.191342, 0.090120, -0.913669, -0.369648, 0.169024, -0.223858, 0.110540, -0.968333, -0.340064, 0.922966, 0.180251, 0.030880, 0.481076,\n-0.426777, -0.191342, 0.176777, -0.852963, -0.400772, 0.334417, -0.377536, 0.031270, -0.925467, -0.361266, 0.915710, 0.175961, 0.003813, 0.476897,\n-0.407747, -0.277785, 0.081106, -0.815119, -0.555608, 0.163956, -0.255986, 0.091573, -0.962333, -0.520218, 0.826582, 0.214791, 0.027594, 0.546493,\n-0.384089, 0.277785, 0.159095, -0.756029, 0.567206, 0.326646, -0.357502, 0.060193, -0.931970, 0.532505, 0.823195, -0.196945, 0.010109, 0.147925,\n-0.407747, 0.277785, 0.081106, -0.825138, 0.543823, 0.152983, -0.041640, 0.211515, -0.976487, 0.563453, 0.811807, 0.153267, 0.057879, 0.155328,\n-0.346760, 0.353553, 0.068975, -0.703949, 0.692994, 0.155612, 0.004292, 0.223241, -0.974754, 0.706666, 0.661393, 0.251362, 0.076103, 0.091824,\n-0.407747, -0.277785, 0.081106, -0.815119, -0.555608, 0.163956, -0.255986, 0.091573, -0.962333, -0.520218, 0.826582, 0.214791, 0.027594, 0.546493,\n-0.384089, -0.277785, 0.159095, -0.767470, -0.555607, 0.319829, -0.396341, 0.019091, -0.917905, -0.504907, 0.831272, 0.232499, 0.003073, 0.542706,\n-0.346760, -0.353553, 0.068975, -0.693044, -0.707137, 0.140172, -0.277094, 0.081800, -0.957355, -0.665774, 0.702406, 0.251738, 0.024121, 0.611887,\n-0.426777, 0.191342, 0.176777, -0.864751, 0.382538, 0.325378, -0.324074, 0.069883, -0.943447, 0.386897, 0.920540, -0.054004, 0.007867, 0.213692,\n-0.453064, 0.191342, 0.090120, -0.916862, 0.364377, 0.163075, -0.109371, 0.163588, -0.980447, 0.385547, 0.914179, 0.125021, 0.048498, 0.219973,\n-0.407747, 0.277785, 0.081106, -0.825138, 0.543823, 0.152983, -0.041640, 0.211515, -0.976487, 0.563453, 0.811807, 0.153267, 0.057879, 0.155328,\n-0.346760, -0.353553, 0.068975, -0.693044, -0.707137, 0.140172, -0.277094, 0.081800, -0.957355, -0.665774, 0.702406, 0.251738, 0.024121, 0.611887,\n-0.326641, -0.353553, 0.135299, -0.652380, -0.707137, 0.272688, -0.399798, 0.015427, -0.916473, -0.643679, 0.706901, 0.293203, 0.002293, 0.608514,\n-0.272448, -0.415735, 0.054193, -0.544337, -0.831489, 0.111008, -0.298466, 0.068298, -0.951973, -0.783031, 0.551109, 0.288344, 0.020139, 0.677216,\n-0.453064, 0.191342, 0.090120, -0.916862, 0.364377, 0.163075, -0.109371, 0.163588, -0.980447, 0.385547, 0.914179, 0.125021, 0.048498, 0.219973,\n-0.426777, 0.191342, 0.176777, -0.864751, 0.382538, 0.325378, -0.324074, 0.069883, -0.943447, 0.386897, 0.920540, -0.054004, 0.007867, 0.213692,\n-0.480970, 0.097545, 0.095671, -0.961806, 0.181272, 0.205110, -0.182105, 0.135711, -0.973869, 0.201708, 0.975890, 0.083381, 0.042455, 0.285041,\n-0.272448, -0.415735, 0.054193, -0.544337, -0.831489, 0.111008, -0.298466, 0.068298, -0.951973, -0.783031, 0.551109, 0.288344, 0.958210, 0.677216,\n-0.256640, -0.415735, 0.106304, -0.512220, -0.831490, 0.215071, -0.404111, 0.012369, -0.914626, -0.756546, 0.555360, 0.345271, 0.939473, 0.674319,\n-0.187665, -0.461940, 0.037329, -0.374717, -0.923888, 0.077578, -0.328642, 0.054119, -0.942903, -0.865090, 0.378509, 0.329166, 0.953191, 0.742415,\n-0.461940, 0.000000, 0.191342, -0.935939, 0.000000, 0.352163, -0.351751, 0.048347, -0.934844, 0.019936, 0.998396, 0.052983, 0.005423, 0.345283,\n-0.490393, 0.000000, 0.097545, -0.980786, -0.000000, 0.195089, -0.193401, 0.131241, -0.972302, 0.025229, 0.991603, 0.126836, 0.037959, 0.350306,\n-0.480970, 0.097545, 0.095671, -0.961806, 0.181272, 0.205110, -0.182105, 0.135711, -0.973869, 0.201708, 0.975890, 0.083381, 0.042455, 0.285041,\n-0.176777, 0.461940, 0.073223, -0.352384, 0.923888, 0.149190, 0.543442, 0.072225, 0.836334, -0.725657, -0.370409, 0.579843, 0.420408, -0.002041,\n-0.187665, 0.461940, 0.037329, -0.388811, 0.918409, 0.073153, 0.727220, 0.257180, 0.636404, -0.511054, -0.281057, 0.812300, 0.334831, 0.015378,\n-0.095671, 0.490393, 0.019030, -0.209109, 0.976740, 0.047449, 0.634606, 0.098625, 0.766517, -0.730319, -0.188252, 0.656655, 0.438189, 0.065976,\n-0.326641, -0.353553, 0.135299, -0.652380, -0.707137, 0.272688, -0.399798, 0.015427, -0.916473, -0.643679, 0.706901, 0.293203, 0.940364, 0.608514,\n-0.293969, -0.353553, 0.196424, -0.586645, -0.707137, 0.394721, -0.515355, -0.050005, -0.855517, -0.624613, 0.705315, 0.335246, 0.918510, 0.609427,\n-0.256640, -0.415735, 0.106304, -0.512220, -0.831490, 0.215071, -0.404111, 0.012369, -0.914626, -0.756546, 0.555360, 0.345271, 0.939473, 0.674319,\n-0.426777, 0.191342, 0.176777, -0.864751, 0.382538, 0.325378, -0.324074, 0.069883, -0.943447, 0.386897, 0.920540, -0.054004, 0.945938, 0.213692,\n-0.384089, 0.191342, 0.256640, -0.784657, 0.382537, 0.487830, -0.546746, -0.056118, -0.835416, 0.299004, 0.922863, -0.242735, 0.904787, 0.215406,\n-0.453064, 0.097545, 0.187665, -0.893338, 0.195006, 0.404870, -0.407862, 0.026410, -0.912661, 0.176343, 0.980797, -0.083305, 0.944528, 0.279482,\n-0.256640, -0.415735, 0.106304, -0.512220, -0.831490, 0.215071, -0.404111, 0.012369, -0.914626, -0.756546, 0.555360, 0.345271, 0.939473, 0.674319,\n-0.230970, -0.415735, 0.154329, -0.460422, -0.831489, 0.310867, -0.503538, -0.043772, -0.862863, -0.729441, 0.553953, 0.401314, 0.920717, 0.675103,\n-0.176777, -0.461940, 0.073223, -0.338927, -0.929163, 0.147597, -0.417462, 0.007936, -0.908660, -0.841006, 0.369541, 0.395157, 0.938354, 0.740118,\n-0.415735, 0.000000, 0.277785, -0.849250, 0.000000, 0.527990, -0.527366, -0.048621, -0.848246, -0.022233, 0.999113, -0.035762, 0.910782, 0.346647,\n-0.461940, 0.000000, 0.191342, -0.935939, 0.000000, 0.352163, -0.351751, 0.048347, -0.934844, 0.019936, 0.998396, 0.052983, 0.943494, 0.345283,\n-0.453064, 0.097545, 0.187665, -0.893338, 0.195006, 0.404870, -0.407862, 0.026410, -0.912661, 0.176343, 0.980797, -0.083305, 0.944528, 0.279482,\n-0.159095, 0.461940, 0.106304, -0.303619, 0.929163, 0.210883, 0.262363, -0.131243, 0.956003, -0.947559, -0.317631, 0.035252, 0.559425, 0.003678,\n-0.176777, 0.461940, 0.073223, -0.352384, 0.923888, 0.149190, 0.543442, 0.072225, 0.836334, -0.725657, -0.370409, 0.579843, 0.420408, -0.002041,\n-0.090120, 0.490393, 0.037329, -0.195833, 0.976741, 0.087334, 0.450796, 0.010576, 0.892564, -0.819617, -0.211923, 0.532274, 0.458801, 0.062690,\n-0.081106, -0.490393, 0.054193, -0.188870, -0.973859, 0.126198, -0.473215, -0.022346, -0.880663, -0.864501, 0.225849, 0.449032, 0.927429, 0.806293,\n-0.090120, -0.490393, 0.037329, -0.180222, -0.980789, 0.074651, -0.415009, 0.007012, -0.909790, -0.889096, 0.194896, 0.414155, 0.936766, 0.805903,\n-0.176777, -0.461940, 0.073223, -0.338927, -0.929163, 0.147597, -0.417462, 0.007936, -0.908660, -0.841006, 0.369541, 0.395157, 0.938354, 0.740118,\n-0.461940, 0.000000, 0.191342, -0.935939, 0.000000, 0.352163, -0.351751, 0.048347, -0.934844, 0.019936, 0.998396, 0.052983, 0.943494, 0.345283,\n-0.415735, 0.000000, 0.277785, -0.849250, 0.000000, 0.527990, -0.527366, -0.048621, -0.848246, -0.022233, 0.999113, -0.035762, 0.910782, 0.346647,\n-0.453064, -0.097545, 0.187665, -0.898027, -0.208865, 0.387200, -0.400145, 0.021991, -0.916188, -0.186296, 0.977851, 0.095402, 0.942646, 0.411089,\n-0.230970, 0.415735, 0.154329, -0.475288, 0.823575, 0.309558, -0.699189, -0.139982, -0.701099, 0.382476, 0.510258, -0.770291, 0.849384, 0.021864,\n-0.256640, 0.415735, 0.106304, -0.501570, 0.842235, 0.197657, -0.708526, -0.268818, -0.652478, -0.127288, 0.154142, -0.979815, 0.970580, 0.016900,\n-0.176777, 0.461940, 0.073223, -0.352384, 0.923888, 0.149190, -0.753027, -0.185261, -0.631370, -0.117655, 0.114415, -0.986441, 0.420408, -0.002041,\n-0.384089, -0.191342, 0.256640, -0.784657, -0.382537, 0.487830, -0.512101, -0.043519, -0.857822, -0.349112, 0.922937, 0.162196, 0.914751, 0.478029,\n-0.426777, -0.191342, 0.176777, -0.852963, -0.400772, 0.334417, -0.377536, 0.031270, -0.925467, -0.361266, 0.915710, 0.175961, 0.941884, 0.476897,\n-0.453064, -0.097545, 0.187665, -0.898027, -0.208865, 0.387200, -0.400145, 0.021991, -0.916188, -0.186296, 0.977851, 0.095402, 0.942646, 0.411089,\n-0.256640, 0.415735, 0.106304, -0.501570, 0.842235, 0.197657, -0.166634, 0.130142, -0.977392, 0.810822, 0.537323, -0.232060, 0.970580, 0.016900,\n-0.230970, 0.415735, 0.154329, -0.475288, 0.823575, 0.309558, -0.699189, -0.139982, -0.701099, 0.382476, 0.510258, -0.770291, 0.849384, 0.021864,\n-0.326641, 0.353553, 0.135299, -0.631468, 0.729955, 0.261563, -0.275142, 0.104439, -0.955714, 0.701533, 0.681517, -0.208291, 0.952799, 0.082226,\n-0.426777, -0.191342, 0.176777, -0.852963, -0.400772, 0.334417, -0.377536, 0.031270, -0.925467, -0.361266, 0.915710, 0.175961, 0.941884, 0.476897,\n-0.384089, -0.191342, 0.256640, -0.784657, -0.382537, 0.487830, -0.512101, -0.043519, -0.857822, -0.349112, 0.922937, 0.162196, 0.914751, 0.478029,\n-0.384089, -0.277785, 0.159095, -0.767470, -0.555607, 0.319829, -0.396341, 0.019091, -0.917905, -0.504907, 0.831272, 0.232499, 0.941144, 0.542706,\n-0.326641, 0.353553, 0.135299, -0.631468, 0.729955, 0.261563, -0.275142, 0.104439, -0.955714, 0.701533, 0.681517, -0.208291, 0.952799, 0.082226,\n-0.293969, 0.353553, 0.196424, -0.606889, 0.683554, 0.405511, -0.627957, -0.099639, -0.771843, 0.403052, 0.704434, -0.584228, 0.888292, 0.084903,\n-0.384089, 0.277785, 0.159095, -0.756029, 0.567206, 0.326646, -0.357502, 0.060193, -0.931970, 0.532505, 0.823195, -0.196945, 0.948180, 0.147925,\n-0.384089, -0.277785, 0.159095, -0.767470, -0.555607, 0.319829, -0.396341, 0.019091, -0.917905, -0.504907, 0.831272, 0.232499, 0.941144, 0.542706,\n-0.345671, -0.277785, 0.230970, -0.690329, -0.555606, 0.463409, -0.526129, -0.054145, -0.848679, -0.498075, 0.829528, 0.252596, 0.916581, 0.543731,\n-0.326641, -0.353553, 0.135299, -0.652380, -0.707137, 0.272688, -0.399798, 0.015427, -0.916473, -0.643679, 0.706901, 0.293203, 0.940364, 0.608514,\n-0.384089, 0.191342, 0.256640, -0.784657, 0.382537, 0.487830, -0.546746, -0.056118, -0.835416, 0.299004, 0.922863, -0.242735, 0.904787, 0.215406,\n-0.426777, 0.191342, 0.176777, -0.864751, 0.382538, 0.325378, -0.324074, 0.069883, -0.943447, 0.386897, 0.920540, -0.054004, 0.945938, 0.213692,\n-0.384089, 0.277785, 0.159095, -0.756029, 0.567206, 0.326646, -0.357502, 0.060193, -0.931970, 0.532505, 0.823195, -0.196945, 0.948180, 0.147925,\n-0.384089, -0.191342, 0.256640, -0.784657, -0.382537, 0.487830, -0.512101, -0.043519, -0.857822, -0.349112, 0.922937, 0.162196, 0.914751, 0.478029,\n-0.326641, -0.191342, 0.326641, -0.674410, -0.382537, 0.631535, -0.640365, -0.122758, -0.758197, -0.367033, 0.915850, 0.162803, 0.887781, 0.484426,\n-0.345671, -0.277785, 0.230970, -0.690329, -0.555606, 0.463409, -0.526129, -0.054145, -0.848679, -0.498075, 0.829528, 0.252596, 0.916581, 0.543731,\n-0.293969, 0.277785, 0.293969, -0.586657, 0.555607, 0.589182, -0.788526, -0.226098, -0.571933, 0.186215, 0.800587, -0.569548, 0.853037, 0.161076,\n-0.345671, 0.277785, 0.230970, -0.690488, 0.539041, 0.482349, -0.614333, -0.084979, -0.784458, 0.339030, 0.830224, -0.442477, 0.899334, 0.149958,\n-0.293969, 0.353553, 0.196424, -0.606889, 0.683554, 0.405511, -0.627957, -0.099639, -0.771843, 0.403052, 0.704434, -0.584228, 0.888292, 0.084903,\n-0.345671, -0.277785, 0.230970, -0.690329, -0.555606, 0.463409, -0.526129, -0.054145, -0.848679, -0.498075, 0.829528, 0.252596, 0.916581, 0.543731,\n-0.293969, -0.277785, 0.293969, -0.586657, -0.555607, 0.589182, -0.641183, -0.125746, -0.757016, -0.496410, 0.821541, 0.280443, 0.892120, 0.549535,\n-0.293969, -0.353553, 0.196424, -0.586645, -0.707137, 0.394721, -0.515355, -0.050005, -0.855517, -0.624613, 0.705315, 0.335246, 0.918510, 0.609427,\n-0.326641, 0.191342, 0.326641, -0.674410, 0.382537, 0.631535, -0.724649, -0.178874, -0.665498, 0.153103, 0.909186, -0.387221, 0.864885, 0.224918,\n-0.384089, 0.191342, 0.256640, -0.784657, 0.382537, 0.487830, -0.546746, -0.056118, -0.835416, 0.299004, 0.922863, -0.242735, 0.904787, 0.215406,\n-0.345671, 0.277785, 0.230970, -0.690488, 0.539041, 0.482349, -0.614333, -0.084979, -0.784458, 0.339030, 0.830224, -0.442477, 0.899334, 0.149958,\n-0.293969, -0.353553, 0.196424, -0.586645, -0.707137, 0.394721, -0.515355, -0.050005, -0.855517, -0.624613, 0.705315, 0.335246, 0.918510, 0.609427,\n-0.250000, -0.353553, 0.250000, -0.498368, -0.707137, 0.501585, -0.619865, -0.113856, -0.776405, -0.605821, 0.697907, 0.381977, 0.896720, 0.614601,\n-0.230970, -0.415735, 0.154329, -0.460422, -0.831489, 0.310867, -0.503538, -0.043772, -0.862863, -0.729441, 0.553953, 0.401314, 0.920717, 0.675103,\n-0.384089, 0.191342, 0.256640, -0.784657, 0.382537, 0.487830, -0.546746, -0.056118, -0.835416, 0.299004, 0.922863, -0.242735, 0.904787, 0.215406,\n-0.326641, 0.191342, 0.326641, -0.674410, 0.382537, 0.631535, -0.724649, -0.178874, -0.665498, 0.153103, 0.909186, -0.387221, 0.864885, 0.224918,\n-0.407746, 0.097545, 0.272448, -0.797188, 0.195006, 0.571370, -0.593675, -0.081185, -0.800599, 0.090166, 0.974241, -0.206702, 0.908239, 0.280994,\n-0.230970, -0.415735, 0.154329, -0.460422, -0.831489, 0.310867, -0.503538, -0.043772, -0.862863, -0.729441, 0.553953, 0.401314, 0.920717, 0.675103,\n-0.196424, -0.415735, 0.196424, -0.390927, -0.831489, 0.394718, -0.594841, -0.099022, -0.797721, -0.700439, 0.546965, 0.458491, 0.902010, 0.679551,\n-0.159095, -0.461940, 0.106304, -0.328037, -0.916136, 0.230404, -0.496723, -0.040181, -0.866979, -0.799560, 0.399154, 0.448753, 0.923492, 0.740739,\n-0.353553, 0.000000, 0.353554, -0.729928, -0.000000, 0.683524, -0.676348, -0.144515, -0.722266, -0.093881, 0.990523, -0.100254, 0.878497, 0.354309,\n-0.415735, 0.000000, 0.277785, -0.849250, 0.000000, 0.527990, -0.527366, -0.048621, -0.848246, -0.022233, 0.999113, -0.035762, 0.910782, 0.346647,\n-0.407746, 0.097545, 0.272448, -0.797188, 0.195006, 0.571370, -0.593675, -0.081185, -0.800599, 0.090166, 0.974241, -0.206702, 0.908239, 0.280994,\n-0.081106, 0.490393, 0.054193, -0.162196, 0.980789, 0.108375, 0.362059, -0.043016, 0.931162, -0.975824, -0.175734, 0.129942, 0.480346, 0.063591,\n-0.068975, 0.490393, 0.068975, -0.160620, 0.973859, 0.160620, 0.049797, -0.154530, 0.986732, -0.984709, -0.169230, 0.041350, 0.499668, 0.068531,\n-0.159095, 0.461940, 0.106304, -0.303619, 0.929163, 0.210883, 0.262363, -0.131243, 0.956003, -0.947559, -0.317631, 0.035252, 0.559425, 0.003678,\n-0.159095, -0.461940, 0.106304, -0.328037, -0.916136, 0.230404, -0.496723, -0.040181, -0.866979, -0.799560, 0.399154, 0.448753, 0.923492, 0.740739,\n-0.135299, -0.461940, 0.135299, -0.256643, -0.929163, 0.266065, -0.560977, -0.080965, -0.823863, -0.779982, 0.361677, 0.510703, 0.908692, 0.744267,\n-0.081106, -0.490393, 0.054193, -0.188870, -0.973859, 0.126198, -0.473215, -0.022346, -0.880663, -0.864501, 0.225849, 0.449032, 0.927429, 0.806293,\n-0.415735, 0.000000, 0.277785, -0.849250, 0.000000, 0.527990, -0.527366, -0.048621, -0.848246, -0.022233, 0.999113, -0.035762, 0.910782, 0.346647,\n-0.353553, 0.000000, 0.353554, -0.729928, -0.000000, 0.683524, -0.676348, -0.144515, -0.722266, -0.093881, 0.990523, -0.100254, 0.878497, 0.354309,\n-0.407746, -0.097545, 0.272448, -0.797188, -0.195006, 0.571370, -0.569116, -0.073122, -0.818999, -0.207860, 0.977191, 0.043499, 0.912871, 0.412331,\n-0.196424, 0.415735, 0.196424, -0.390926, 0.831489, 0.394718, -0.920222, -0.362023, -0.148766, 0.029442, 0.439922, -0.897554, 0.773239, 0.043658,\n-0.230970, 0.415735, 0.154329, -0.475288, 0.823575, 0.309558, -0.850522, -0.520133, 0.077935, -0.265201, 0.201371, -0.942930, 0.849384, 0.021864,\n-0.159095, 0.461940, 0.106304, -0.303619, 0.929163, 0.210883, -0.932514, -0.335209, 0.134361, -0.246607, 0.137154, -0.959361, 0.559425, 0.003678,\n-0.326641, -0.191342, 0.326641, -0.674410, -0.382537, 0.631535, -0.640365, -0.122758, -0.758197, -0.367033, 0.915850, 0.162803, 0.887781, 0.484426,\n-0.384089, -0.191342, 0.256640, -0.784657, -0.382537, 0.487830, -0.512101, -0.043519, -0.857822, -0.349112, 0.922937, 0.162196, 0.914751, 0.478029,\n-0.407746, -0.097545, 0.272448, -0.797188, -0.195006, 0.571370, -0.569116, -0.073122, -0.818999, -0.207860, 0.977191, 0.043499, 0.912871, 0.412331,\n-0.250000, 0.353553, 0.250000, -0.498368, 0.707137, 0.501585, -0.847765, -0.276403, -0.452654, 0.171823, 0.647638, -0.742322, 0.830912, 0.099015,\n-0.293969, 0.353553, 0.196424, -0.606889, 0.683554, 0.405511, -0.627957, -0.099639, -0.771843, 0.403052, 0.704434, -0.584228, 0.888292, 0.084903,\n-0.230970, 0.415735, 0.154329, -0.475288, 0.823575, 0.309558, -0.699189, -0.139982, -0.701099, 0.382476, 0.510258, -0.770291, 0.849384, 0.021864,\n-0.054193, -0.490393, 0.081106, -0.126198, -0.973859, 0.188870, -0.585134, -0.080668, -0.806914, -0.822650, 0.209137, 0.528685, 0.909154, 0.812515,\n-0.068975, -0.490393, 0.068975, -0.137937, -0.980789, 0.137937, -0.513926, -0.048176, -0.856481, -0.847505, 0.188951, 0.496017, 0.918182, 0.808510,\n-0.135299, -0.461940, 0.135299, -0.256643, -0.929163, 0.266065, -0.560977, -0.080965, -0.823863, -0.779982, 0.361677, 0.510703, 0.908692, 0.744267,\n-0.353553, 0.000000, 0.353554, -0.729928, -0.000000, 0.683524, -0.676348, -0.144515, -0.722266, -0.093881, 0.990523, -0.100254, 0.878497, 0.354309,\n-0.277785, 0.000000, 0.415735, -0.582554, 0.000000, 0.812792, -0.791757, -0.226031, -0.567477, -0.181593, 0.974723, -0.130153, 0.847136, 0.367787,\n-0.346760, -0.097545, 0.346760, -0.670401, -0.195005, 0.715915, -0.698879, -0.158168, -0.697532, -0.256624, 0.966240, 0.022881, 0.883363, 0.419330,\n-0.154329, 0.415735, 0.230970, -0.307228, 0.842235, 0.443003, -0.743979, -0.502845, 0.440048, -0.749952, 0.072286, -0.657530, 0.729617, 0.071276,\n-0.196424, 0.415735, 0.196424, -0.390926, 0.831489, 0.394718, -0.792551, -0.522151, 0.314994, -0.443564, 0.205572, -0.872348, 0.773239, 0.043658,\n-0.135299, 0.461940, 0.135299, -0.276784, 0.916136, 0.289974, -0.848415, -0.374675, 0.373913, -0.428890, 0.152261, -0.890432, 0.608139, 0.025300,\n-0.256640, -0.191342, 0.384089, -0.538245, -0.382537, 0.750971, -0.746275, -0.197719, -0.635595, -0.391554, 0.902554, 0.179113, 0.861172, 0.495829,\n-0.326641, -0.191342, 0.326641, -0.674410, -0.382537, 0.631535, -0.640365, -0.122758, -0.758197, -0.367033, 0.915850, 0.162803, 0.887781, 0.484426,\n-0.346760, -0.097545, 0.346760, -0.670401, -0.195005, 0.715915, -0.698879, -0.158168, -0.697532, -0.256624, 0.966240, 0.022881, 0.883363, 0.419330,\n-0.196424, 0.353553, 0.293969, -0.378161, 0.716973, 0.585615, -0.907376, -0.412446, -0.080977, -0.168253, 0.568824, -0.805065, 0.784585, 0.121024,\n-0.250000, 0.353553, 0.250000, -0.498368, 0.707137, 0.501585, -0.847765, -0.276403, -0.452654, 0.171823, 0.647638, -0.742322, 0.830912, 0.099015,\n-0.196424, 0.415735, 0.196424, -0.390926, 0.831489, 0.394718, -0.920222, -0.362023, -0.148766, 0.029442, 0.439922, -0.897554, 0.773239, 0.043658,\n-0.326641, -0.191342, 0.326641, -0.674410, -0.382537, 0.631535, -0.640365, -0.122758, -0.758197, -0.367033, 0.915850, 0.162803, 0.887781, 0.484426,\n-0.256640, -0.191342, 0.384089, -0.538245, -0.382537, 0.750971, -0.746275, -0.197719, -0.635595, -0.391554, 0.902554, 0.179113, 0.861172, 0.495829,\n-0.293969, -0.277785, 0.293969, -0.586657, -0.555607, 0.589182, -0.641183, -0.125746, -0.757016, -0.496410, 0.821541, 0.280443, 0.892120, 0.549535,\n-0.230970, 0.277785, 0.345671, -0.460442, 0.555607, 0.692311, -0.886261, -0.331959, -0.323025, -0.044234, 0.764572, -0.643018, 0.811543, 0.179584,\n-0.293969, 0.277785, 0.293969, -0.586657, 0.555607, 0.589182, -0.788526, -0.226098, -0.571933, 0.186215, 0.800587, -0.569548, 0.853037, 0.161076,\n-0.250000, 0.353553, 0.250000, -0.498368, 0.707137, 0.501585, -0.847765, -0.276403, -0.452654, 0.171823, 0.647638, -0.742322, 0.830912, 0.099015,\n-0.293969, -0.277785, 0.293969, -0.586657, -0.555607, 0.589182, -0.641183, -0.125746, -0.757016, -0.496410, 0.821541, 0.280443, 0.892120, 0.549535,\n-0.230970, -0.277785, 0.345671, -0.460442, -0.555607, 0.692311, -0.738187, -0.193503, -0.646248, -0.494685, 0.808177, 0.319589, 0.867877, 0.559931,\n-0.250000, -0.353553, 0.250000, -0.498368, -0.707137, 0.501585, -0.619865, -0.113856, -0.776405, -0.605821, 0.697907, 0.381977, 0.896720, 0.614601,\n-0.256640, 0.191342, 0.384089, -0.538245, 0.382537, 0.750971, -0.842125, -0.279453, -0.461228, -0.020441, 0.884868, -0.465394, 0.827524, 0.241215,\n-0.326641, 0.191342, 0.326641, -0.674410, 0.382537, 0.631535, -0.724649, -0.178874, -0.665498, 0.153103, 0.909186, -0.387221, 0.864885, 0.224918,\n-0.293969, 0.277785, 0.293969, -0.586657, 0.555607, 0.589182, -0.788526, -0.226098, -0.571933, 0.186215, 0.800587, -0.569548, 0.853037, 0.161076,\n-0.250000, -0.353553, 0.250000, -0.498368, -0.707137, 0.501585, -0.619865, -0.113856, -0.776405, -0.605821, 0.697907, 0.381977, 0.896720, 0.614601,\n-0.196424, -0.353553, 0.293969, -0.390937, -0.707137, 0.589174, -0.710445, -0.175141, -0.681611, -0.584656, 0.685172, 0.434416, 0.875068, 0.623907,\n-0.196424, -0.415735, 0.196424, -0.390927, -0.831489, 0.394718, -0.594841, -0.099022, -0.797721, -0.700439, 0.546965, 0.458491, 0.902010, 0.679551,\n-0.326641, 0.191342, 0.326641, -0.674410, 0.382537, 0.631535, -0.724649, -0.178874, -0.665498, 0.153103, 0.909186, -0.387221, 0.864885, 0.224918,\n-0.256640, 0.191342, 0.384089, -0.538245, 0.382537, 0.750971, -0.842125, -0.279453, -0.461228, -0.020441, 0.884868, -0.465394, 0.827524, 0.241215,\n-0.346760, 0.097545, 0.346760, -0.670402, 0.195005, 0.715915, -0.741984, -0.182321, -0.645151, -0.028063, 0.957494, -0.287086, 0.872656, 0.289451,\n-0.196424, -0.415735, 0.196424, -0.390927, -0.831489, 0.394718, -0.594841, -0.099022, -0.797721, -0.700439, 0.546965, 0.458491, 0.902010, 0.679551,\n-0.154329, -0.415735, 0.230970, -0.294645, -0.839192, 0.457102, -0.676270, -0.154843, -0.720196, -0.668082, 0.522910, 0.529369, 0.883418, 0.687578,\n-0.135299, -0.461940, 0.135299, -0.256643, -0.929163, 0.266065, -0.560977, -0.080965, -0.823863, -0.779982, 0.361677, 0.510703, 0.908692, 0.744267,\n-0.277785, 0.000000, 0.415735, -0.582554, 0.000000, 0.812792, -0.791757, -0.226031, -0.567477, -0.181593, 0.974723, -0.130153, 0.847136, 0.367787,\n-0.353553, 0.000000, 0.353554, -0.729928, -0.000000, 0.683524, -0.676348, -0.144515, -0.722266, -0.093881, 0.990523, -0.100254, 0.878497, 0.354309,\n-0.346760, 0.097545, 0.346760, -0.670402, 0.195005, 0.715915, -0.741984, -0.182321, -0.645151, -0.028063, 0.957494, -0.287086, 0.872656, 0.289451,\n-0.106304, 0.461940, 0.159095, -0.210110, 0.923888, 0.319821, -0.570695, -0.381507, 0.727159, -0.848846, -0.010079, -0.528543, 0.618674, 0.050065,\n-0.135299, 0.461940, 0.135299, -0.276784, 0.916136, 0.289974, -0.288406, -0.367051, 0.884362, -0.948483, -0.212046, -0.235407, 0.608139, 0.025300,\n-0.068975, 0.490393, 0.068975, -0.160620, 0.973859, 0.160620, 0.049797, -0.154530, 0.986732, -0.984709, -0.169230, 0.041350, 0.499668, 0.068531,\n-0.196424, -0.353553, 0.293969, -0.390937, -0.707137, 0.589174, -0.710445, -0.175141, -0.681611, -0.584656, 0.685172, 0.434416, 0.875068, 0.623907,\n-0.135299, -0.353553, 0.326641, -0.268483, -0.707137, 0.654121, -0.783142, -0.235163, -0.575662, -0.559335, 0.667292, 0.491798, 0.853599, 0.637120,\n-0.154329, -0.415735, 0.230970, -0.294645, -0.839192, 0.457102, -0.676270, -0.154843, -0.720196, -0.668082, 0.522910, 0.529369, 0.883418, 0.687578,\n-0.256640, 0.191342, 0.384089, -0.538245, 0.382537, 0.750971, -0.842125, -0.279453, -0.461228, -0.020441, 0.884868, -0.465394, 0.827524, 0.241215,\n-0.176777, 0.191342, 0.426777, -0.381396, 0.382538, 0.841547, -0.905356, -0.338466, -0.256460, -0.190001, 0.858483, -0.476347, 0.793211, 0.262838,\n-0.272447, 0.097545, 0.407747, -0.517853, 0.195006, 0.832947, -0.844805, -0.269843, -0.462050, -0.157309, 0.935362, -0.316784, 0.838568, 0.304174,\n-0.073223, -0.461940, 0.176777, -0.158028, -0.923819, 0.348692, -0.683486, -0.152523, -0.713851, -0.722049, 0.348989, 0.597371, 0.879619, 0.759787,\n-0.106304, -0.461940, 0.159095, -0.212592, -0.923892, 0.318165, -0.627722, -0.120406, -0.769069, -0.760208, 0.360953, 0.540183, 0.894040, 0.750649,\n-0.154329, -0.415735, 0.230970, -0.294645, -0.839192, 0.457102, -0.676270, -0.154843, -0.720196, -0.668082, 0.522910, 0.529369, 0.883418, 0.687578,\n-0.191342, 0.000000, 0.461940, -0.412793, 0.000000, 0.910825, -0.867602, -0.304395, -0.393205, -0.271698, 0.954473, -0.123136, 0.816990, 0.386308,\n-0.277785, 0.000000, 0.415735, -0.582554, 0.000000, 0.812792, -0.791757, -0.226031, -0.567477, -0.181593, 0.974723, -0.130153, 0.847136, 0.367787,\n-0.272447, 0.097545, 0.407747, -0.517853, 0.195006, 0.832947, -0.844805, -0.269843, -0.462050, -0.157309, 0.935362, -0.316784, 0.838568, 0.304174,\n-0.073223, 0.461940, 0.176777, -0.143677, 0.923888, 0.354666, -0.323732, -0.382545, 0.865365, -0.944356, -0.020846, -0.328263, 0.617332, 0.075210,\n-0.106304, 0.461940, 0.159095, -0.210110, 0.923888, 0.319821, -0.570695, -0.381507, 0.727159, -0.848846, -0.010079, -0.528543, 0.618674, 0.050065,\n-0.054193, 0.490393, 0.081106, -0.114308, 0.976741, 0.181415, 0.007857, -0.181717, 0.983319, -0.992883, -0.118463, 0.012200, 0.514668, 0.076778,\n-0.106304, -0.461940, 0.159095, -0.212592, -0.923892, 0.318165, -0.627722, -0.120406, -0.769069, -0.760208, 0.360953, 0.540183, 0.894040, 0.750649,\n-0.073223, -0.461940, 0.176777, -0.158028, -0.923819, 0.348692, -0.683486, -0.152523, -0.713851, -0.722049, 0.348989, 0.597371, 0.879619, 0.759787,\n-0.054193, -0.490393, 0.081106, -0.126198, -0.973859, 0.188870, -0.585134, -0.080668, -0.806914, -0.822650, 0.209137, 0.528685, 0.909154, 0.812515,\n-0.277785, 0.000000, 0.415735, -0.582554, 0.000000, 0.812792, -0.791757, -0.226031, -0.567477, -0.181593, 0.974723, -0.130153, 0.847136, 0.367787,\n-0.191342, 0.000000, 0.461940, -0.412793, 0.000000, 0.910825, -0.867602, -0.304395, -0.393205, -0.271698, 0.954473, -0.123136, 0.816990, 0.386308,\n-0.272447, -0.097545, 0.407747, -0.517853, -0.195006, 0.832947, -0.799603, -0.235756, -0.552316, -0.311033, 0.949956, 0.029027, 0.854434, 0.431735,\n-0.106304, 0.415735, 0.256640, -0.229408, 0.831354, 0.506185, -0.786014, -0.464962, 0.407422, -0.637678, 0.264527, -0.723458, 0.699594, 0.100450,\n-0.154329, 0.415735, 0.230970, -0.307228, 0.842235, 0.443003, -0.743979, -0.502845, 0.440048, -0.749952, 0.072286, -0.657530, 0.729617, 0.071276,\n-0.106304, 0.461940, 0.159095, -0.210110, 0.923888, 0.319821, -0.570695, -0.381507, 0.727159, -0.848846, -0.010079, -0.528543, 0.618674, 0.050065,\n-0.176777, -0.191342, 0.426777, -0.381396, -0.382538, 0.841547, -0.827334, -0.264856, -0.495349, -0.412806, 0.885027, 0.215215, 0.835042, 0.511803,\n-0.256640, -0.191342, 0.384089, -0.538245, -0.382537, 0.750971, -0.746275, -0.197719, -0.635595, -0.391554, 0.902554, 0.179113, 0.861172, 0.495829,\n-0.272447, -0.097545, 0.407747, -0.517853, -0.195006, 0.832947, -0.799603, -0.235756, -0.552316, -0.311033, 0.949956, 0.029027, 0.854434, 0.431735,\n-0.154329, 0.415735, 0.230970, -0.307228, 0.842235, 0.443003, -0.919147, -0.383226, 0.091147, -0.147007, 0.417926, -0.896508, 0.729617, 0.071276,\n-0.106304, 0.415735, 0.256640, -0.229408, 0.831354, 0.506185, -0.786014, -0.464962, 0.407422, -0.637678, 0.264527, -0.723458, 0.699594, 0.100450,\n-0.196424, 0.353553, 0.293969, -0.378161, 0.716973, 0.585615, -0.907376, -0.412446, -0.080977, -0.168253, 0.568824, -0.805065, 0.784585, 0.121024,\n-0.256640, -0.191342, 0.384089, -0.538245, -0.382537, 0.750971, -0.746275, -0.197719, -0.635595, -0.391554, 0.902554, 0.179113, 0.861172, 0.495829,\n-0.176777, -0.191342, 0.426777, -0.381396, -0.382538, 0.841547, -0.827334, -0.264856, -0.495349, -0.412806, 0.885027, 0.215215, 0.835042, 0.511803,\n-0.230970, -0.277785, 0.345671, -0.460442, -0.555607, 0.692311, -0.738187, -0.193503, -0.646248, -0.494685, 0.808177, 0.319589, 0.867877, 0.559931,\n-0.159095, 0.277785, 0.384089, -0.316532, 0.555607, 0.768836, -0.912857, -0.398758, -0.087659, -0.250957, 0.732583, -0.632727, 0.775195, 0.203324,\n-0.230970, 0.277785, 0.345671, -0.460442, 0.555607, 0.692311, -0.886261, -0.331959, -0.323025, -0.044234, 0.764572, -0.643018, 0.811543, 0.179584,\n-0.196424, 0.353553, 0.293969, -0.378161, 0.716973, 0.585615, -0.907376, -0.412446, -0.080977, -0.168253, 0.568824, -0.805065, 0.784585, 0.121024,\n-0.230970, -0.277785, 0.345671, -0.460442, -0.555607, 0.692311, -0.738187, -0.193503, -0.646248, -0.494685, 0.808177, 0.319589, 0.867877, 0.559931,\n-0.159095, -0.277785, 0.384089, -0.316532, -0.555607, 0.768836, -0.814925, -0.255551, -0.520183, -0.486793, 0.790790, 0.371058, 0.843924, 0.574600,\n-0.196424, -0.353553, 0.293969, -0.390937, -0.707137, 0.589174, -0.710445, -0.175141, -0.681611, -0.584656, 0.685172, 0.434416, 0.875068, 0.623907,\n-0.176777, 0.191342, 0.426777, -0.381396, 0.382538, 0.841547, -0.905356, -0.338466, -0.256460, -0.190001, 0.858483, -0.476347, 0.793211, 0.262838,\n-0.256640, 0.191342, 0.384089, -0.538245, 0.382537, 0.750971, -0.842125, -0.279453, -0.461228, -0.020441, 0.884868, -0.465394, 0.827524, 0.241215,\n-0.230970, 0.277785, 0.345671, -0.460442, 0.555607, 0.692311, -0.886261, -0.331959, -0.323025, -0.044234, 0.764572, -0.643018, 0.811543, 0.179584,\n-0.106304, 0.415735, 0.256640, -0.229408, 0.831354, 0.506185, -0.786014, -0.464962, 0.407422, -0.637678, 0.264527, -0.723458, 0.699594, 0.100450,\n-0.054193, 0.415735, 0.272448, -0.126245, 0.831354, 0.541214, -0.755722, -0.434023, 0.490416, -0.674138, 0.328341, -0.661612, 0.675659, 0.129678,\n-0.135299, 0.353553, 0.326641, -0.249073, 0.706948, 0.661957, -0.891428, -0.434521, 0.128639, -0.398036, 0.548382, -0.735422, 0.747516, 0.147506,\n-0.176777, -0.191342, 0.426777, -0.381396, -0.382538, 0.841547, -0.827334, -0.264856, -0.495349, -0.412806, 0.885027, 0.215215, 0.835042, 0.511803,\n-0.090120, -0.191342, 0.453064, -0.209889, -0.382537, 0.899784, -0.881719, -0.323636, -0.343267, -0.422672, 0.865347, 0.269301, 0.809410, 0.531778,\n-0.159095, -0.277785, 0.384089, -0.316532, -0.555607, 0.768836, -0.814925, -0.255551, -0.520183, -0.486793, 0.790790, 0.371058, 0.843924, 0.574600,\n-0.081106, 0.277785, 0.407747, -0.160456, 0.555607, 0.815815, -0.891798, -0.435835, 0.121423, -0.416879, 0.711041, -0.566244, 0.743218, 0.230344,\n-0.159095, 0.277785, 0.384089, -0.316532, 0.555607, 0.768836, -0.912857, -0.398758, -0.087659, -0.250957, 0.732583, -0.632727, 0.775195, 0.203324,\n-0.135299, 0.353553, 0.326641, -0.249073, 0.706948, 0.661957, -0.891428, -0.434521, 0.128639, -0.398036, 0.548382, -0.735422, 0.747516, 0.147506,\n-0.159095, -0.277785, 0.384089, -0.316532, -0.555607, 0.768836, -0.814925, -0.255551, -0.520183, -0.486793, 0.790790, 0.371058, 0.843924, 0.574600,\n-0.081106, -0.277785, 0.407747, -0.160456, -0.555607, 0.815815, -0.870186, -0.310475, -0.382597, -0.466542, 0.771059, 0.433366, 0.820258, 0.593116,\n-0.135299, -0.353553, 0.326641, -0.268483, -0.707137, 0.654121, -0.783142, -0.235163, -0.575662, -0.559335, 0.667292, 0.491798, 0.853599, 0.637120,\n-0.090120, 0.191342, 0.453064, -0.209889, 0.382537, 0.899784, -0.913308, -0.405225, -0.040765, -0.339629, 0.834451, -0.433985, 0.761800, 0.288261,\n-0.176777, 0.191342, 0.426777, -0.381396, 0.382538, 0.841547, -0.905356, -0.338466, -0.256460, -0.190001, 0.858483, -0.476347, 0.793211, 0.262838,\n-0.159095, 0.277785, 0.384089, -0.316532, 0.555607, 0.768836, -0.912857, -0.398758, -0.087659, -0.250957, 0.732583, -0.632727, 0.775195, 0.203324,\n-0.135299, -0.353553, 0.326641, -0.268483, -0.707137, 0.654121, -0.783142, -0.235163, -0.575662, -0.559335, 0.667292, 0.491798, 0.853599, 0.637120,\n-0.068975, -0.353553, 0.346760, -0.135710, -0.707138, 0.693930, -0.844001, -0.284314, -0.454784, -0.517668, 0.647807, 0.558898, 0.832307, 0.653935,\n-0.106304, -0.415735, 0.256640, -0.195712, -0.831354, 0.520142, -0.755147, -0.210632, -0.620795, -0.618809, 0.516163, 0.592157, 0.864986, 0.699035,\n-0.176777, 0.191342, 0.426777, -0.381396, 0.382538, 0.841547, -0.905356, -0.338466, -0.256460, -0.190001, 0.858483, -0.476347, 0.793211, 0.262838,\n-0.090120, 0.191342, 0.453064, -0.209889, 0.382537, 0.899784, -0.913308, -0.405225, -0.040765, -0.339629, 0.834451, -0.433985, 0.761800, 0.288261,\n-0.187665, 0.097545, 0.453064, -0.345401, 0.195006, 0.917971, -0.901796, -0.339696, -0.267153, -0.278623, 0.912758, -0.298735, 0.806381, 0.324118,\n-0.037329, -0.461940, 0.187665, -0.081206, -0.918409, 0.387209, -0.751926, -0.198553, -0.628637, -0.668925, 0.338220, 0.661926, 0.865508, 0.771545,\n-0.073223, -0.461940, 0.176777, -0.158028, -0.923819, 0.348692, -0.683486, -0.152523, -0.713851, -0.722049, 0.348989, 0.597371, 0.879619, 0.759787,\n-0.106304, -0.415735, 0.256640, -0.195712, -0.831354, 0.520142, -0.755147, -0.210632, -0.620795, -0.618809, 0.516163, 0.592157, 0.864986, 0.699035,\n-0.097545, 0.000000, 0.490393, -0.227166, 0.000000, 0.973856, -0.907657, -0.362397, -0.211724, -0.348241, 0.933879, -0.081232, 0.788114, 0.408932,\n-0.191342, 0.000000, 0.461940, -0.412793, 0.000000, 0.910825, -0.867602, -0.304395, -0.393205, -0.271698, 0.954473, -0.123136, 0.816990, 0.386308,\n-0.187665, 0.097545, 0.453064, -0.345401, 0.195006, 0.917971, -0.901796, -0.339696, -0.267153, -0.278623, 0.912758, -0.298735, 0.806381, 0.324118,\n-0.037329, 0.461940, 0.187665, -0.071725, 0.923888, 0.375881, -0.361520, -0.375307, 0.853492, -0.943286, 0.059637, -0.326580, 0.611040, 0.099926,\n-0.073223, 0.461940, 0.176777, -0.143677, 0.923888, 0.354666, -0.323732, -0.382545, 0.865365, -0.944356, -0.020846, -0.328263, 0.617332, 0.075210,\n-0.037329, 0.490393, 0.090120, -0.076720, 0.976740, 0.200230, -0.046042, -0.204078, 0.977871, -0.996782, -0.079813, 0.007405, 0.524796, 0.087364,\n-0.073223, -0.461940, 0.176777, -0.158028, -0.923819, 0.348692, -0.683486, -0.152523, -0.713851, -0.722049, 0.348989, 0.597371, 0.879619, 0.759787,\n-0.037329, -0.461940, 0.187665, -0.081206, -0.918409, 0.387209, -0.751926, -0.198553, -0.628637, -0.668925, 0.338220, 0.661926, 0.865508, 0.771545,\n-0.037329, -0.490393, 0.090120, -0.076720, -0.976741, 0.200230, -0.621151, -0.110267, -0.775894, -0.785454, 0.182906, 0.591276, 0.900481, 0.818239,\n-0.191342, 0.000000, 0.461940, -0.412793, 0.000000, 0.910825, -0.867602, -0.304395, -0.393205, -0.271698, 0.954473, -0.123136, 0.816990, 0.386308,\n-0.097545, 0.000000, 0.490393, -0.227166, 0.000000, 0.973856, -0.907657, -0.362397, -0.211724, -0.348241, 0.933879, -0.081232, 0.788114, 0.408932,\n-0.187665, -0.097545, 0.453064, -0.345401, -0.195006, 0.917971, -0.868976, -0.302909, -0.391314, -0.359737, 0.930964, 0.062409, 0.826278, 0.448964,\n-0.054193, 0.415735, 0.272448, -0.126245, 0.831354, 0.541214, -0.755722, -0.434023, 0.490416, -0.674138, 0.328341, -0.661612, 0.675659, 0.129678,\n-0.106304, 0.415735, 0.256640, -0.229408, 0.831354, 0.506185, -0.786014, -0.464962, 0.407422, -0.637678, 0.264527, -0.723458, 0.699594, 0.100450,\n-0.073223, 0.461940, 0.176777, -0.143677, 0.923888, 0.354666, -0.707181, -0.346555, 0.616275, -0.707954, 0.154461, -0.689161, 0.617332, 0.075210,\n-0.090120, -0.191342, 0.453064, -0.209889, -0.382537, 0.899784, -0.881719, -0.323636, -0.343267, -0.422672, 0.865347, 0.269301, 0.809410, 0.531778,\n-0.176777, -0.191342, 0.426777, -0.381396, -0.382538, 0.841547, -0.827334, -0.264856, -0.495349, -0.412806, 0.885027, 0.215215, 0.835042, 0.511803,\n-0.187665, -0.097545, 0.453064, -0.345401, -0.195006, 0.917971, -0.868976, -0.302909, -0.391314, -0.359737, 0.930964, 0.062409, 0.826278, 0.448964,\n0.000000, 0.000000, 0.500000, -0.032814, 0.000000, 0.999461, -0.913871, -0.404896, -0.030004, -0.401232, 0.915882, -0.013173, 0.760371, 0.434664,\n-0.097545, 0.000000, 0.490393, -0.227166, 0.000000, 0.973856, -0.907657, -0.362397, -0.211724, -0.348241, 0.933879, -0.081232, 0.788114, 0.408932,\n-0.095671, 0.097545, 0.480970, -0.159677, 0.195006, 0.967717, -0.917587, -0.390841, -0.072647, -0.378232, 0.893400, -0.242440, 0.776121, 0.348088,\n0.000000, 0.461940, 0.191342, 0.006661, 0.929163, 0.369610, -0.301158, -0.350594, 0.886785, -0.969313, 0.096831, -0.225956, 0.602177, 0.123791,\n-0.037329, 0.461940, 0.187665, -0.071725, 0.923888, 0.375881, -0.361520, -0.375307, 0.853492, -0.943286, 0.059637, -0.326580, 0.611040, 0.099926,\n-0.019030, 0.490393, 0.095671, -0.036183, 0.976741, 0.211349, -0.052590, -0.213056, 0.975624, -0.999332, -0.036442, -0.002671, 0.530504, 0.099377,\n-0.037329, -0.461940, 0.187665, -0.081206, -0.918409, 0.387209, -0.751926, -0.198553, -0.628637, -0.668925, 0.338220, 0.661926, 0.865508, 0.771545,\n0.000000, -0.461940, 0.191342, -0.000000, -0.935949, 0.352136, -0.754461, -0.231123, -0.614305, -0.645677, 0.268895, 0.714701, 0.851786, 0.785757,\n-0.019030, -0.490393, 0.095671, -0.036183, -0.976740, 0.211349, -0.659716, -0.135510, -0.739196, -0.754210, 0.165440, 0.635450, 0.892313, 0.825579,\n-0.097545, 0.000000, 0.490393, -0.227166, 0.000000, 0.973856, -0.907657, -0.362397, -0.211724, -0.348241, 0.933879, -0.081232, 0.788114, 0.408932,\n0.000000, 0.000000, 0.500000, -0.032814, 0.000000, 0.999461, -0.913871, -0.404896, -0.030004, -0.401232, 0.915882, -0.013173, 0.760371, 0.434664,\n-0.095671, -0.097545, 0.480970, -0.159677, -0.195006, 0.967717, -0.907051, -0.357871, -0.221782, -0.392773, 0.911910, 0.118951, 0.798937, 0.470280,\n0.000000, 0.415735, 0.277785, -0.018236, 0.831353, 0.555445, -0.631677, -0.440203, 0.638127, -0.795024, 0.324824, -0.512275, 0.654747, 0.158232,\n-0.054193, 0.415735, 0.272448, -0.126245, 0.831354, 0.541214, -0.755722, -0.434023, 0.490416, -0.674138, 0.328341, -0.661612, 0.675659, 0.129678,\n-0.037329, 0.461940, 0.187665, -0.071725, 0.923888, 0.375881, -0.361520, -0.375307, 0.853492, -0.943286, 0.059637, -0.326580, 0.611040, 0.099926,\n0.000000, -0.191342, 0.461940, -0.030317, -0.382538, 0.923442, -0.910709, -0.370177, -0.183246, -0.413963, 0.845716, 0.336749, 0.784187, 0.555103,\n-0.090120, -0.191342, 0.453064, -0.209889, -0.382537, 0.899784, -0.881719, -0.323636, -0.343267, -0.422672, 0.865347, 0.269301, 0.809410, 0.531778,\n-0.095671, -0.097545, 0.480970, -0.159677, -0.195006, 0.967717, -0.907051, -0.357871, -0.221782, -0.392773, 0.911910, 0.118951, 0.798937, 0.470280,\n-0.054193, 0.415735, 0.272448, -0.126245, 0.831354, 0.541214, -0.755722, -0.434023, 0.490416, -0.674138, 0.328341, -0.661612, 0.675659, 0.129678,\n0.000000, 0.415735, 0.277785, -0.018236, 0.831353, 0.555445, -0.631677, -0.440203, 0.638127, -0.795024, 0.324824, -0.512275, 0.654747, 0.158232,\n-0.068975, 0.353553, 0.346760, -0.115141, 0.706949, 0.697829, -0.833800, -0.450621, 0.318933, -0.549654, 0.539813, -0.637560, 0.716770, 0.176135,\n-0.090120, -0.191342, 0.453064, -0.209889, -0.382537, 0.899784, -0.881719, -0.323636, -0.343267, -0.422672, 0.865347, 0.269301, 0.809410, 0.531778,\n0.000000, -0.191342, 0.461940, -0.030317, -0.382538, 0.923442, -0.910709, -0.370177, -0.183246, -0.413963, 0.845716, 0.336749, 0.784187, 0.555103,\n-0.081106, -0.277785, 0.407747, -0.160456, -0.555607, 0.815815, -0.870186, -0.310475, -0.382597, -0.466542, 0.771059, 0.433366, 0.820258, 0.593116,\n0.000000, 0.277785, 0.415735, 0.012460, 0.567207, 0.823481, -0.828915, -0.454732, 0.325758, -0.549922, 0.691702, -0.468117, 0.714533, 0.259103,\n-0.081106, 0.277785, 0.407747, -0.160456, 0.555607, 0.815815, -0.891798, -0.435835, 0.121423, -0.416879, 0.711041, -0.566244, 0.743218, 0.230344,\n-0.068975, 0.353553, 0.346760, -0.115141, 0.706949, 0.697829, -0.833800, -0.450621, 0.318933, -0.549654, 0.539813, -0.637560, 0.716770, 0.176135,\n-0.081106, -0.277785, 0.407747, -0.160456, -0.555607, 0.815815, -0.870186, -0.310475, -0.382597, -0.466542, 0.771059, 0.433366, 0.820258, 0.593116,\n0.000000, -0.277785, 0.415735, 0.001785, -0.555608, 0.831443, -0.903472, -0.357289, -0.236817, -0.428605, 0.750778, 0.502624, 0.796797, 0.614975,\n-0.068975, -0.353553, 0.346760, -0.135710, -0.707138, 0.693930, -0.844001, -0.284314, -0.454784, -0.517668, 0.647807, 0.558898, 0.832307, 0.653935,\n0.000000, 0.191342, 0.461940, -0.030317, 0.382538, 0.923442, -0.887540, -0.435230, 0.151157, -0.452760, 0.818396, -0.353887, 0.732796, 0.316099,\n-0.090120, 0.191342, 0.453064, -0.209889, 0.382537, 0.899784, -0.913308, -0.405225, -0.040765, -0.339629, 0.834451, -0.433985, 0.761800, 0.288261,\n-0.081106, 0.277785, 0.407747, -0.160456, 0.555607, 0.815815, -0.891798, -0.435835, 0.121423, -0.416879, 0.711041, -0.566244, 0.743218, 0.230344,\n-0.068975, -0.353553, 0.346760, -0.135710, -0.707138, 0.693930, -0.844001, -0.284314, -0.454784, -0.517668, 0.647807, 0.558898, 0.832307, 0.653935,\n0.000000, -0.353553, 0.353553, 0.002276, -0.707137, 0.707073, -0.885216, -0.330339, -0.327520, -0.463661, 0.625730, 0.627280, 0.811127, 0.673987,\n-0.054193, -0.415735, 0.272448, -0.099235, -0.820324, 0.563224, -0.816853, -0.256076, -0.516891, -0.569698, 0.510908, 0.643752, 0.846733, 0.713716,\n-0.090120, 0.191342, 0.453064, -0.209889, 0.382537, 0.899784, -0.913308, -0.405225, -0.040765, -0.339629, 0.834451, -0.433985, 0.761800, 0.288261,\n0.000000, 0.191342, 0.461940, -0.030317, 0.382538, 0.923442, -0.887540, -0.435230, 0.151157, -0.452760, 0.818396, -0.353887, 0.732796, 0.316099,\n-0.095671, 0.097545, 0.480970, -0.159677, 0.195006, 0.967717, -0.917587, -0.390841, -0.072647, -0.378232, 0.893400, -0.242440, 0.776121, 0.348088,\n-0.054193, -0.415735, 0.272448, -0.099235, -0.820324, 0.563224, -0.816853, -0.256076, -0.516891, -0.569698, 0.510908, 0.643752, 0.846733, 0.713716,\n0.000000, -0.415735, 0.277785, 0.008963, -0.839191, 0.543763, -0.849186, -0.293527, -0.439004, -0.521149, 0.460174, 0.718779, 0.828642, 0.731372,\n-0.037329, -0.461940, 0.187665, -0.081206, -0.918409, 0.387209, -0.751926, -0.198553, -0.628637, -0.668925, 0.338220, 0.661926, 0.865508, 0.771545,\n0.000000, -0.277785, 0.415735, 0.001785, -0.555608, 0.831443, -0.903472, -0.357289, -0.236817, -0.428605, 0.750778, 0.502624, 0.796797, 0.614975,\n0.081106, -0.277785, 0.407747, 0.163956, -0.555608, 0.815119, -0.912228, -0.399882, -0.089082, -0.374218, 0.729506, 0.572523, 0.773368, 0.639622,\n0.000000, -0.353553, 0.353553, 0.002276, -0.707137, 0.707073, -0.885216, -0.330339, -0.327520, -0.463661, 0.625730, 0.627280, 0.811127, 0.673987,\n0.090120, 0.191342, 0.453064, 0.150420, 0.382537, 0.911614, -0.832725, -0.447986, 0.325389, -0.527832, 0.810755, -0.253120, 0.705594, 0.345167,\n0.000000, 0.191342, 0.461940, -0.030317, 0.382538, 0.923442, -0.887540, -0.435230, 0.151157, -0.452760, 0.818396, -0.353887, 0.732796, 0.316099,\n0.000000, 0.277785, 0.415735, 0.012460, 0.567207, 0.823481, -0.828915, -0.454732, 0.325758, -0.549922, 0.691702, -0.468117, 0.714533, 0.259103,\n0.000000, -0.353553, 0.353553, 0.002276, -0.707137, 0.707073, -0.885216, -0.330339, -0.327520, -0.463661, 0.625730, 0.627280, 0.811127, 0.673987,\n0.068975, -0.353553, 0.346760, 0.140172, -0.707137, 0.693044, -0.908721, -0.369819, -0.193545, -0.391505, 0.603327, 0.694780, 0.789921, 0.696864,\n0.000000, -0.415735, 0.277785, 0.008963, -0.839191, 0.543763, -0.849186, -0.293527, -0.439004, -0.521149, 0.460174, 0.718779, 0.828642, 0.731372,\n0.000000, 0.191342, 0.461940, -0.030317, 0.382538, 0.923442, -0.887540, -0.435230, 0.151157, -0.452760, 0.818396, -0.353887, 0.732796, 0.316099,\n0.090120, 0.191342, 0.453064, 0.150420, 0.382537, 0.911614, -0.832725, -0.447986, 0.325389, -0.527832, 0.810755, -0.253120, 0.705594, 0.345167,\n0.000000, 0.097545, 0.490393, 0.032182, 0.195005, 0.980274, -0.898725, -0.423503, 0.113752, -0.441784, 0.882545, -0.161061, 0.747546, 0.374899,\n0.037329, -0.461940, 0.187665, 0.080526, -0.910837, 0.404836, -0.849838, -0.274976, -0.449625, -0.544394, 0.300037, 0.783335, 0.838536, 0.802228,\n0.000000, -0.461940, 0.191342, -0.000000, -0.935949, 0.352136, -0.754461, -0.231123, -0.614305, -0.645677, 0.268895, 0.714701, 0.851786, 0.785757,\n0.000000, -0.415735, 0.277785, 0.008963, -0.839191, 0.543763, -0.849186, -0.293527, -0.439004, -0.521149, 0.460174, 0.718779, 0.828642, 0.731372,\n0.097545, 0.000000, 0.490393, 0.162803, -0.000000, 0.986659, -0.889654, -0.432395, 0.146797, -0.424489, 0.902720, 0.070042, 0.733486, 0.462524,\n0.000000, 0.000000, 0.500000, -0.032814, 0.000000, 0.999461, -0.913871, -0.404896, -0.030004, -0.401232, 0.915882, -0.013173, 0.760371, 0.434664,\n0.000000, 0.097545, 0.490393, 0.032182, 0.195005, 0.980274, -0.898725, -0.423503, 0.113752, -0.441784, 0.882545, -0.161061, 0.747546, 0.374899,\n0.000000, 0.490393, 0.097545, -0.000000, 0.980789, 0.195071, -0.010227, -0.195061, 0.980738, -0.998705, -0.009923, 0.049892, 0.532587, 0.112073,\n0.019030, 0.490393, 0.095671, 0.044314, 0.973859, 0.222787, -0.038854, -0.221157, 0.974464, -0.994442, 0.064320, -0.083357, 0.531827, 0.124876,\n0.000000, 0.461940, 0.191342, 0.006661, 0.929163, 0.369610, -0.301158, -0.350594, 0.886785, -0.969313, 0.096831, -0.225956, 0.602177, 0.123791,\n0.019030, -0.490393, 0.095671, 0.044314, -0.973859, 0.222787, -0.736482, -0.182524, -0.651368, -0.682533, 0.133332, 0.718590, 0.878221, 0.844539,\n0.000000, -0.490393, 0.097545, -0.000000, -0.980789, 0.195071, -0.667310, -0.145285, -0.730472, -0.732975, 0.132698, 0.667187, 0.884825, 0.834401,\n0.000000, -0.461940, 0.191342, -0.000000, -0.935949, 0.352136, -0.754461, -0.231123, -0.614305, -0.645677, 0.268895, 0.714701, 0.851786, 0.785757,\n0.000000, 0.000000, 0.500000, -0.032814, 0.000000, 0.999461, -0.913871, -0.404896, -0.030004, -0.401232, 0.915882, -0.013173, 0.760371, 0.434664,\n0.097545, 0.000000, 0.490393, 0.162803, -0.000000, 0.986659, -0.889654, -0.432395, 0.146797, -0.424489, 0.902720, 0.070042, 0.733486, 0.462524,\n0.000000, -0.097545, 0.490393, 0.032182, -0.195005, 0.980274, -0.915229, -0.399881, -0.049501, -0.402667, 0.895136, 0.191288, 0.772312, 0.494867,\n0.054193, 0.415735, 0.272448, 0.104109, 0.823575, 0.557571, -0.551851, -0.418565, 0.721293, -0.839109, 0.373688, -0.395288, 0.635422, 0.185632,\n0.000000, 0.415735, 0.277785, -0.018236, 0.831353, 0.555445, -0.631677, -0.440203, 0.638127, -0.795024, 0.324824, -0.512275, 0.654747, 0.158232,\n0.000000, 0.461940, 0.191342, 0.006661, 0.929163, 0.369610, -0.301158, -0.350594, 0.886785, -0.969313, 0.096831, -0.225956, 0.602177, 0.123791,\n0.090120, -0.191342, 0.453064, 0.150420, -0.382537, 0.911613, -0.913342, -0.406704, -0.019959, -0.381307, 0.828310, 0.410498, 0.759182, 0.581072,\n0.000000, -0.191342, 0.461940, -0.030317, -0.382538, 0.923442, -0.910709, -0.370177, -0.183246, -0.413963, 0.845716, 0.336749, 0.784187, 0.555103,\n0.000000, -0.097545, 0.490393, 0.032182, -0.195005, 0.980274, -0.915229, -0.399881, -0.049501, -0.402667, 0.895136, 0.191288, 0.772312, 0.494867,\n0.000000, 0.415735, 0.277785, -0.018236, 0.831353, 0.555445, -0.631677, -0.440203, 0.638127, -0.795024, 0.324824, -0.512275, 0.654747, 0.158232,\n0.054193, 0.415735, 0.272448, 0.104109, 0.823575, 0.557571, -0.551851, -0.418565, 0.721293, -0.839109, 0.373688, -0.395288, 0.635422, 0.185632,\n0.000000, 0.353553, 0.353553, 0.012557, 0.720869, 0.692958, -0.752990, -0.449160, 0.480896, -0.658624, 0.527404, -0.536712, 0.690070, 0.205446,\n0.000000, -0.191342, 0.461940, -0.030317, -0.382538, 0.923442, -0.910709, -0.370177, -0.183246, -0.413963, 0.845716, 0.336749, 0.784187, 0.555103,\n0.090120, -0.191342, 0.453064, 0.150420, -0.382537, 0.911613, -0.913342, -0.406704, -0.019959, -0.381307, 0.828310, 0.410498, 0.759182, 0.581072,\n0.000000, -0.277785, 0.415735, 0.001785, -0.555608, 0.831443, -0.903472, -0.357289, -0.236817, -0.428605, 0.750778, 0.502624, 0.796797, 0.614975,\n0.000000, 0.353553, 0.353553, 0.012557, 0.720869, 0.692958, -0.752990, -0.449160, 0.480896, -0.658624, 0.527404, -0.536712, 0.690070, 0.205446,\n0.068975, 0.353553, 0.346760, 0.142394, 0.683554, 0.715875, -0.709156, -0.434105, 0.555564, -0.707975, 0.575780, -0.408961, 0.665895, 0.234463,\n0.000000, 0.277785, 0.415735, 0.012460, 0.567207, 0.823481, -0.828915, -0.454732, 0.325758, -0.549922, 0.691702, -0.468117, 0.714533, 0.259103,\n0.176777, -0.191342, 0.426777, 0.325378, -0.382538, 0.864751, -0.890388, -0.431827, 0.143998, -0.322113, 0.814978, 0.481720, 0.734107, 0.608949,\n0.090120, -0.191342, 0.453064, 0.150420, -0.382537, 0.911613, -0.913342, -0.406704, -0.019959, -0.381307, 0.828310, 0.410498, 0.759182, 0.581072,\n0.095671, -0.097545, 0.480970, 0.222807, -0.195006, 0.955160, -0.895241, -0.428756, 0.121295, -0.385003, 0.882541, 0.269989, 0.746184, 0.521879,\n0.135299, 0.353553, 0.326641, 0.261563, 0.729955, 0.631468, -0.555272, -0.421330, 0.717045, -0.780375, 0.544938, -0.306688, 0.643255, 0.262466,\n0.068975, 0.353553, 0.346760, 0.142394, 0.683554, 0.715875, -0.709156, -0.434105, 0.555564, -0.707975, 0.575780, -0.408961, 0.665895, 0.234463,\n0.054193, 0.415735, 0.272448, 0.104109, 0.823575, 0.557571, -0.551851, -0.418565, 0.721293, -0.839109, 0.373688, -0.395288, 0.635422, 0.185632,\n0.090120, -0.191342, 0.453064, 0.150420, -0.382537, 0.911613, -0.913342, -0.406704, -0.019959, -0.381307, 0.828310, 0.410498, 0.759182, 0.581072,\n0.176777, -0.191342, 0.426777, 0.325378, -0.382538, 0.864751, -0.890388, -0.431827, 0.143998, -0.322113, 0.814978, 0.481720, 0.734107, 0.608949,\n0.081106, -0.277785, 0.407747, 0.163956, -0.555608, 0.815119, -0.912228, -0.399882, -0.089082, -0.374218, 0.729506, 0.572523, 0.773368, 0.639622,\n0.159095, 0.277785, 0.384089, 0.326646, 0.567206, 0.756029, -0.658364, -0.437374, 0.612586, -0.672901, 0.701278, -0.235399, 0.663284, 0.317370,\n0.081106, 0.277785, 0.407747, 0.181394, 0.539042, 0.822514, -0.774078, -0.437604, 0.457500, -0.612223, 0.716441, -0.334508, 0.688154, 0.288422,\n0.068975, 0.353553, 0.346760, 0.142394, 0.683554, 0.715875, -0.709156, -0.434105, 0.555564, -0.707975, 0.575780, -0.408961, 0.665895, 0.234463,\n0.081106, -0.277785, 0.407747, 0.163956, -0.555608, 0.815119, -0.912228, -0.399882, -0.089082, -0.374218, 0.729506, 0.572523, 0.773368, 0.639622,\n0.159095, -0.277785, 0.384089, 0.326646, -0.567206, 0.756029, -0.902076, -0.425816, 0.070281, -0.275374, 0.708089, 0.650215, 0.749700, 0.666456,\n0.068975, -0.353553, 0.346760, 0.140172, -0.707137, 0.693044, -0.908721, -0.369819, -0.193545, -0.391505, 0.603327, 0.694780, 0.789921, 0.696864,\n0.176777, 0.191342, 0.426777, 0.325378, 0.382538, 0.864751, -0.754569, -0.446108, 0.481263, -0.566310, 0.811200, -0.145764, 0.679609, 0.374456,\n0.090120, 0.191342, 0.453064, 0.150420, 0.382537, 0.911614, -0.832725, -0.447986, 0.325389, -0.527832, 0.810755, -0.253120, 0.705594, 0.345167,\n0.081106, 0.277785, 0.407747, 0.181394, 0.539042, 0.822514, -0.774078, -0.437604, 0.457500, -0.612223, 0.716441, -0.334508, 0.688154, 0.288422,\n0.068975, -0.353553, 0.346760, 0.140172, -0.707137, 0.693044, -0.908721, -0.369819, -0.193545, -0.391505, 0.603327, 0.694780, 0.789921, 0.696864,\n0.135299, -0.353553, 0.326641, 0.253581, -0.720868, 0.645016, -0.913094, -0.398493, -0.086381, -0.310930, 0.570681, 0.760030, 0.768457, 0.722120,\n0.054193, -0.415735, 0.272448, 0.123852, -0.820324, 0.558327, -0.893831, -0.336591, -0.296263, -0.435664, 0.460577, 0.773347, 0.810650, 0.751723,\n0.090120, 0.191342, 0.453064, 0.150420, 0.382537, 0.911614, -0.832725, -0.447986, 0.325389, -0.527832, 0.810755, -0.253120, 0.705594, 0.345167,\n0.176777, 0.191342, 0.426777, 0.325378, 0.382538, 0.864751, -0.754569, -0.446108, 0.481263, -0.566310, 0.811200, -0.145764, 0.679609, 0.374456,\n0.095671, 0.097545, 0.480970, 0.222807, 0.195006, 0.955160, -0.849816, -0.441233, 0.288316, -0.484252, 0.872498, -0.065170, 0.720269, 0.403448,\n0.054193, -0.415735, 0.272448, 0.123852, -0.820324, 0.558327, -0.893831, -0.336591, -0.296263, -0.435664, 0.460577, 0.773347, 0.810650, 0.751723,\n0.106304, -0.415735, 0.256640, 0.216371, -0.839191, 0.498940, -0.904748, -0.364402, -0.220551, -0.367123, 0.403604, 0.838048, 0.792639, 0.774468,\n0.037329, -0.461940, 0.187665, 0.080526, -0.910837, 0.404836, -0.849838, -0.274976, -0.449625, -0.544394, 0.300037, 0.783335, 0.838536, 0.802228,\n0.191342, 0.000000, 0.461940, 0.352163, 0.000000, 0.935939, -0.837896, -0.445571, 0.315273, -0.416119, 0.895729, 0.156572, 0.707107, 0.491563,\n0.097545, 0.000000, 0.490393, 0.162803, -0.000000, 0.986659, -0.889654, -0.432395, 0.146797, -0.424489, 0.902720, 0.070042, 0.733486, 0.462524,\n0.095671, 0.097545, 0.480970, 0.222807, 0.195006, 0.955160, -0.849816, -0.441233, 0.288316, -0.484252, 0.872498, -0.065170, 0.720269, 0.403448,\n0.073224, 0.461940, 0.176777, 0.149190, 0.923888, 0.352383, -0.209827, -0.318676, 0.924348, -0.971200, 0.203867, -0.123323, 0.580255, 0.167767,\n0.037329, 0.461940, 0.187665, 0.087331, 0.916136, 0.391239, -0.294404, -0.351461, 0.888708, -0.937031, 0.208860, -0.279912, 0.591752, 0.146494,\n0.019030, 0.490393, 0.095671, 0.044314, 0.973859, 0.222787, -0.038854, -0.221157, 0.974464, -0.994442, 0.064320, -0.083357, 0.531827, 0.124876,\n0.037329, -0.461940, 0.187665, 0.080526, -0.910837, 0.404836, -0.849838, -0.274976, -0.449625, -0.544394, 0.300037, 0.783335, 0.838536, 0.802228,\n0.073224, -0.461940, 0.176777, 0.134132, -0.931233, 0.338842, -0.844094, -0.286498, -0.453237, -0.512969, 0.227307, 0.827765, 0.825855, 0.820746,\n0.019030, -0.490393, 0.095671, 0.044314, -0.973859, 0.222787, -0.736482, -0.182524, -0.651368, -0.682533, 0.133332, 0.718590, 0.878221, 0.844539,\n0.097545, 0.000000, 0.490393, 0.162803, -0.000000, 0.986659, -0.889654, -0.432395, 0.146797, -0.424489, 0.902720, 0.070042, 0.733486, 0.462524,\n0.191342, 0.000000, 0.461940, 0.352163, 0.000000, 0.935939, -0.837896, -0.445571, 0.315273, -0.416119, 0.895729, 0.156572, 0.707107, 0.491563,\n0.095671, -0.097545, 0.480970, 0.222807, -0.195006, 0.955160, -0.895241, -0.428756, 0.121295, -0.385003, 0.882541, 0.269989, 0.746184, 0.521879,\n0.106304, 0.415735, 0.256640, 0.197657, 0.842234, 0.501571, -0.449178, -0.376972, 0.810019, -0.868760, 0.387518, -0.308360, 0.616925, 0.211494,\n0.054193, 0.415735, 0.272448, 0.104109, 0.823575, 0.557571, -0.551851, -0.418565, 0.721293, -0.839109, 0.373688, -0.395288, 0.635422, 0.185632,\n0.037329, 0.461940, 0.187665, 0.087331, 0.916136, 0.391239, -0.294404, -0.351461, 0.888708, -0.937031, 0.208860, -0.279912, 0.591752, 0.146494,\n0.106304, -0.461940, 0.159095, 0.202132, -0.923819, 0.325118, -0.879274, -0.317380, -0.355171, -0.438512, 0.211461, 0.873494, 0.813873, 0.841082,\n0.073224, -0.461940, 0.176777, 0.134132, -0.931233, 0.338842, -0.844094, -0.286498, -0.453237, -0.512969, 0.227307, 0.827765, 0.825855, 0.820746,\n0.106304, -0.415735, 0.256640, 0.216371, -0.839191, 0.498940, -0.904748, -0.364402, -0.220551, -0.367123, 0.403604, 0.838048, 0.792639, 0.774468,\n0.277785, 0.000000, 0.415735, 0.527990, 0.000000, 0.849250, -0.760591, -0.444855, 0.472869, -0.377970, 0.895499, 0.234989, 0.680843, 0.520863,\n0.191342, 0.000000, 0.461940, 0.352163, 0.000000, 0.935939, -0.837896, -0.445571, 0.315273, -0.416119, 0.895729, 0.156572, 0.707107, 0.491563,\n0.187665, 0.097545, 0.453064, 0.404870, 0.195006, 0.893338, -0.775954, -0.443563, 0.448495, -0.487796, 0.872420, 0.030634, 0.693851, 0.432732,\n0.106304, 0.461940, 0.159095, 0.215072, 0.923888, 0.316505, -0.142089, -0.291038, 0.946101, -0.968208, 0.244107, -0.054637, 0.567957, 0.187359,\n0.073224, 0.461940, 0.176777, 0.149190, 0.923888, 0.352383, -0.209827, -0.318676, 0.924348, -0.971200, 0.203867, -0.123323, 0.580255, 0.167767,\n0.037329, 0.490393, 0.090120, 0.087334, 0.976741, 0.195832, 0.029590, -0.199040, 0.979544, -0.996041, 0.082349, 0.033470, 0.528865, 0.137340,\n0.073224, -0.461940, 0.176777, 0.134132, -0.931233, 0.338842, -0.844094, -0.286498, -0.453237, -0.512969, 0.227307, 0.827765, 0.825855, 0.820746,\n0.106304, -0.461940, 0.159095, 0.202132, -0.923819, 0.325118, -0.879274, -0.317380, -0.355171, -0.438512, 0.211461, 0.873494, 0.813873, 0.841082,\n0.037329, -0.490393, 0.090120, 0.087334, -0.976741, 0.195832, -0.744511, -0.194610, -0.638616, -0.657112, 0.091266, 0.748248, 0.872759, 0.855785,\n0.191342, 0.000000, 0.461940, 0.352163, 0.000000, 0.935939, -0.837896, -0.445571, 0.315273, -0.416119, 0.895729, 0.156572, 0.707107, 0.491563,\n0.277785, 0.000000, 0.415735, 0.527990, 0.000000, 0.849250, -0.760591, -0.444855, 0.472869, -0.377970, 0.895499, 0.234989, 0.680843, 0.520863,\n0.187665, -0.097545, 0.453064, 0.404870, -0.195006, 0.893338, -0.848218, -0.444960, 0.287291, -0.341842, 0.873870, 0.345682, 0.720246, 0.550459,\n0.154329, 0.415735, 0.230970, 0.309558, 0.823575, 0.475288, -0.362806, -0.359728, 0.859632, -0.882398, 0.435059, -0.179155, 0.598817, 0.235470,\n0.106304, 0.415735, 0.256640, 0.197657, 0.842234, 0.501571, -0.449178, -0.376972, 0.810019, -0.868760, 0.387518, -0.308360, 0.616925, 0.211494,\n0.073224, 0.461940, 0.176777, 0.149190, 0.923888, 0.352383, -0.209827, -0.318676, 0.924348, -0.971200, 0.203867, -0.123323, 0.580255, 0.167767,\n0.256640, -0.191342, 0.384089, 0.487830, -0.382537, 0.784657, -0.841552, -0.444954, 0.306278, -0.236581, 0.807292, 0.540656, 0.708586, 0.637959,\n0.176777, -0.191342, 0.426777, 0.325378, -0.382538, 0.864751, -0.890388, -0.431827, 0.143998, -0.322113, 0.814978, 0.481720, 0.734107, 0.608949,\n0.187665, -0.097545, 0.453064, 0.404870, -0.195006, 0.893338, -0.848218, -0.444960, 0.287291, -0.341842, 0.873870, 0.345682, 0.720246, 0.550459,\n0.106304, 0.415735, 0.256640, 0.197657, 0.842234, 0.501571, -0.449178, -0.376972, 0.810019, -0.868760, 0.387518, -0.308360, 0.616925, 0.211494,\n0.154329, 0.415735, 0.230970, 0.309558, 0.823575, 0.475288, -0.362806, -0.359728, 0.859632, -0.882398, 0.435059, -0.179155, 0.598817, 0.235470,\n0.135299, 0.353553, 0.326641, 0.261563, 0.729955, 0.631468, -0.555272, -0.421330, 0.717045, -0.780375, 0.544938, -0.306688, 0.643255, 0.262466,\n0.176777, -0.191342, 0.426777, 0.325378, -0.382538, 0.864751, -0.890388, -0.431827, 0.143998, -0.322113, 0.814978, 0.481720, 0.734107, 0.608949,\n0.256640, -0.191342, 0.384089, 0.487830, -0.382537, 0.784657, -0.841552, -0.444954, 0.306278, -0.236581, 0.807292, 0.540656, 0.708586, 0.637959,\n0.159095, -0.277785, 0.384089, 0.326646, -0.567206, 0.756029, -0.902076, -0.425816, 0.070281, -0.275374, 0.708089, 0.650215, 0.749700, 0.666456,\n0.135299, 0.353553, 0.326641, 0.261563, 0.729955, 0.631468, -0.555272, -0.421330, 0.717045, -0.780375, 0.544938, -0.306688, 0.643255, 0.262466,\n0.196424, 0.353553, 0.293969, 0.405511, 0.683554, 0.606889, -0.503618, -0.387003, 0.772398, -0.774279, 0.609746, -0.169414, 0.621494, 0.288874,\n0.159095, 0.277785, 0.384089, 0.326646, 0.567206, 0.756029, -0.658364, -0.437374, 0.612586, -0.672901, 0.701278, -0.235399, 0.663284, 0.317370,\n0.196424, -0.353553, 0.293969, 0.390842, -0.697093, 0.601086, -0.901249, -0.422534, 0.095994, -0.200693, 0.572779, 0.794762, 0.746387, 0.749272,\n0.135299, -0.353553, 0.326641, 0.253581, -0.720868, 0.645016, -0.913094, -0.398493, -0.086381, -0.310930, 0.570681, 0.760030, 0.768457, 0.722120,\n0.159095, -0.277785, 0.384089, 0.326646, -0.567206, 0.756029, -0.902076, -0.425816, 0.070281, -0.275374, 0.708089, 0.650215, 0.749700, 0.666456,\n0.256640, 0.191342, 0.384089, 0.487830, 0.382537, 0.784657, -0.656742, -0.431327, 0.618585, -0.572659, 0.818661, -0.043086, 0.654329, 0.403082,\n0.176777, 0.191342, 0.426777, 0.325378, 0.382538, 0.864751, -0.754569, -0.446108, 0.481263, -0.566310, 0.811200, -0.145764, 0.679609, 0.374456,\n0.159095, 0.277785, 0.384089, 0.326646, 0.567206, 0.756029, -0.658364, -0.437374, 0.612586, -0.672901, 0.701278, -0.235399, 0.663284, 0.317370,\n0.135299, -0.353553, 0.326641, 0.253581, -0.720868, 0.645016, -0.913094, -0.398493, -0.086381, -0.310930, 0.570681, 0.760030, 0.768457, 0.722120,\n0.196424, -0.353553, 0.293969, 0.390842, -0.697093, 0.601086, -0.901249, -0.422534, 0.095994, -0.200693, 0.572779, 0.794762, 0.746387, 0.749272,\n0.106304, -0.415735, 0.256640, 0.216371, -0.839191, 0.498940, -0.904748, -0.364402, -0.220551, -0.367123, 0.403604, 0.838048, 0.792639, 0.774468,\n0.176777, 0.191342, 0.426777, 0.325378, 0.382538, 0.864751, -0.754569, -0.446108, 0.481263, -0.566310, 0.811200, -0.145764, 0.679609, 0.374456,\n0.256640, 0.191342, 0.384089, 0.487830, 0.382537, 0.784657, -0.656742, -0.431327, 0.618585, -0.572659, 0.818661, -0.043086, 0.654329, 0.403082,\n0.187665, 0.097545, 0.453064, 0.404870, 0.195006, 0.893338, -0.775954, -0.443563, 0.448495, -0.487796, 0.872420, 0.030634, 0.693851, 0.432732,\n0.230970, -0.277785, 0.345671, 0.482349, -0.539041, 0.690488, -0.859848, -0.441928, 0.255659, -0.169141, 0.716102, 0.677192, 0.725412, 0.694835,\n0.293969, -0.277785, 0.293969, 0.589181, -0.555607, 0.586656, -0.805752, -0.458145, 0.375323, -0.058674, 0.694723, 0.716880, 0.699985, 0.724042,\n0.196424, -0.353553, 0.293969, 0.390842, -0.697093, 0.601086, -0.901249, -0.422534, 0.095994, -0.200693, 0.572779, 0.794762, 0.746387, 0.749272,\n0.326641, 0.191342, 0.326641, 0.639780, 0.395636, 0.658903, -0.525058, -0.401068, 0.750639, -0.559581, 0.827471, 0.046488, 0.629325, 0.430241,\n0.256640, 0.191342, 0.384089, 0.487830, 0.382537, 0.784657, -0.656742, -0.431327, 0.618585, -0.572659, 0.818661, -0.043086, 0.654329, 0.403082,\n0.230970, 0.277785, 0.345671, 0.482349, 0.539041, 0.690488, -0.570198, -0.405184, 0.714633, -0.674162, 0.731742, -0.100302, 0.639314, 0.345175,\n0.196424, -0.353553, 0.293969, 0.390842, -0.697093, 0.601086, -0.901249, -0.422534, 0.095994, -0.200693, 0.572779, 0.794762, 0.746387, 0.749272,\n0.250000, -0.353553, 0.250000, 0.501585, -0.707137, 0.498368, -0.863572, -0.443584, 0.239742, -0.050333, 0.551246, 0.832823, 0.723190, 0.777783,\n0.154329, -0.415735, 0.230970, 0.323751, -0.831354, 0.451704, -0.911964, -0.401356, -0.085055, -0.276201, 0.373577, 0.885524, 0.774406, 0.799286,\n0.256640, 0.191342, 0.384089, 0.487830, 0.382537, 0.784657, -0.656742, -0.431327, 0.618585, -0.572659, 0.818661, -0.043086, 0.654329, 0.403082,\n0.326641, 0.191342, 0.326641, 0.639780, 0.395636, 0.658903, -0.525058, -0.401068, 0.750639, -0.559581, 0.827471, 0.046488, 0.629325, 0.430241,\n0.272448, 0.097545, 0.407746, 0.571370, 0.195006, 0.797188, -0.679619, -0.432092, 0.592802, -0.461244, 0.879738, 0.115390, 0.667855, 0.461824,\n0.135299, -0.461940, 0.135299, 0.256643, -0.929163, 0.266065, -0.891552, -0.333886, -0.306030, -0.403189, 0.147263, 0.903190, 0.802789, 0.862995,\n0.106304, -0.461940, 0.159095, 0.202132, -0.923819, 0.325118, -0.879274, -0.317380, -0.355171, -0.438512, 0.211461, 0.873494, 0.813873, 0.841082,\n0.154329, -0.415735, 0.230970, 0.323751, -0.831354, 0.451704, -0.911964, -0.401356, -0.085055, -0.276201, 0.373577, 0.885524, 0.774406, 0.799286,\n0.353554, 0.000000, 0.353553, 0.683524, -0.000000, 0.729928, -0.658903, -0.430280, 0.617014, -0.315155, 0.901988, 0.295120, 0.654296, 0.549514,\n0.277785, 0.000000, 0.415735, 0.527990, 0.000000, 0.849250, -0.760591, -0.444855, 0.472869, -0.377970, 0.895499, 0.234989, 0.680843, 0.520863,\n0.272448, 0.097545, 0.407746, 0.571370, 0.195006, 0.797188, -0.679619, -0.432092, 0.592802, -0.461244, 0.879738, 0.115390, 0.667855, 0.461824,\n0.135299, 0.461940, 0.135299, 0.272685, 0.923888, 0.268466, -0.068741, -0.259619, 0.963261, -0.960121, 0.279218, 0.014321, 0.555020, 0.205035,\n0.106304, 0.461940, 0.159095, 0.215072, 0.923888, 0.316505, -0.142089, -0.291038, 0.946101, -0.968208, 0.244107, -0.054637, 0.567957, 0.187359,\n0.054193, 0.490393, 0.081106, 0.123861, 0.976741, 0.175033, 0.067422, -0.184267, 0.980561, -0.990960, 0.112591, 0.072953, 0.524202, 0.149115,\n0.106304, -0.461940, 0.159095, 0.202132, -0.923819, 0.325118, -0.879274, -0.317380, -0.355171, -0.438512, 0.211461, 0.873494, 0.813873, 0.841082,\n0.135299, -0.461940, 0.135299, 0.256643, -0.929163, 0.266065, -0.891552, -0.333886, -0.306030, -0.403189, 0.147263, 0.903190, 0.802789, 0.862995,\n0.054193, -0.490393, 0.081106, 0.123861, -0.976741, 0.175033, -0.764866, -0.206349, -0.610246, -0.629644, 0.058971, 0.774642, 0.868766, 0.867891,\n0.277785, 0.000000, 0.415735, 0.527990, 0.000000, 0.849250, -0.760591, -0.444855, 0.472869, -0.377970, 0.895499, 0.234989, 0.680843, 0.520863,\n0.353554, 0.000000, 0.353553, 0.683524, -0.000000, 0.729928, -0.658903, -0.430280, 0.617014, -0.315155, 0.901988, 0.295120, 0.654296, 0.549514,\n0.272448, -0.097545, 0.407746, 0.571370, -0.195006, 0.797188, -0.775311, -0.446789, 0.446399, -0.265374, 0.875277, 0.404310, 0.694122, 0.579742,\n0.196424, 0.415735, 0.196424, 0.394718, 0.831489, 0.390926, -0.237243, -0.318812, 0.917646, -0.887510, 0.455137, -0.071945, 0.580834, 0.257236,\n0.154329, 0.415735, 0.230970, 0.309558, 0.823575, 0.475288, -0.362806, -0.359728, 0.859632, -0.882398, 0.435059, -0.179155, 0.598817, 0.235470,\n0.106304, 0.461940, 0.159095, 0.215072, 0.923888, 0.316505, -0.142089, -0.291038, 0.946101, -0.968208, 0.244107, -0.054637, 0.567957, 0.187359,\n0.326641, -0.191342, 0.326641, 0.631535, -0.382537, 0.674410, -0.765616, -0.445052, 0.464501, -0.127864, 0.806523, 0.577209, 0.682151, 0.667268,\n0.256640, -0.191342, 0.384089, 0.487830, -0.382537, 0.784657, -0.841552, -0.444954, 0.306278, -0.236581, 0.807292, 0.540656, 0.708586, 0.637959,\n0.272448, -0.097545, 0.407746, 0.571370, -0.195006, 0.797188, -0.775311, -0.446789, 0.446399, -0.265374, 0.875277, 0.404310, 0.694122, 0.579742,\n0.250000, 0.353553, 0.250000, 0.481115, 0.720868, 0.498876, -0.357926, -0.357950, 0.862415, -0.796638, 0.597035, -0.094430, 0.600175, 0.313176,\n0.196424, 0.353553, 0.293969, 0.405511, 0.683554, 0.606889, -0.503618, -0.387003, 0.772398, -0.774279, 0.609746, -0.169414, 0.621494, 0.288874,\n0.154329, 0.415735, 0.230970, 0.309558, 0.823575, 0.475288, -0.362806, -0.359728, 0.859632, -0.882398, 0.435059, -0.179155, 0.598817, 0.235470,\n0.256640, -0.191342, 0.384089, 0.487830, -0.382537, 0.784657, -0.841552, -0.444954, 0.306278, -0.236581, 0.807292, 0.540656, 0.708586, 0.637959,\n0.326641, -0.191342, 0.326641, 0.631535, -0.382537, 0.674410, -0.765616, -0.445052, 0.464501, -0.127864, 0.806523, 0.577209, 0.682151, 0.667268,\n0.230970, -0.277785, 0.345671, 0.482349, -0.539041, 0.690488, -0.859848, -0.441928, 0.255659, -0.169141, 0.716102, 0.677192, 0.725412, 0.694835,\n0.293969, 0.277785, 0.293969, 0.574714, 0.582587, 0.574714, -0.439014, -0.373186, 0.817312, -0.688256, 0.724028, -0.045690, 0.615788, 0.371156,\n0.230970, 0.277785, 0.345671, 0.482349, 0.539041, 0.690488, -0.570198, -0.405184, 0.714633, -0.674162, 0.731742, -0.100302, 0.639314, 0.345175,\n0.196424, 0.353553, 0.293969, 0.405511, 0.683554, 0.606889, -0.503618, -0.387003, 0.772398, -0.774279, 0.609746, -0.169414, 0.621494, 0.288874,\n0.384089, -0.191342, 0.256640, 0.750971, -0.382537, 0.538245, -0.660325, -0.430450, 0.615373, -0.002364, 0.813546, 0.581496, 0.654257, 0.695946,\n0.326641, -0.191342, 0.326641, 0.631535, -0.382537, 0.674410, -0.765616, -0.445052, 0.464501, -0.127864, 0.806523, 0.577209, 0.682151, 0.667268,\n0.346760, -0.097545, 0.346760, 0.715915, -0.195005, 0.670402, -0.675718, -0.435157, 0.595015, -0.170762, 0.882136, 0.438949, 0.667393, 0.608830,\n0.293969, 0.353553, 0.196424, 0.591116, 0.697093, 0.405763, -0.254938, -0.315802, 0.913934, -0.765365, 0.643528, 0.009416, 0.579002, 0.334905,\n0.250000, 0.353553, 0.250000, 0.481115, 0.720868, 0.498876, -0.357926, -0.357950, 0.862415, -0.796638, 0.597035, -0.094430, 0.600175, 0.313176,\n0.196424, 0.415735, 0.196424, 0.394718, 0.831489, 0.390926, -0.237243, -0.318812, 0.917646, -0.887510, 0.455137, -0.071945, 0.580834, 0.257236,\n0.326641, -0.191342, 0.326641, 0.631535, -0.382537, 0.674410, -0.765616, -0.445052, 0.464501, -0.127864, 0.806523, 0.577209, 0.682151, 0.667268,\n0.384089, -0.191342, 0.256640, 0.750971, -0.382537, 0.538245, -0.660325, -0.430450, 0.615373, -0.002364, 0.813546, 0.581496, 0.654257, 0.695946,\n0.293969, -0.277785, 0.293969, 0.589181, -0.555607, 0.586656, -0.805752, -0.458145, 0.375323, -0.058674, 0.694723, 0.716880, 0.699985, 0.724042,\n0.250000, 0.353553, 0.250000, 0.481115, 0.720868, 0.498876, -0.357926, -0.357950, 0.862415, -0.796638, 0.597035, -0.094430, 0.600175, 0.313176,\n0.293969, 0.353553, 0.196424, 0.591116, 0.697093, 0.405763, -0.254938, -0.315802, 0.913934, -0.765365, 0.643528, 0.009416, 0.579002, 0.334905,\n0.293969, 0.277785, 0.293969, 0.574714, 0.582587, 0.574714, -0.439014, -0.373186, 0.817312, -0.688256, 0.724028, -0.045690, 0.615788, 0.371156,\n0.293969, -0.277785, 0.293969, 0.589181, -0.555607, 0.586656, -0.805752, -0.458145, 0.375323, -0.058674, 0.694723, 0.716880, 0.699985, 0.724042,\n0.345671, -0.277785, 0.230970, 0.692311, -0.555607, 0.460442, -0.715184, -0.443416, 0.540273, 0.098946, 0.705151, 0.702119, 0.672735, 0.753249,\n0.250000, -0.353553, 0.250000, 0.501585, -0.707137, 0.498368, -0.863572, -0.443584, 0.239742, -0.050333, 0.551246, 0.832823, 0.723190, 0.777783,\n0.293969, 0.277785, 0.293969, 0.574714, 0.582587, 0.574714, -0.439014, -0.373186, 0.817312, -0.688256, 0.724028, -0.045690, 0.615788, 0.371156,\n0.345671, 0.277785, 0.230970, 0.706109, 0.528022, 0.471807, -0.336462, -0.336087, 0.879681, -0.627113, 0.775743, 0.070370, 0.592373, 0.394688,\n0.326641, 0.191342, 0.326641, 0.639780, 0.395636, 0.658903, -0.525058, -0.401068, 0.750639, -0.559581, 0.827471, 0.046488, 0.629325, 0.430241,\n0.250000, -0.353553, 0.250000, 0.501585, -0.707137, 0.498368, -0.863572, -0.443584, 0.239742, -0.050333, 0.551246, 0.832823, 0.723190, 0.777783,\n0.293969, -0.353553, 0.196424, 0.589174, -0.707137, 0.390937, -0.801426, -0.449803, 0.394199, 0.104128, 0.546243, 0.831129, 0.698089, 0.807023,\n0.196424, -0.415735, 0.196424, 0.405652, -0.831354, 0.379865, -0.906402, -0.419454, 0.049937, -0.135568, 0.356274, 0.924495, 0.755624, 0.825846,\n0.326641, 0.191342, 0.326641, 0.639780, 0.395636, 0.658903, -0.525058, -0.401068, 0.750639, -0.559581, 0.827471, 0.046488, 0.629325, 0.430241,\n0.384089, 0.191342, 0.256640, 0.763631, 0.364377, 0.533008, -0.410883, -0.362539, 0.836505, -0.501243, 0.854918, 0.133680, 0.604257, 0.455174,\n0.346760, 0.097545, 0.346760, 0.715915, 0.195005, 0.670402, -0.562504, -0.407702, 0.719284, -0.414234, 0.891580, 0.183015, 0.641879, 0.489842,\n0.159095, -0.461940, 0.106304, 0.343202, -0.910837, 0.229321, -0.916407, -0.378249, -0.130867, -0.187883, 0.172641, 0.966900, 0.792948, 0.886226,\n0.135299, -0.461940, 0.135299, 0.256643, -0.929163, 0.266065, -0.891552, -0.333886, -0.306030, -0.403189, 0.147263, 0.903190, 0.802789, 0.862995,\n0.196424, -0.415735, 0.196424, 0.405652, -0.831354, 0.379865, -0.906402, -0.419454, 0.049937, -0.135568, 0.356274, 0.924495, 0.755624, 0.825846,\n0.415735, 0.000000, 0.277785, 0.812792, 0.000000, 0.582554, -0.533537, -0.401502, 0.744402, -0.235619, 0.914556, 0.328741, 0.627086, 0.576588,\n0.353554, 0.000000, 0.353553, 0.683524, -0.000000, 0.729928, -0.658903, -0.430280, 0.617014, -0.315155, 0.901988, 0.295120, 0.654296, 0.549514,\n0.346760, 0.097545, 0.346760, 0.715915, 0.195005, 0.670402, -0.562504, -0.407702, 0.719284, -0.414234, 0.891580, 0.183015, 0.641879, 0.489842,\n0.159095, 0.461940, 0.106304, 0.319821, 0.923888, 0.210110, 0.008856, -0.224662, 0.974396, -0.947411, 0.309195, 0.082531, 0.541559, 0.220571,\n0.135299, 0.461940, 0.135299, 0.272685, 0.923888, 0.268466, -0.068741, -0.259619, 0.963261, -0.960121, 0.279218, 0.014321, 0.555020, 0.205035,\n0.068975, 0.490393, 0.068975, 0.155628, 0.976741, 0.147506, 0.108362, -0.165305, 0.980271, -0.982856, 0.138166, 0.122082, 0.518220, 0.159918,\n0.081106, -0.490393, 0.054193, 0.188870, -0.973859, 0.126198, -0.801537, -0.227128, -0.553128, -0.517361, 0.010550, 0.855703, 0.867032, 0.893366,\n0.068975, -0.490393, 0.068975, 0.137937, -0.980789, 0.137937, -0.762550, -0.194038, -0.617143, -0.658063, 0.013330, 0.752845, 0.866671, 0.880547,\n0.135299, -0.461940, 0.135299, 0.256643, -0.929163, 0.266065, -0.891552, -0.333886, -0.306030, -0.403189, 0.147263, 0.903190, 0.802789, 0.862995,\n0.353554, 0.000000, 0.353553, 0.683524, -0.000000, 0.729928, -0.658903, -0.430280, 0.617014, -0.315155, 0.901988, 0.295120, 0.654296, 0.549514,\n0.415735, 0.000000, 0.277785, 0.812792, 0.000000, 0.582554, -0.533537, -0.401502, 0.744402, -0.235619, 0.914556, 0.328741, 0.627086, 0.576588,\n0.346760, -0.097545, 0.346760, 0.715915, -0.195005, 0.670402, -0.675718, -0.435157, 0.595015, -0.170762, 0.882136, 0.438949, 0.667393, 0.608830,\n0.230970, 0.415735, 0.154329, 0.463399, 0.831489, 0.306409, -0.145438, -0.269724, 0.951891, -0.874467, 0.485046, 0.006256, 0.562811, 0.276478,\n0.196424, 0.415735, 0.196424, 0.394718, 0.831489, 0.390926, -0.237243, -0.318812, 0.917646, -0.887510, 0.455137, -0.071945, 0.580834, 0.257236,\n0.135299, 0.461940, 0.135299, 0.272685, 0.923888, 0.268466, -0.068741, -0.259619, 0.963261, -0.960121, 0.279218, 0.014321, 0.555020, 0.205035,\n0.230970, -0.415735, 0.154329, 0.482375, -0.820324, 0.307218, -0.875306, -0.437791, 0.205375, 0.031552, 0.366764, 0.929779, 0.735745, 0.853787,\n0.256640, -0.415735, 0.106304, 0.505801, -0.839191, 0.199808, -0.855445, -0.458062, 0.241648, 0.051734, 0.260712, 0.964029, 0.713786, 0.882694,\n0.159095, -0.461940, 0.106304, 0.343202, -0.910837, 0.229321, -0.916407, -0.378249, -0.130867, -0.187883, 0.172641, 0.966900, 0.792948, 0.886226,\n0.461940, 0.000000, 0.191342, 0.910825, 0.000000, 0.412793, -0.385428, -0.358038, 0.850444, -0.149711, 0.931915, 0.330335, 0.598888, 0.601120,\n0.415735, 0.000000, 0.277785, 0.812792, 0.000000, 0.582554, -0.533537, -0.401502, 0.744402, -0.235619, 0.914556, 0.328741, 0.627086, 0.576588,\n0.407747, 0.097545, 0.272447, 0.832947, 0.195006, 0.517853, -0.426367, -0.370351, 0.825258, -0.352234, 0.908612, 0.224402, 0.615573, 0.515927,\n0.176777, 0.461940, 0.073223, 0.344025, 0.929163, 0.135289, 0.104990, -0.181246, 0.977818, -0.933849, 0.323568, 0.152413, 0.527662, 0.233762,\n0.159095, 0.461940, 0.106304, 0.319821, 0.923888, 0.210110, 0.008856, -0.224662, 0.974396, -0.947411, 0.309195, 0.082531, 0.541559, 0.220571,\n0.081106, 0.490393, 0.054193, 0.181415, 0.976741, 0.114308, 0.153068, -0.142866, 0.977834, -0.971223, 0.159712, 0.176687, 0.511212, 0.169520,\n0.159095, -0.461940, 0.106304, 0.343202, -0.910837, 0.229321, -0.916407, -0.378249, -0.130867, -0.187883, 0.172641, 0.966900, 0.792948, 0.886226,\n0.176777, -0.461940, 0.073223, 0.334444, -0.931233, 0.144749, -0.912190, -0.358464, -0.198527, -0.271659, 0.051812, 0.960998, 0.785005, 0.910494,\n0.081106, -0.490393, 0.054193, 0.188870, -0.973859, 0.126198, -0.801537, -0.227128, -0.553128, -0.517361, 0.010550, 0.855703, 0.867032, 0.893366,\n0.415735, 0.000000, 0.277785, 0.812792, 0.000000, 0.582554, -0.533537, -0.401502, 0.744402, -0.235619, 0.914556, 0.328741, 0.627086, 0.576588,\n0.461940, 0.000000, 0.191342, 0.910825, 0.000000, 0.412793, -0.385428, -0.358038, 0.850444, -0.149711, 0.931915, 0.330335, 0.598888, 0.601120,\n0.407747, -0.097545, 0.272447, 0.832947, -0.195006, 0.517853, -0.548914, -0.409474, 0.728714, -0.068744, 0.892130, 0.446518, 0.639617, 0.636769,\n0.256640, 0.415735, 0.106304, 0.514273, 0.831489, 0.210118, -0.025383, -0.230135, 0.972828, -0.857217, 0.505928, 0.095995, 0.544655, 0.292902,\n0.230970, 0.415735, 0.154329, 0.463399, 0.831489, 0.306409, -0.145438, -0.269724, 0.951891, -0.874467, 0.485046, 0.006256, 0.562811, 0.276478,\n0.159095, 0.461940, 0.106304, 0.319821, 0.923888, 0.210110, 0.008856, -0.224662, 0.974396, -0.947411, 0.309195, 0.082531, 0.541559, 0.220571,\n0.426777, -0.191342, 0.176777, 0.841547, -0.382538, 0.381396, -0.522734, -0.398698, 0.753518, 0.129870, 0.828618, 0.544542, 0.624302, 0.722914,\n0.384089, -0.191342, 0.256640, 0.750971, -0.382537, 0.538245, -0.660325, -0.430450, 0.615373, -0.002364, 0.813546, 0.581496, 0.654257, 0.695946,\n0.407747, -0.097545, 0.272447, 0.832947, -0.195006, 0.517853, -0.548914, -0.409474, 0.728714, -0.068744, 0.892130, 0.446518, 0.639617, 0.636769,\n0.326641, 0.353553, 0.135299, 0.635404, 0.720869, 0.276786, -0.116036, -0.265239, 0.957175, -0.762496, 0.642333, 0.077514, 0.557787, 0.353629,\n0.293969, 0.353553, 0.196424, 0.591116, 0.697093, 0.405763, -0.254938, -0.315802, 0.913934, -0.765365, 0.643528, 0.009416, 0.579002, 0.334905,\n0.230970, 0.415735, 0.154329, 0.463399, 0.831489, 0.306409, -0.145438, -0.269724, 0.951891, -0.874467, 0.485046, 0.006256, 0.562811, 0.276478,\n0.384089, -0.191342, 0.256640, 0.750971, -0.382537, 0.538245, -0.660325, -0.430450, 0.615373, -0.002364, 0.813546, 0.581496, 0.654257, 0.695946,\n0.426777, -0.191342, 0.176777, 0.841547, -0.382538, 0.381396, -0.522734, -0.398698, 0.753518, 0.129870, 0.828618, 0.544542, 0.624302, 0.722914,\n0.345671, -0.277785, 0.230970, 0.692311, -0.555607, 0.460442, -0.715184, -0.443416, 0.540273, 0.098946, 0.705151, 0.702119, 0.672735, 0.753249,\n0.384089, 0.277785, 0.159095, 0.750900, 0.582587, 0.311034, -0.170456, -0.284039, 0.943540, -0.637258, 0.762804, 0.109690, 0.568840, 0.415192,\n0.345671, 0.277785, 0.230970, 0.706109, 0.528022, 0.471807, -0.336462, -0.336087, 0.879681, -0.627113, 0.775743, 0.070370, 0.592373, 0.394688,\n0.293969, 0.353553, 0.196424, 0.591116, 0.697093, 0.405763, -0.254938, -0.315802, 0.913934, -0.765365, 0.643528, 0.009416, 0.579002, 0.334905,\n0.345671, -0.277785, 0.230970, 0.692311, -0.555607, 0.460442, -0.715184, -0.443416, 0.540273, 0.098946, 0.705151, 0.702119, 0.672735, 0.753249,\n0.384089, -0.277785, 0.159095, 0.765567, -0.567205, 0.303621, -0.587098, -0.422928, 0.690253, 0.273964, 0.714423, 0.643850, 0.642782, 0.781431,\n0.293969, -0.353553, 0.196424, 0.589174, -0.707137, 0.390937, -0.801426, -0.449803, 0.394199, 0.104128, 0.546243, 0.831129, 0.698089, 0.807023,\n0.426777, 0.191342, 0.176777, 0.843230, 0.395637, 0.363915, -0.249378, -0.311815, 0.916833, -0.476120, 0.863962, 0.163949, 0.578878, 0.477160,\n0.384089, 0.191342, 0.256640, 0.763631, 0.364377, 0.533008, -0.410883, -0.362539, 0.836505, -0.501243, 0.854918, 0.133680, 0.604257, 0.455174,\n0.345671, 0.277785, 0.230970, 0.706109, 0.528022, 0.471807, -0.336462, -0.336087, 0.879681, -0.627113, 0.775743, 0.070370, 0.592373, 0.394688,\n0.293969, -0.353553, 0.196424, 0.589174, -0.707137, 0.390937, -0.801426, -0.449803, 0.394199, 0.104128, 0.546243, 0.831129, 0.698089, 0.807023,\n0.326641, -0.353553, 0.135299, 0.635404, -0.720869, 0.276785, -0.732722, -0.449753, 0.510726, 0.255124, 0.534302, 0.805874, 0.669894, 0.836185,\n0.230970, -0.415735, 0.154329, 0.482375, -0.820324, 0.307218, -0.875306, -0.437791, 0.205375, 0.031552, 0.366764, 0.929779, 0.735745, 0.853787,\n0.384089, 0.191342, 0.256640, 0.763631, 0.364377, 0.533008, -0.410883, -0.362539, 0.836505, -0.501243, 0.854918, 0.133680, 0.604257, 0.455174,\n0.426777, 0.191342, 0.176777, 0.843230, 0.395637, 0.363915, -0.249378, -0.311815, 0.916833, -0.476120, 0.863962, 0.163949, 0.578878, 0.477160,\n0.407747, 0.097545, 0.272447, 0.832947, 0.195006, 0.517853, -0.426367, -0.370351, 0.825258, -0.352234, 0.908612, 0.224402, 0.615573, 0.515927,\n0.346760, -0.353553, 0.068975, 0.688774, -0.706948, 0.160670, -0.589351, -0.416932, 0.691978, 0.406980, 0.560448, 0.721294, 0.636789, 0.864121,\n0.326641, -0.353553, 0.135299, 0.635404, -0.720869, 0.276785, -0.732722, -0.449753, 0.510726, 0.255124, 0.534302, 0.805874, 0.669894, 0.836185,\n0.384089, -0.277785, 0.159095, 0.765567, -0.567205, 0.303621, -0.587098, -0.422928, 0.690253, 0.273964, 0.714423, 0.643850, 0.642782, 0.781431,\n0.384089, 0.277785, 0.159095, 0.750900, 0.582587, 0.311034, -0.170456, -0.284039, 0.943540, -0.637258, 0.762804, 0.109690, 0.568840, 0.415192,\n0.407747, 0.277785, 0.081106, 0.815119, 0.555607, 0.163958, -0.041973, -0.225641, 0.973306, -0.578069, 0.798528, 0.167894, 0.545057, 0.432130,\n0.426777, 0.191342, 0.176777, 0.843230, 0.395637, 0.363915, -0.249378, -0.311815, 0.916833, -0.476120, 0.863962, 0.163949, 0.578878, 0.477160,\n0.326641, -0.353553, 0.135299, 0.635404, -0.720869, 0.276785, -0.732722, -0.449753, 0.510726, 0.255124, 0.534302, 0.805874, 0.669894, 0.836185,\n0.346760, -0.353553, 0.068975, 0.688774, -0.706948, 0.160670, -0.589351, -0.416932, 0.691978, 0.406980, 0.560448, 0.721294, 0.636789, 0.864121,\n0.256640, -0.415735, 0.106304, 0.505801, -0.839191, 0.199808, -0.855445, -0.458062, 0.241648, 0.051734, 0.260712, 0.964029, 0.713786, 0.882694,\n0.426777, 0.191342, 0.176777, 0.843230, 0.395637, 0.363915, -0.249378, -0.311815, 0.916833, -0.476120, 0.863962, 0.163949, 0.578878, 0.477160,\n0.453064, 0.191342, 0.090120, 0.905876, 0.382712, 0.181440, -0.088455, -0.247989, 0.964716, -0.414697, 0.888549, 0.196233, 0.553039, 0.495510,\n0.453064, 0.097545, 0.187665, 0.917971, 0.195006, 0.345401, -0.273171, -0.320559, 0.906984, -0.287255, 0.927329, 0.239888, 0.588664, 0.539227,\n0.187665, -0.461940, 0.037329, 0.361208, -0.929163, 0.078641, -0.930186, -0.364953, -0.039539, -0.049843, 0.064976, 0.996641, 0.780385, 0.935456,\n0.176777, -0.461940, 0.073223, 0.334444, -0.931233, 0.144749, -0.912190, -0.358464, -0.198527, -0.271659, 0.051812, 0.960998, 0.785005, 0.910494,\n0.256640, -0.415735, 0.106304, 0.505801, -0.839191, 0.199808, -0.855445, -0.458062, 0.241648, 0.051734, 0.260712, 0.964029, 0.713786, 0.882694,\n0.490393, 0.000000, 0.097545, 0.973856, 0.000000, 0.227166, -0.216729, -0.299626, 0.929114, -0.069516, 0.952027, 0.298015, 0.569479, 0.622121,\n0.461940, 0.000000, 0.191342, 0.910825, 0.000000, 0.412793, -0.385428, -0.358038, 0.850444, -0.149711, 0.931915, 0.330335, 0.598888, 0.601120,\n0.453064, 0.097545, 0.187665, 0.917971, 0.195006, 0.345401, -0.273171, -0.320559, 0.906984, -0.287255, 0.927329, 0.239888, 0.588664, 0.539227,\n0.090120, 0.490393, 0.037329, 0.180222, 0.980789, 0.074651, 0.212929, -0.112995, 0.970512, -0.961087, 0.159432, 0.225594, 0.503412, 0.177731,\n0.095671, 0.490393, 0.019030, 0.222787, 0.973859, 0.044314, 0.222436, -0.095039, 0.970304, -0.937833, 0.201692, 0.282472, 0.495010, 0.184398,\n0.176777, 0.461940, 0.073223, 0.344025, 0.929163, 0.135289, 0.104990, -0.181246, 0.977818, -0.933849, 0.323568, 0.152413, 0.527662, 0.233762,\n0.176777, -0.461940, 0.073223, 0.334444, -0.931233, 0.144749, -0.912190, -0.358464, -0.198527, -0.271659, 0.051812, 0.960998, 0.785005, 0.910494,\n0.187665, -0.461940, 0.037329, 0.361208, -0.929163, 0.078641, -0.930186, -0.364953, -0.039539, -0.049843, 0.064976, 0.996641, 0.780385, 0.935456,\n0.090120, -0.490393, 0.037329, 0.200230, -0.976741, 0.076720, -0.795149, -0.207753, -0.569716, -0.589941, -0.057676, 0.805384, 0.870555, 0.905851,\n0.461940, 0.000000, 0.191342, 0.910825, 0.000000, 0.412793, -0.385428, -0.358038, 0.850444, -0.149711, 0.931915, 0.330335, 0.598888, 0.601120,\n0.490393, 0.000000, 0.097545, 0.973856, 0.000000, 0.227166, -0.216729, -0.299626, 0.929114, -0.069516, 0.952027, 0.298015, 0.569479, 0.622121,\n0.453064, -0.097545, 0.187665, 0.917971, -0.195006, 0.345401, -0.394808, -0.365434, 0.842962, 0.044080, 0.915562, 0.399754, 0.610368, 0.662513,\n0.272448, 0.415735, 0.054193, 0.545382, 0.831490, 0.105750, 0.084079, -0.179799, 0.980104, -0.834031, 0.525792, 0.167141, 0.526326, 0.306241,\n0.256640, 0.415735, 0.106304, 0.514273, 0.831489, 0.210118, -0.025383, -0.230135, 0.972828, -0.857217, 0.505928, 0.095995, 0.544655, 0.292902,\n0.176777, 0.461940, 0.073223, 0.344025, 0.929163, 0.135289, 0.104990, -0.181246, 0.977818, -0.933849, 0.323568, 0.152413, 0.527662, 0.233762,\n0.453064, -0.191342, 0.090120, 0.899784, -0.382537, 0.209889, -0.350426, -0.346922, 0.869969, 0.254532, 0.850869, 0.459603, 0.591705, 0.746902,\n0.426777, -0.191342, 0.176777, 0.841547, -0.382538, 0.381396, -0.522734, -0.398698, 0.753518, 0.129870, 0.828618, 0.544542, 0.624302, 0.722914,\n0.453064, -0.097545, 0.187665, 0.917971, -0.195006, 0.345401, -0.394808, -0.365434, 0.842962, 0.044080, 0.915562, 0.399754, 0.610368, 0.662513,\n0.346760, 0.353553, 0.068975, 0.688774, 0.706948, 0.160670, -0.005444, -0.216572, 0.976251, -0.724924, 0.674253, 0.140953, 0.536424, 0.368955,\n0.326641, 0.353553, 0.135299, 0.635404, 0.720869, 0.276786, -0.116036, -0.265239, 0.957175, -0.762496, 0.642333, 0.077514, 0.557787, 0.353629,\n0.256640, 0.415735, 0.106304, 0.514273, 0.831489, 0.210118, -0.025383, -0.230135, 0.972828, -0.857217, 0.505928, 0.095995, 0.544655, 0.292902,\n0.426777, -0.191342, 0.176777, 0.841547, -0.382538, 0.381396, -0.522734, -0.398698, 0.753518, 0.129870, 0.828618, 0.544542, 0.624302, 0.722914,\n0.453064, -0.191342, 0.090120, 0.899784, -0.382537, 0.209889, -0.350426, -0.346922, 0.869969, 0.254532, 0.850869, 0.459603, 0.591705, 0.746902,\n0.384089, -0.277785, 0.159095, 0.765567, -0.567205, 0.303621, -0.587098, -0.422928, 0.690253, 0.273964, 0.714423, 0.643850, 0.642782, 0.781431,\n0.326641, 0.353553, 0.135299, 0.635404, 0.720869, 0.276786, -0.116036, -0.265239, 0.957175, -0.762496, 0.642333, 0.077514, 0.557787, 0.353629,\n0.346760, 0.353553, 0.068975, 0.688774, 0.706948, 0.160670, -0.005444, -0.216572, 0.976251, -0.724924, 0.674253, 0.140953, 0.536424, 0.368955,\n0.384089, 0.277785, 0.159095, 0.750900, 0.582587, 0.311034, -0.170456, -0.284039, 0.943540, -0.637258, 0.762804, 0.109690, 0.568840, 0.415192,\n0.277785, 0.415735, -0.000000, 0.543761, 0.839192, -0.008964, 0.204389, -0.122060, 0.971250, -0.814058, 0.530012, 0.237479, 0.507822, 0.316262,\n0.272448, 0.415735, 0.054193, 0.545382, 0.831490, 0.105750, 0.084079, -0.179799, 0.980104, -0.834031, 0.525792, 0.167141, 0.526326, 0.306241,\n0.187665, 0.461940, 0.037329, 0.394878, 0.916136, 0.069037, 0.150979, -0.138830, 0.978740, -0.900394, 0.370962, 0.227325, 0.513410, 0.244425,\n0.461940, -0.191342, -0.000000, 0.923442, -0.382538, 0.030317, -0.144235, -0.272797, 0.951198, 0.352860, 0.877533, 0.324693, 0.556083, 0.766452,\n0.453064, -0.191342, 0.090120, 0.899784, -0.382537, 0.209889, -0.350426, -0.346922, 0.869969, 0.254532, 0.850869, 0.459603, 0.591705, 0.746902,\n0.480970, -0.097545, 0.095671, 0.967717, -0.195006, 0.159677, -0.214521, -0.304707, 0.927973, 0.136665, 0.938306, 0.317654, 0.579306, 0.684921,\n0.353554, 0.353553, -0.000000, 0.706884, 0.706949, 0.023206, 0.125175, -0.157319, 0.979582, -0.696682, 0.690197, 0.195606, 0.514875, 0.380541,\n0.346760, 0.353553, 0.068975, 0.688774, 0.706948, 0.160670, -0.005444, -0.216572, 0.976251, -0.724924, 0.674253, 0.140953, 0.536424, 0.368955,\n0.272448, 0.415735, 0.054193, 0.545382, 0.831490, 0.105750, 0.084079, -0.179799, 0.980104, -0.834031, 0.525792, 0.167141, 0.526326, 0.306241,\n0.453064, -0.191342, 0.090120, 0.899784, -0.382537, 0.209889, -0.350426, -0.346922, 0.869969, 0.254532, 0.850869, 0.459603, 0.591705, 0.746902,\n0.461940, -0.191342, -0.000000, 0.923442, -0.382538, 0.030317, -0.144235, -0.272797, 0.951198, 0.352860, 0.877533, 0.324693, 0.556083, 0.766452,\n0.407747, -0.277785, 0.081106, 0.820488, -0.555401, 0.135385, -0.388731, -0.368416, 0.844487, 0.417575, 0.744024, 0.521593, 0.609075, 0.807270,\n0.346760, 0.353553, 0.068975, 0.688774, 0.706948, 0.160670, -0.005444, -0.216572, 0.976251, -0.724924, 0.674253, 0.140953, 0.536424, 0.368955,\n0.353554, 0.353553, -0.000000, 0.706884, 0.706949, 0.023206, 0.125175, -0.157319, 0.979582, -0.696682, 0.690197, 0.195606, 0.514875, 0.380541,\n0.407747, 0.277785, 0.081106, 0.815119, 0.555607, 0.163958, -0.041973, -0.225641, 0.973306, -0.578069, 0.798528, 0.167894, 0.545057, 0.432130,\n0.353554, -0.353553, -0.000000, 0.706884, -0.706949, 0.023206, -0.388828, -0.360967, 0.847653, 0.573742, 0.592259, 0.565729, 0.596152, 0.889050,\n0.346760, -0.353553, 0.068975, 0.688774, -0.706948, 0.160670, -0.589351, -0.416932, 0.691978, 0.406980, 0.560448, 0.721294, 0.636789, 0.864121,\n0.407747, -0.277785, 0.081106, 0.820488, -0.555401, 0.135385, -0.388731, -0.368416, 0.844487, 0.417575, 0.744024, 0.521593, 0.609075, 0.807270,\n0.407747, 0.277785, 0.081106, 0.815119, 0.555607, 0.163958, -0.041973, -0.225641, 0.973306, -0.578069, 0.798528, 0.167894, 0.545057, 0.432130,\n0.415735, 0.277785, -0.000000, 0.831444, 0.555606, 0.001784, 0.106358, -0.162310, 0.980991, -0.544500, 0.814178, 0.201579, 0.520977, 0.445030,\n0.453064, 0.191342, 0.090120, 0.905876, 0.382712, 0.181440, -0.088455, -0.247989, 0.964716, -0.414697, 0.888549, 0.196233, 0.553039, 0.495510,\n0.346760, -0.353553, 0.068975, 0.688774, -0.706948, 0.160670, -0.589351, -0.416932, 0.691978, 0.406980, 0.560448, 0.721294, 0.636789, 0.864121,\n0.353554, -0.353553, -0.000000, 0.706884, -0.706949, 0.023206, -0.388828, -0.360967, 0.847653, 0.573742, 0.592259, 0.565729, 0.596152, 0.889050,\n0.272448, -0.415735, 0.054193, 0.548328, -0.831354, 0.090477, -0.759805, -0.450075, 0.469179, 0.307801, 0.301235, 0.902505, 0.687796, 0.912014,\n0.453064, 0.191342, 0.090120, 0.905876, 0.382712, 0.181440, -0.088455, -0.247989, 0.964716, -0.414697, 0.888549, 0.196233, 0.553039, 0.495510,\n0.461940, 0.191342, -0.000000, 0.929088, 0.369649, -0.012471, 0.083053, -0.175655, 0.980942, -0.360348, 0.912280, 0.194666, 0.526697, 0.509604,\n0.480970, 0.097545, 0.095671, 0.967717, 0.195006, 0.159677, -0.106435, -0.258093, 0.960239, -0.227764, 0.947900, 0.222730, 0.560981, 0.558903,\n0.191342, -0.461940, -0.000000, 0.382652, -0.923888, 0.002983, -0.883013, -0.364769, 0.295351, 0.059284, 0.027776, 0.997855, 0.782721, 0.960585,\n0.187665, -0.461940, 0.037329, 0.361208, -0.929163, 0.078641, -0.930186, -0.364953, -0.039539, -0.049843, 0.064976, 0.996641, 0.780385, 0.935456,\n0.272448, -0.415735, 0.054193, 0.548328, -0.831354, 0.090477, -0.759805, -0.450075, 0.469179, 0.307801, 0.301235, 0.902505, 0.687796, 0.912014,\n0.500000, 0.000000, -0.000000, 0.999461, -0.000000, 0.032814, -0.031958, -0.226843, 0.973407, -0.007702, 0.972059, 0.234608, 0.538797, 0.638607,\n0.490393, 0.000000, 0.097545, 0.973856, 0.000000, 0.227166, -0.216729, -0.299626, 0.929114, -0.069516, 0.952027, 0.298015, 0.569479, 0.622121,\n0.480970, 0.097545, 0.095671, 0.967717, 0.195006, 0.159677, -0.106435, -0.258093, 0.960239, -0.227764, 0.947900, 0.222730, 0.560981, 0.558903,\n0.191342, 0.461940, -0.000000, 0.352136, 0.935949, 0.000000, 0.255192, -0.096012, 0.962112, -0.902615, 0.339595, 0.264501, 0.498880, 0.252406,\n0.187665, 0.461940, 0.037329, 0.394878, 0.916136, 0.069037, 0.150979, -0.138830, 0.978740, -0.900394, 0.370962, 0.227325, 0.513410, 0.244425,\n0.095671, 0.490393, 0.019030, 0.222787, 0.973859, 0.044314, 0.222436, -0.095039, 0.970304, -0.937833, 0.201692, 0.282472, 0.495010, 0.184398,\n0.097545, -0.490393, -0.000000, 0.214348, -0.976741, 0.005744, -0.829297, -0.185092, -0.527265, -0.384625, -0.078998, 0.919686, 0.890236, 0.927070,\n0.095671, -0.490393, 0.019030, 0.191324, -0.980789, 0.038055, -0.769801, -0.173994, -0.614112, -0.685546, -0.105782, 0.720303, 0.878052, 0.917359,\n0.187665, -0.461940, 0.037329, 0.361208, -0.929163, 0.078641, -0.804954, -0.353269, -0.476707, -0.587712, -0.161370, 0.792814, 0.780385, 0.935456,\n0.490393, 0.000000, 0.097545, 0.973856, 0.000000, 0.227166, -0.216729, -0.299626, 0.929114, -0.069516, 0.952027, 0.298015, 0.569479, 0.622121,\n0.500000, 0.000000, -0.000000, 0.999461, -0.000000, 0.032814, -0.031958, -0.226843, 0.973407, -0.007702, 0.972059, 0.234608, 0.538797, 0.638607,\n0.480970, -0.097545, 0.095671, 0.967717, -0.195006, 0.159677, -0.214521, -0.304707, 0.927973, 0.136665, 0.938306, 0.317654, 0.579306, 0.684921,\n0.480970, 0.097545, -0.095671, 0.956310, 0.208865, -0.204562, 0.230483, -0.108168, 0.967046, -0.181699, 0.972781, 0.143816, 0.503275, 0.584332,\n0.490393, 0.097545, -0.000000, 0.984244, 0.175718, -0.019687, 0.053867, -0.191932, 0.979929, -0.168970, 0.967514, 0.188060, 0.532482, 0.574164,\n0.461940, 0.191342, -0.000000, 0.929088, 0.369649, -0.012471, 0.083053, -0.175655, 0.980942, -0.360348, 0.912280, 0.194666, 0.526697, 0.509604,\n0.187665, -0.461940, -0.037329, 0.394878, -0.916136, -0.069037, -0.834980, -0.389211, 0.389003, -0.348356, -0.218834, 0.911460, 0.803866, 0.984622,\n0.191342, -0.461940, -0.000000, 0.382652, -0.923888, 0.002983, -0.883013, -0.364769, 0.295351, 0.059284, 0.027776, 0.997855, 0.782721, 0.960585,\n0.277785, -0.415735, -0.000000, 0.555444, -0.831354, -0.018237, -0.788410, -0.533471, 0.306300, -0.261756, -0.195616, 0.945102, 0.653363, 0.940796,\n0.490393, 0.000000, -0.097545, 0.986659, -0.000000, -0.162803, 0.161158, -0.141797, 0.976689, 0.024489, 0.988622, 0.148412, 0.506995, 0.649694,\n0.500000, 0.000000, -0.000000, 0.999461, -0.000000, 0.032814, -0.031958, -0.226843, 0.973407, -0.007702, 0.972059, 0.234608, 0.538797, 0.638607,\n0.490393, 0.097545, -0.000000, 0.984244, 0.175718, -0.019687, 0.053867, -0.191932, 0.979929, -0.168970, 0.967514, 0.188060, 0.532482, 0.574164,\n0.097545, 0.490393, -0.000000, 0.195071, 0.980789, -0.000000, 0.311436, -0.061942, 0.948246, -0.926912, 0.184355, 0.326876, 0.486168, 0.189402,\n0.095671, 0.490393, -0.019030, 0.222787, 0.973859, -0.044314, 0.347838, -0.036945, 0.936826, -0.900239, 0.222962, 0.373975, 0.477031, 0.192654,\n0.191342, 0.461940, -0.000000, 0.352136, 0.935949, 0.000000, 0.255192, -0.096012, 0.962112, -0.902615, 0.339595, 0.264501, 0.498880, 0.252406,\n0.095671, -0.490393, -0.019030, 0.222787, -0.973859, -0.044314, -0.711124, -0.131252, -0.690706, -0.669132, -0.185817, 0.719538, 0.907224, 0.934025,\n0.097545, -0.490393, -0.000000, 0.214348, -0.976741, 0.005744, -0.829297, -0.185092, -0.527265, -0.384625, -0.078998, 0.919686, 0.890236, 0.927070,\n0.191342, -0.461940, -0.000000, 0.382652, -0.923888, 0.002983, -0.784059, -0.326443, -0.527908, -0.293899, -0.118664, 0.948442, 0.782721, 0.960585,\n0.500000, 0.000000, -0.000000, 0.999461, -0.000000, 0.032814, -0.031958, -0.226843, 0.973407, -0.007702, 0.972059, 0.234608, 0.538797, 0.638607,\n0.490393, 0.000000, -0.097545, 0.986659, -0.000000, -0.162803, 0.161158, -0.141797, 0.976689, 0.024489, 0.988622, 0.148412, 0.506995, 0.649694,\n0.490393, -0.097545, -0.000000, 0.980274, -0.195005, -0.032182, -0.013067, -0.226420, 0.973942, 0.197399, 0.957908, 0.208438, 0.546288, 0.702787,\n0.191342, 0.461940, -0.000000, 0.352136, 0.935949, 0.000000, 0.255192, -0.096012, 0.962112, -0.902615, 0.339595, 0.264501, 0.498880, 0.252406,\n0.187665, 0.461940, -0.037329, 0.404835, 0.910837, -0.080527, 0.316484, -0.056952, 0.946887, -0.851624, 0.407647, 0.329487, 0.484155, 0.257585,\n0.277785, 0.415735, -0.000000, 0.543761, 0.839192, -0.008964, 0.204389, -0.122060, 0.971250, -0.814058, 0.530012, 0.237479, 0.507822, 0.316262,\n0.453064, -0.191342, -0.090120, 0.911613, -0.382537, -0.150420, 0.087633, -0.176658, 0.980363, 0.403254, 0.903220, 0.146900, 0.517534, 0.780027,\n0.461940, -0.191342, -0.000000, 0.923442, -0.382538, 0.030317, -0.144235, -0.272797, 0.951198, 0.352860, 0.877533, 0.324693, 0.556083, 0.766452,\n0.490393, -0.097545, -0.000000, 0.980274, -0.195005, -0.032182, -0.013067, -0.226420, 0.973942, 0.197399, 0.957908, 0.208438, 0.546288, 0.702787,\n0.346760, 0.353553, -0.068975, 0.704900, 0.697093, -0.131065, 0.265510, -0.087972, 0.960086, -0.658164, 0.711704, 0.245557, 0.493157, 0.388113,\n0.353554, 0.353553, -0.000000, 0.706884, 0.706949, 0.023206, 0.125175, -0.157319, 0.979582, -0.696682, 0.690197, 0.195606, 0.514875, 0.380541,\n0.277785, 0.415735, -0.000000, 0.543761, 0.839192, -0.008964, 0.204389, -0.122060, 0.971250, -0.814058, 0.530012, 0.237479, 0.507822, 0.316262,\n0.461940, -0.191342, -0.000000, 0.923442, -0.382538, 0.030317, -0.144235, -0.272797, 0.951198, 0.352860, 0.877533, 0.324693, 0.556083, 0.766452,\n0.453064, -0.191342, -0.090120, 0.911613, -0.382537, -0.150420, 0.087633, -0.176658, 0.980363, 0.403254, 0.903220, 0.146900, 0.517534, 0.780027,\n0.415735, -0.277785, -0.000000, 0.831136, -0.555400, -0.027288, -0.161499, -0.288052, 0.943898, 0.537566, 0.789958, 0.294938, 0.570592, 0.829046,\n0.353554, 0.353553, -0.000000, 0.706884, 0.706949, 0.023206, 0.125175, -0.157319, 0.979582, -0.696682, 0.690197, 0.195606, 0.514875, 0.380541,\n0.346760, 0.353553, -0.068975, 0.704900, 0.697093, -0.131065, 0.265510, -0.087972, 0.960086, -0.658164, 0.711704, 0.245557, 0.493157, 0.388113,\n0.415735, 0.277785, -0.000000, 0.831444, 0.555606, 0.001784, 0.106358, -0.162310, 0.980991, -0.544500, 0.814178, 0.201579, 0.520977, 0.445030,\n0.346760, -0.353553, -0.068975, 0.704900, -0.697093, -0.131065, -0.060717, -0.243402, 0.968023, 0.702873, 0.661647, 0.261136, 0.545138, 0.908176,\n0.353554, -0.353553, -0.000000, 0.706884, -0.706949, 0.023206, -0.388828, -0.360967, 0.847653, 0.573742, 0.592259, 0.565729, 0.596152, 0.889050,\n0.415735, -0.277785, -0.000000, 0.831136, -0.555400, -0.027288, -0.161499, -0.288052, 0.943898, 0.537566, 0.789958, 0.294938, 0.570592, 0.829046,\n0.415735, 0.277785, -0.000000, 0.831444, 0.555606, 0.001784, 0.106358, -0.162310, 0.980991, -0.544500, 0.814178, 0.201579, 0.520977, 0.445030,\n0.407747, 0.277785, -0.081106, 0.829321, 0.539042, -0.147176, 0.236915, -0.100664, 0.966301, -0.504913, 0.835747, 0.215849, 0.496629, 0.453507,\n0.461940, 0.191342, -0.000000, 0.929088, 0.369649, -0.012471, 0.083053, -0.175655, 0.980942, -0.360348, 0.912280, 0.194666, 0.526697, 0.509604,\n0.353554, -0.353553, -0.000000, 0.706884, -0.706949, 0.023206, -0.388828, -0.360967, 0.847653, 0.573742, 0.592259, 0.565729, 0.596152, 0.889050,\n0.346760, -0.353553, -0.068975, 0.704900, -0.697093, -0.131065, -0.060717, -0.243402, 0.968023, 0.702873, 0.661647, 0.261136, 0.545138, 0.908176,\n0.277785, -0.415735, -0.000000, 0.555444, -0.831354, -0.018237, -0.598101, -0.414648, 0.685815, 0.586529, 0.376136, 0.717290, 0.653363, 0.940796,\n0.453064, -0.191342, -0.090120, 0.911613, -0.382537, -0.150420, 0.087633, -0.176658, 0.980363, 0.403254, 0.903220, 0.146900, 0.517534, 0.780027,\n0.426777, -0.191342, -0.176777, 0.864751, -0.382538, -0.325378, 0.324072, -0.069888, 0.943447, 0.386897, 0.920540, -0.054003, 0.476902, 0.786308,\n0.407747, -0.277785, -0.081106, 0.822514, -0.539042, -0.181394, 0.098463, -0.179163, 0.978880, 0.559041, 0.824922, 0.083529, 0.526914, 0.844671,\n0.384089, 0.277785, -0.159095, 0.765567, 0.567205, -0.303621, 0.385074, -0.025920, 0.922522, -0.514652, 0.823117, 0.240024, 0.472108, 0.457294,\n0.407747, 0.277785, -0.081106, 0.829321, 0.539042, -0.147176, 0.236915, -0.100664, 0.966301, -0.504913, 0.835747, 0.215849, 0.496629, 0.453507,\n0.346760, 0.353553, -0.068975, 0.704900, 0.697093, -0.131065, 0.265510, -0.087972, 0.960086, -0.658164, 0.711704, 0.245557, 0.493157, 0.388113,\n0.407747, -0.277785, -0.081106, 0.822514, -0.539042, -0.181394, 0.098463, -0.179163, 0.978880, 0.559041, 0.824922, 0.083529, 0.526914, 0.844671,\n0.384089, -0.277785, -0.159095, 0.767470, -0.555607, -0.319829, 0.341734, -0.067542, 0.937366, 0.539164, 0.829297, -0.146864, 0.479145, 0.852075,\n0.346760, -0.353553, -0.068975, 0.704900, -0.697093, -0.131065, -0.060717, -0.243402, 0.968023, 0.702873, 0.661647, 0.261136, 0.545138, 0.908176,\n0.407747, 0.277785, -0.081106, 0.829321, 0.539042, -0.147176, 0.236915, -0.100664, 0.966301, -0.504913, 0.835747, 0.215849, 0.496629, 0.453507,\n0.384089, 0.277785, -0.159095, 0.765567, 0.567205, -0.303621, 0.385074, -0.025920, 0.922522, -0.514652, 0.823117, 0.240024, 0.472108, 0.457294,\n0.453064, 0.191342, -0.090120, 0.895005, 0.400772, -0.195824, 0.253101, -0.094792, 0.962785, -0.366434, 0.910934, 0.189538, 0.499915, 0.518924,\n0.346760, -0.353553, -0.068975, 0.704900, -0.697093, -0.131065, -0.060717, -0.243402, 0.968023, 0.702873, 0.661647, 0.261136, 0.545138, 0.908176,\n0.326641, -0.353553, -0.135299, 0.652380, -0.707137, -0.272688, 0.291421, -0.098085, 0.951553, 0.697056, 0.701070, -0.150380, 0.483764, 0.917774,\n0.272448, -0.415735, -0.054193, 0.541214, -0.831354, -0.126245, -0.017698, -0.161362, 0.986737, 0.836185, 0.547940, -0.023580, 0.599170, 0.966771,\n0.453064, 0.191342, -0.090120, 0.895005, 0.400772, -0.195824, 0.253101, -0.094792, 0.962785, -0.366434, 0.910934, 0.189538, 0.499915, 0.518924,\n0.426777, 0.191342, -0.176777, 0.854011, 0.382713, -0.352415, 0.390777, -0.024696, 0.920154, -0.341723, 0.923419, 0.174708, 0.472849, 0.523103,\n0.480970, 0.097545, -0.095671, 0.956310, 0.208865, -0.204562, 0.230483, -0.108168, 0.967046, -0.181699, 0.972781, 0.143816, 0.503275, 0.584332,\n0.176777, -0.461940, -0.073223, 0.358305, -0.923819, -0.134817, -0.755596, -0.371765, 0.539320, -0.485290, -0.307659, 0.818437, 0.889443, 1.002041,\n0.187665, -0.461940, -0.037329, 0.394878, -0.916136, -0.069037, -0.834980, -0.389211, 0.389003, -0.348356, -0.218834, 0.911460, 0.803866, 0.984622,\n0.272448, -0.415735, -0.054193, 0.541214, -0.831354, -0.126245, -0.679499, -0.520825, 0.516742, -0.435912, -0.405769, 0.803326, 0.599170, 0.966771,\n0.461940, 0.000000, -0.191342, 0.935939, 0.000000, -0.352163, 0.351751, -0.048347, 0.934844, 0.019938, 0.998396, 0.052990, 0.474458, 0.654717,\n0.490393, 0.000000, -0.097545, 0.986659, -0.000000, -0.162803, 0.161158, -0.141797, 0.976689, 0.024489, 0.988622, 0.148412, 0.506995, 0.649694,\n0.480970, 0.097545, -0.095671, 0.956310, 0.208865, -0.204562, 0.230483, -0.108168, 0.967046, -0.181699, 0.972781, 0.143816, 0.503275, 0.584332,\n0.176777, 0.461940, -0.073223, 0.338842, 0.931233, -0.134132, 0.405589, -0.015942, 0.913916, -0.849791, 0.364109, 0.381156, 0.469318, 0.259882,\n0.187665, 0.461940, -0.037329, 0.404835, 0.910837, -0.080527, 0.316484, -0.056952, 0.946887, -0.851624, 0.407647, 0.329487, 0.484155, 0.257585,\n0.095671, 0.490393, -0.019030, 0.222787, 0.973859, -0.044314, 0.347838, -0.036945, 0.936826, -0.900239, 0.222962, 0.373975, 0.477031, 0.192654,\n0.187665, -0.461940, -0.037329, 0.394878, -0.916136, -0.069037, -0.792255, -0.301506, -0.530496, -0.466512, -0.264678, 0.843986, 0.803866, 0.984622,\n0.176777, -0.461940, -0.073223, 0.358305, -0.923819, -0.134817, -0.538038, -0.086314, -0.838490, -0.726213, -0.366540, 0.581604, 0.889443, 1.002041,\n0.095671, -0.490393, -0.019030, 0.222787, -0.973859, -0.044314, -0.711124, -0.131252, -0.690706, -0.669132, -0.185817, 0.719538, 0.907224, 0.934025,\n0.490393, 0.000000, -0.097545, 0.986659, -0.000000, -0.162803, 0.161158, -0.141797, 0.976689, 0.024489, 0.988622, 0.148412, 0.506995, 0.649694,\n0.461940, 0.000000, -0.191342, 0.935939, 0.000000, -0.352163, 0.351751, -0.048347, 0.934844, 0.019938, 0.998396, 0.052990, 0.474458, 0.654717,\n0.480970, -0.097545, -0.095671, 0.955160, -0.195006, -0.222807, 0.199646, -0.131542, 0.970999, 0.212424, 0.975523, 0.056846, 0.511490, 0.714959,\n0.256640, 0.415735, -0.106304, 0.487769, 0.849271, -0.202041, 0.403795, -0.014299, 0.914738, -0.773018, 0.527728, 0.352059, 0.470438, 0.325681,\n0.272448, 0.415735, -0.054193, 0.558327, 0.820324, -0.123852, 0.303124, -0.062748, 0.950883, -0.767142, 0.567331, 0.299381, 0.489174, 0.322784,\n0.187665, 0.461940, -0.037329, 0.404835, 0.910837, -0.080527, 0.316484, -0.056952, 0.946887, -0.851624, 0.407647, 0.329487, 0.484155, 0.257585,\n0.426777, -0.191342, -0.176777, 0.864751, -0.382538, -0.325378, 0.324072, -0.069888, 0.943447, 0.386897, 0.920540, -0.054003, 0.476902, 0.786308,\n0.453064, -0.191342, -0.090120, 0.911613, -0.382537, -0.150420, 0.087633, -0.176658, 0.980363, 0.403254, 0.903220, 0.146900, 0.517534, 0.780027,\n0.480970, -0.097545, -0.095671, 0.955160, -0.195006, -0.222807, 0.199646, -0.131542, 0.970999, 0.212424, 0.975523, 0.056846, 0.511490, 0.714959,\n0.326641, 0.353553, -0.135299, 0.631468, 0.729955, -0.261563, 0.398337, -0.015971, 0.917100, -0.663967, 0.683254, 0.303830, 0.471329, 0.391486,\n0.346760, 0.353553, -0.068975, 0.704900, 0.697093, -0.131065, 0.265510, -0.087972, 0.960086, -0.658164, 0.711704, 0.245557, 0.493157, 0.388113,\n0.272448, 0.415735, -0.054193, 0.558327, 0.820324, -0.123852, 0.303124, -0.062748, 0.950883, -0.767142, 0.567331, 0.299381, 0.489174, 0.322784,\n0.176777, -0.461940, -0.073223, 0.358305, -0.923819, -0.134817, -0.538038, -0.086314, -0.838490, -0.726213, -0.366540, 0.581604, 0.889443, 1.002041,\n0.159095, -0.461940, -0.106304, 0.325118, -0.923819, -0.202130, -0.265505, 0.115975, -0.957109, -0.936279, -0.344503, 0.068552, 1.028460, 0.996322,\n0.090120, -0.490393, -0.037329, 0.195833, -0.976741, -0.087334, -0.450755, -0.010566, -0.892585, -0.819615, -0.211923, 0.532278, 0.927836, 0.937310,\n0.461940, 0.000000, -0.191342, 0.935939, 0.000000, -0.352163, 0.351751, -0.048347, 0.934844, 0.019938, 0.998396, 0.052990, 0.474458, 0.654717,\n0.415735, 0.000000, -0.277785, 0.849251, 0.000000, -0.527989, 0.527365, 0.048626, 0.848246, -0.022230, 0.999113, -0.035756, 0.441746, 0.653353,\n0.453064, -0.097545, -0.187665, 0.893339, -0.195006, -0.404867, 0.407862, -0.026395, 0.912662, 0.175367, 0.980788, -0.085453, 0.475493, 0.720518,\n0.176777, 0.461940, -0.073223, 0.338842, 0.931233, -0.134132, 0.405589, -0.015942, 0.913916, -0.849791, 0.364109, 0.381156, 0.469318, 0.259882,\n0.159095, 0.461940, -0.106304, 0.325118, 0.923819, -0.202130, 0.475092, 0.025251, 0.879574, -0.820328, 0.381848, 0.425740, 0.454457, 0.259262,\n0.256640, 0.415735, -0.106304, 0.487769, 0.849271, -0.202041, 0.403795, -0.014299, 0.914738, -0.773018, 0.527728, 0.352059, 0.470438, 0.325681,\n0.384089, -0.191342, -0.256640, 0.784657, -0.382539, -0.487829, 0.546746, 0.056122, 0.835415, 0.299008, 0.922862, -0.242733, 0.435752, 0.784594,\n0.426777, -0.191342, -0.176777, 0.864751, -0.382538, -0.325378, 0.324072, -0.069888, 0.943447, 0.386897, 0.920540, -0.054003, 0.476902, 0.786308,\n0.453064, -0.097545, -0.187665, 0.893339, -0.195006, -0.404867, 0.407862, -0.026395, 0.912662, 0.175367, 0.980788, -0.085453, 0.475493, 0.720518,\n0.256640, 0.415735, -0.106304, 0.487769, 0.849271, -0.202041, 0.403795, -0.014299, 0.914738, -0.773018, 0.527728, 0.352059, 0.470438, 0.325681,\n0.230970, 0.415735, -0.154329, 0.467879, 0.823575, -0.320645, 0.507932, 0.046326, 0.860151, -0.720709, 0.565537, 0.400932, 0.451681, 0.324898,\n0.326641, 0.353553, -0.135299, 0.631468, 0.729955, -0.261563, 0.398337, -0.015971, 0.917100, -0.663967, 0.683254, 0.303830, 0.471329, 0.391486,\n0.426777, -0.191342, -0.176777, 0.864751, -0.382538, -0.325378, 0.324072, -0.069888, 0.943447, 0.386897, 0.920540, -0.054003, 0.476902, 0.786308,\n0.384089, -0.191342, -0.256640, 0.784657, -0.382539, -0.487829, 0.546746, 0.056122, 0.835415, 0.299008, 0.922862, -0.242733, 0.435752, 0.784594,\n0.384089, -0.277785, -0.159095, 0.767470, -0.555607, -0.319829, 0.341734, -0.067542, 0.937366, 0.539164, 0.829297, -0.146864, 0.479145, 0.852075,\n0.326641, 0.353553, -0.135299, 0.631468, 0.729955, -0.261563, 0.398337, -0.015971, 0.917100, -0.663967, 0.683254, 0.303830, 0.471329, 0.391486,\n0.293969, 0.353553, -0.196424, 0.606889, 0.683554, -0.405511, 0.515943, 0.049265, 0.855205, -0.604310, 0.728259, 0.323186, 0.449475, 0.390573,\n0.384089, 0.277785, -0.159095, 0.765567, 0.567205, -0.303621, 0.385074, -0.025920, 0.922522, -0.514652, 0.823117, 0.240024, 0.472108, 0.457294,\n0.384089, -0.277785, -0.159095, 0.767470, -0.555607, -0.319829, 0.341734, -0.067542, 0.937366, 0.539164, 0.829297, -0.146864, 0.479145, 0.852075,\n0.345671, -0.277785, -0.230970, 0.690329, -0.555606, -0.463409, 0.598747, 0.079171, 0.797016, 0.401473, 0.827027, -0.393504, 0.430299, 0.850042,\n0.326641, -0.353553, -0.135299, 0.652380, -0.707137, -0.272688, 0.291421, -0.098085, 0.951553, 0.697056, 0.701070, -0.150380, 0.483764, 0.917774,\n0.384089, 0.277785, -0.159095, 0.765567, 0.567205, -0.303621, 0.385074, -0.025920, 0.922522, -0.514652, 0.823117, 0.240024, 0.472108, 0.457294,\n0.345671, 0.277785, -0.230970, 0.709871, 0.539041, -0.453341, 0.512783, 0.045711, 0.857301, -0.482277, 0.841088, 0.244909, 0.447546, 0.456269,\n0.426777, 0.191342, -0.176777, 0.854011, 0.382713, -0.352415, 0.390777, -0.024696, 0.920154, -0.341723, 0.923419, 0.174708, 0.472849, 0.523103,\n0.326641, -0.353553, -0.135299, 0.652380, -0.707137, -0.272688, 0.291421, -0.098085, 0.951553, 0.697056, 0.701070, -0.150380, 0.483764, 0.917774,\n0.293969, -0.353553, -0.196424, 0.586645, -0.707137, -0.394721, 0.638981, 0.104722, 0.762061, 0.490459, 0.698079, -0.521666, 0.419256, 0.915096,\n0.256640, -0.415735, -0.106304, 0.506185, -0.831354, -0.229408, 0.269357, -0.100298, 0.957803, 0.774420, 0.555220, -0.303324, 0.501545, 0.983100,\n0.426777, 0.191342, -0.176777, 0.854011, 0.382713, -0.352415, 0.390777, -0.024696, 0.920154, -0.341723, 0.923419, 0.174708, 0.472849, 0.523103,\n0.384089, 0.191342, -0.256640, 0.768848, 0.382715, -0.512251, 0.534081, 0.056154, 0.843567, -0.349360, 0.922386, 0.164774, 0.445715, 0.521971,\n0.453064, 0.097545, -0.187665, 0.893339, 0.195006, -0.404867, 0.415526, -0.015381, 0.909451, -0.176002, 0.980795, 0.084056, 0.473610, 0.588911,\n0.159095, -0.461940, -0.106304, 0.325118, -0.923819, -0.202130, -0.868858, -0.207424, -0.449511, 0.240638, 0.287525, -0.927050, 1.028460, 0.996322,\n0.176777, -0.461940, -0.073223, 0.358305, -0.923819, -0.134817, -0.847732, -0.261443, -0.461518, 0.263043, 0.238449, -0.934853, 0.889443, 1.002041,\n0.256640, -0.415735, -0.106304, 0.506185, -0.831354, -0.229408, -0.799750, -0.352935, -0.485631, 0.201445, 0.372619, -0.905856, 0.501545, 0.983100,\n0.415735, 0.000000, -0.277785, 0.849251, 0.000000, -0.527989, 0.527365, 0.048626, 0.848246, -0.022230, 0.999113, -0.035756, 0.441746, 0.653353,\n0.461940, 0.000000, -0.191342, 0.935939, 0.000000, -0.352163, 0.351751, -0.048347, 0.934844, 0.019938, 0.998396, 0.052990, 0.474458, 0.654717,\n0.453064, 0.097545, -0.187665, 0.893339, 0.195006, -0.404867, 0.415526, -0.015381, 0.909451, -0.176002, 0.980795, 0.084056, 0.473610, 0.588911,\n0.159095, 0.461940, -0.106304, 0.325118, 0.923819, -0.202130, 0.475092, 0.025251, 0.879574, -0.820328, 0.381848, 0.425740, 0.454457, 0.259262,\n0.176777, 0.461940, -0.073223, 0.338842, 0.931233, -0.134132, 0.405589, -0.015942, 0.913916, -0.849791, 0.364109, 0.381156, 0.469318, 0.259882,\n0.090120, 0.490393, -0.037329, 0.195833, 0.976741, -0.087334, 0.421336, -0.003387, 0.906898, -0.880226, 0.214339, 0.423392, 0.467730, 0.194097,\n0.293969, -0.353553, -0.196424, 0.586645, -0.707137, -0.394721, 0.638981, 0.104722, 0.762061, 0.490459, 0.698079, -0.521666, 0.419256, 0.915096,\n0.250000, -0.353553, -0.250000, 0.498368, -0.707136, -0.501585, 0.855249, 0.306204, 0.418077, 0.156373, 0.642382, -0.750262, 0.361877, 0.900985,\n0.230970, -0.415735, -0.154329, 0.451704, -0.831354, -0.323751, 0.744392, 0.151170, 0.650406, 0.464096, 0.528874, -0.710569, 0.380348, 0.978136,\n0.384089, 0.191342, -0.256640, 0.768848, 0.382715, -0.512251, 0.534081, 0.056154, 0.843567, -0.349360, 0.922386, 0.164774, 0.445715, 0.521971,\n0.326641, 0.191342, -0.326641, 0.654139, 0.382714, -0.652405, 0.658861, 0.135319, 0.739994, -0.368423, 0.914522, 0.167075, 0.418746, 0.515574,\n0.407747, 0.097545, -0.272448, 0.797188, 0.195005, -0.571371, 0.569117, 0.073123, 0.818999, -0.207816, 0.977197, 0.043561, 0.443836, 0.587669,\n0.135299, -0.461940, -0.135299, 0.266065, -0.929163, -0.256643, 0.883739, 0.341451, -0.320025, -0.862954, -0.110948, -0.492952, 0.139104, 0.974700,\n0.159095, -0.461940, -0.106304, 0.325118, -0.923819, -0.202130, 0.898064, 0.368580, -0.240063, -0.847064, -0.189456, -0.496578, 0.090389, 0.996322,\n0.230970, -0.415735, -0.154329, 0.451704, -0.831354, -0.323751, 0.829025, 0.525213, -0.192012, -0.819287, -0.242878, -0.519403, 0.380348, 0.978136,\n0.353553, 0.000000, -0.353553, 0.729927, 0.000000, -0.683525, 0.676669, 0.141278, 0.722606, -0.093335, 0.990633, -0.099671, 0.409461, 0.645691,\n0.415735, 0.000000, -0.277785, 0.849251, 0.000000, -0.527989, 0.527365, 0.048626, 0.848246, -0.022230, 0.999113, -0.035756, 0.441746, 0.653353,\n0.407747, 0.097545, -0.272448, 0.797188, 0.195005, -0.571371, 0.569117, 0.073123, 0.818999, -0.207816, 0.977197, 0.043561, 0.443836, 0.587669,\n0.135299, 0.461940, -0.135299, 0.282643, 0.918409, -0.276836, 0.557519, 0.077564, 0.826533, -0.781661, 0.387802, 0.488483, 0.439657, 0.255733,\n0.159095, 0.461940, -0.106304, 0.325118, 0.923819, -0.202130, 0.475092, 0.025251, 0.879574, -0.820328, 0.381848, 0.425740, 0.454457, 0.259262,\n0.081106, 0.490393, -0.054193, 0.175033, 0.976740, -0.123861, 0.476286, 0.026103, 0.878903, -0.860138, 0.212914, 0.463497, 0.458394, 0.193707,\n0.159095, -0.461940, -0.106304, 0.325118, -0.923819, -0.202130, -0.265505, 0.115975, -0.957109, -0.936279, -0.344503, 0.068552, 0.090389, 0.996322,\n0.135299, -0.461940, -0.135299, 0.266065, -0.929163, -0.256643, -0.056301, 0.250806, -0.966399, -0.959422, -0.229465, -0.163875, 0.139104, 0.974700,\n0.081106, -0.490393, -0.054193, 0.175033, -0.976741, -0.123861, -0.276227, 0.072033, -0.958389, -0.976416, -0.188355, 0.105515, 0.011310, 0.936409,\n0.415735, 0.000000, -0.277785, 0.849251, 0.000000, -0.527989, 0.527365, 0.048626, 0.848246, -0.022230, 0.999113, -0.035756, 0.441746, 0.653353,\n0.353553, 0.000000, -0.353553, 0.729927, 0.000000, -0.683525, 0.676669, 0.141278, 0.722606, -0.093335, 0.990633, -0.099671, 0.409461, 0.645691,\n0.407747, -0.097545, -0.272448, 0.797188, -0.195005, -0.571371, 0.593675, 0.081183, 0.800599, 0.091707, 0.974530, -0.204648, 0.439204, 0.719005,\n0.159095, 0.461940, -0.106304, 0.325118, 0.923819, -0.202130, 0.475092, 0.025251, 0.879574, -0.820328, 0.381848, 0.425740, 0.454457, 0.259262,\n0.135299, 0.461940, -0.135299, 0.282643, 0.918409, -0.276836, 0.557519, 0.077564, 0.826533, -0.781661, 0.387802, 0.488483, 0.439657, 0.255733,\n0.230970, 0.415735, -0.154329, 0.467879, 0.823575, -0.320645, 0.507932, 0.046326, 0.860151, -0.720709, 0.565537, 0.400932, 0.451681, 0.324898,\n0.326641, -0.191342, -0.326641, 0.658902, -0.395637, -0.639781, 0.739641, 0.185811, 0.646842, 0.138491, 0.899778, -0.413788, 0.395849, 0.775082,\n0.384089, -0.191342, -0.256640, 0.784657, -0.382539, -0.487829, 0.546746, 0.056122, 0.835415, 0.299008, 0.922862, -0.242733, 0.435752, 0.784594,\n0.407747, -0.097545, -0.272448, 0.797188, -0.195005, -0.571371, 0.593675, 0.081183, 0.800599, 0.091707, 0.974530, -0.204648, 0.439204, 0.719005,\n0.250000, 0.353553, -0.250000, 0.498876, 0.720868, -0.481115, 0.605696, 0.107056, 0.788461, -0.619306, 0.684856, 0.383969, 0.427684, 0.385399,\n0.293969, 0.353553, -0.196424, 0.606889, 0.683554, -0.405511, 0.515943, 0.049265, 0.855205, -0.604310, 0.728259, 0.323186, 0.449475, 0.390573,\n0.230970, 0.415735, -0.154329, 0.467879, 0.823575, -0.320645, 0.507932, 0.046326, 0.860151, -0.720709, 0.565537, 0.400932, 0.451681, 0.324898,\n0.384089, -0.191342, -0.256640, 0.784657, -0.382539, -0.487829, 0.546746, 0.056122, 0.835415, 0.299008, 0.922862, -0.242733, 0.435752, 0.784594,\n0.326641, -0.191342, -0.326641, 0.658902, -0.395637, -0.639781, 0.739641, 0.185811, 0.646842, 0.138491, 0.899778, -0.413788, 0.395849, 0.775082,\n0.345671, -0.277785, -0.230970, 0.690329, -0.555606, -0.463409, 0.598747, 0.079171, 0.797016, 0.401473, 0.827027, -0.393504, 0.430299, 0.850042,\n0.293969, 0.277785, -0.293969, 0.591101, 0.567205, -0.573479, 0.629924, 0.119442, 0.767417, -0.501666, 0.815265, 0.289265, 0.423084, 0.450465,\n0.345671, 0.277785, -0.230970, 0.709871, 0.539041, -0.453341, 0.512783, 0.045711, 0.857301, -0.482277, 0.841088, 0.244909, 0.447546, 0.456269,\n0.293969, 0.353553, -0.196424, 0.606889, 0.683554, -0.405511, 0.515943, 0.049265, 0.855205, -0.604310, 0.728259, 0.323186, 0.449475, 0.390573,\n0.345671, -0.277785, -0.230970, 0.690329, -0.555606, -0.463409, 0.598747, 0.079171, 0.797016, 0.401473, 0.827027, -0.393504, 0.430299, 0.850042,\n0.293969, -0.277785, -0.293969, 0.590820, -0.571807, -0.569182, 0.775901, 0.209314, 0.595118, 0.230577, 0.795724, -0.560051, 0.384002, 0.838924,\n0.293969, -0.353553, -0.196424, 0.586645, -0.707137, -0.394721, 0.638981, 0.104722, 0.762061, 0.490459, 0.698079, -0.521666, 0.419256, 0.915096,\n0.345671, 0.277785, -0.230970, 0.709871, 0.539041, -0.453341, 0.512783, 0.045711, 0.857301, -0.482277, 0.841088, 0.244909, 0.447546, 0.456269,\n0.293969, 0.277785, -0.293969, 0.591101, 0.567205, -0.573479, 0.629924, 0.119442, 0.767417, -0.501666, 0.815265, 0.289265, 0.423084, 0.450465,\n0.384089, 0.191342, -0.256640, 0.768848, 0.382715, -0.512251, 0.534081, 0.056154, 0.843567, -0.349360, 0.922386, 0.164774, 0.445715, 0.521971,\n0.230970, -0.277785, -0.345671, 0.484442, -0.555401, -0.675904, 0.874746, 0.297240, 0.382711, 0.004245, 0.774101, -0.633048, 0.342507, 0.820416,\n0.293969, -0.277785, -0.293969, 0.590820, -0.571807, -0.569182, 0.775901, 0.209314, 0.595118, 0.230577, 0.795724, -0.560051, 0.384002, 0.838924,\n0.326641, -0.191342, -0.326641, 0.658902, -0.395637, -0.639781, 0.739641, 0.185811, 0.646842, 0.138491, 0.899778, -0.413788, 0.395849, 0.775082,\n0.250000, 0.353553, -0.250000, 0.498876, 0.720868, -0.481115, 0.605696, 0.107056, 0.788461, -0.619306, 0.684856, 0.383969, 0.427684, 0.385399,\n0.196424, 0.353553, -0.293969, 0.405763, 0.697093, -0.591116, 0.707347, 0.170066, 0.686104, -0.582535, 0.695611, 0.420449, 0.406033, 0.376093,\n0.293969, 0.277785, -0.293969, 0.591101, 0.567205, -0.573479, 0.629924, 0.119442, 0.767417, -0.501666, 0.815265, 0.289265, 0.423084, 0.450465,\n0.293969, -0.277785, -0.293969, 0.590820, -0.571807, -0.569182, 0.775901, 0.209314, 0.595118, 0.230577, 0.795724, -0.560051, 0.384002, 0.838924,\n0.230970, -0.277785, -0.345671, 0.484442, -0.555401, -0.675904, 0.874746, 0.297240, 0.382711, 0.004245, 0.774101, -0.633048, 0.342507, 0.820416,\n0.250000, -0.353553, -0.250000, 0.498368, -0.707136, -0.501585, 0.855249, 0.306204, 0.418077, 0.156373, 0.642382, -0.750262, 0.361877, 0.900985,\n0.293969, 0.277785, -0.293969, 0.591101, 0.567205, -0.573479, 0.629924, 0.119442, 0.767417, -0.501666, 0.815265, 0.289265, 0.423084, 0.450465,\n0.230970, 0.277785, -0.345671, 0.482349, 0.539041, -0.690488, 0.730933, 0.186757, 0.656398, -0.485070, 0.820724, 0.301860, 0.398842, 0.440069,\n0.326641, 0.191342, -0.326641, 0.654139, 0.382714, -0.652405, 0.658861, 0.135319, 0.739994, -0.368423, 0.914522, 0.167075, 0.418746, 0.515574,\n0.250000, -0.353553, -0.250000, 0.498368, -0.707136, -0.501585, 0.855249, 0.306204, 0.418077, 0.156373, 0.642382, -0.750262, 0.361877, 0.900985,\n0.196424, -0.353553, -0.293969, 0.390937, -0.707137, -0.589174, 0.914099, 0.373161, 0.158662, -0.116262, 0.597050, -0.793734, 0.315550, 0.878976,\n0.196424, -0.415735, -0.196424, 0.379865, -0.831354, -0.405652, 0.914855, 0.402534, 0.031733, -0.006948, 0.435946, -0.899946, 0.304204, 0.956342,\n0.326641, 0.191342, -0.326641, 0.654139, 0.382714, -0.652405, 0.658861, 0.135319, 0.739994, -0.368423, 0.914522, 0.167075, 0.418746, 0.515574,\n0.256640, 0.191342, -0.384089, 0.514294, 0.382715, -0.767484, 0.761224, 0.208485, 0.614062, -0.392267, 0.900783, 0.186326, 0.392136, 0.504171,\n0.346760, 0.097545, -0.346760, 0.670403, 0.195003, -0.715915, 0.698880, 0.158166, 0.697532, -0.255799, 0.966439, 0.023704, 0.414327, 0.580670,\n0.106304, -0.461940, -0.159095, 0.230404, -0.916136, -0.328037, 0.789524, 0.373055, -0.487321, -0.638563, 0.112026, -0.761372, 0.149638, 0.949935,\n0.135299, -0.461940, -0.135299, 0.266065, -0.929163, -0.256643, 0.883739, 0.341451, -0.320025, -0.862954, -0.110948, -0.492952, 0.139104, 0.974700,\n0.196424, -0.415735, -0.196424, 0.379865, -0.831354, -0.405652, 0.758353, 0.530992, -0.378085, -0.834806, -0.119178, -0.537491, 0.304204, 0.956342,\n0.277785, 0.000000, -0.415735, 0.582558, 0.000000, -0.812789, 0.791754, 0.226032, 0.567481, -0.181594, 0.974722, -0.130156, 0.378101, 0.632212,\n0.353553, 0.000000, -0.353553, 0.729927, 0.000000, -0.683525, 0.676669, 0.141278, 0.722606, -0.093335, 0.990633, -0.099671, 0.409461, 0.645691,\n0.346760, 0.097545, -0.346760, 0.670403, 0.195003, -0.715915, 0.698880, 0.158166, 0.697532, -0.255799, 0.966439, 0.023704, 0.414327, 0.580670,\n0.106304, 0.461940, -0.159095, 0.210110, 0.923888, -0.319821, 0.624158, 0.125030, 0.771229, -0.748221, 0.362510, 0.555655, 0.425005, 0.249351,\n0.135299, 0.461940, -0.135299, 0.282643, 0.918409, -0.276836, 0.557519, 0.077564, 0.826533, -0.781661, 0.387802, 0.488483, 0.439657, 0.255733,\n0.068975, 0.490393, -0.068975, 0.147506, 0.976741, -0.155628, 0.528648, 0.055128, 0.847049, -0.838346, 0.206961, 0.504325, 0.449147, 0.191490,\n0.054193, -0.490393, -0.081106, 0.126198, -0.973859, -0.188870, 0.072963, 0.198989, -0.977282, -0.975189, -0.086882, -0.203613, 0.045633, 0.923222,\n0.068975, -0.490393, -0.068975, 0.137937, -0.980789, -0.137937, -0.202289, 0.108434, -0.973304, -0.984450, -0.151062, 0.089663, 0.030632, 0.931469,\n0.135299, -0.461940, -0.135299, 0.266065, -0.929163, -0.256643, -0.056301, 0.250806, -0.966399, -0.959422, -0.229465, -0.163875, 0.139104, 0.974700,\n0.353553, 0.000000, -0.353553, 0.729927, 0.000000, -0.683525, 0.676669, 0.141278, 0.722606, -0.093335, 0.990633, -0.099671, 0.409461, 0.645691,\n0.277785, 0.000000, -0.415735, 0.582558, 0.000000, -0.812789, 0.791754, 0.226032, 0.567481, -0.181594, 0.974722, -0.130156, 0.378101, 0.632212,\n0.346760, -0.097545, -0.346760, 0.670403, -0.195003, -0.715915, 0.741983, 0.182238, 0.645175, -0.023312, 0.958836, -0.283001, 0.403621, 0.710549,\n0.154329, 0.415735, -0.230970, 0.306409, 0.831489, -0.463399, 0.673121, 0.154953, 0.723117, -0.670248, 0.534137, 0.515233, 0.414383, 0.312422,\n0.196424, 0.415735, -0.196424, 0.395423, 0.820324, -0.413170, 0.605387, 0.105528, 0.788904, -0.691963, 0.561867, 0.453313, 0.432975, 0.320449,\n0.135299, 0.461940, -0.135299, 0.282643, 0.918409, -0.276836, 0.557519, 0.077564, 0.826533, -0.781661, 0.387802, 0.488483, 0.439657, 0.255733,\n0.256640, -0.191342, -0.384089, 0.514294, -0.382715, -0.767484, 0.855989, 0.284135, 0.431914, -0.074345, 0.871641, -0.484473, 0.358489, 0.758785,\n0.326641, -0.191342, -0.326641, 0.658902, -0.395637, -0.639781, 0.739641, 0.185811, 0.646842, 0.138491, 0.899778, -0.413788, 0.395849, 0.775082,\n0.346760, -0.097545, -0.346760, 0.670403, -0.195003, -0.715915, 0.741983, 0.182238, 0.645175, -0.023312, 0.958836, -0.283001, 0.403621, 0.710549,\n0.196424, 0.353553, -0.293969, 0.405763, 0.697093, -0.591116, 0.707347, 0.170066, 0.686104, -0.582535, 0.695611, 0.420449, 0.406033, 0.376093,\n0.250000, 0.353553, -0.250000, 0.498876, 0.720868, -0.481115, 0.605696, 0.107056, 0.788461, -0.619306, 0.684856, 0.383969, 0.427684, 0.385399,\n0.196424, 0.415735, -0.196424, 0.395423, 0.820324, -0.413170, 0.605387, 0.105528, 0.788904, -0.691963, 0.561867, 0.453313, 0.432975, 0.320449,\n0.106304, -0.461940, -0.159095, 0.230404, -0.916136, -0.328037, 0.158051, 0.367863, -0.916350, -0.889781, -0.061867, -0.452176, 0.149638, 0.949935,\n0.073223, -0.461940, -0.176777, 0.158028, -0.923819, -0.348692, 0.351012, 0.382620, -0.854630, -0.944682, -0.038662, -0.325701, 0.148297, 0.924790,\n0.054193, -0.490393, -0.081106, 0.126198, -0.973859, -0.188870, 0.072963, 0.198989, -0.977282, -0.975189, -0.086882, -0.203613, 0.045633, 0.923222,\n0.277785, 0.000000, -0.415735, 0.582558, 0.000000, -0.812789, 0.791754, 0.226032, 0.567481, -0.181594, 0.974722, -0.130156, 0.378101, 0.632212,\n0.191342, 0.000000, -0.461940, 0.412789, 0.000000, -0.910827, 0.867606, 0.304390, 0.393201, -0.271702, 0.954471, -0.123136, 0.347954, 0.613692,\n0.272448, -0.097545, -0.407747, 0.517853, -0.195006, -0.832947, 0.844844, 0.269565, 0.462140, -0.150175, 0.937830, -0.312926, 0.369532, 0.695826,\n0.106304, 0.415735, -0.256640, 0.202041, 0.849271, -0.487769, 0.729025, 0.202156, 0.653954, -0.641871, 0.490990, 0.589008, 0.395951, 0.300965,\n0.154329, 0.415735, -0.230970, 0.306409, 0.831489, -0.463399, 0.673121, 0.154953, 0.723117, -0.670248, 0.534137, 0.515233, 0.414383, 0.312422,\n0.106304, 0.461940, -0.159095, 0.210110, 0.923888, -0.319821, 0.624158, 0.125030, 0.771229, -0.748221, 0.362510, 0.555655, 0.425005, 0.249351,\n0.176777, -0.191342, -0.426777, 0.354681, -0.382715, -0.853071, 0.910663, 0.348166, 0.222427, -0.228651, 0.849181, -0.476036, 0.324176, 0.737162,\n0.256640, -0.191342, -0.384089, 0.514294, -0.382715, -0.767484, 0.855989, 0.284135, 0.431914, -0.074345, 0.871641, -0.484473, 0.358489, 0.758785,\n0.272448, -0.097545, -0.407747, 0.517853, -0.195006, -0.832947, 0.844844, 0.269565, 0.462140, -0.150175, 0.937830, -0.312926, 0.369532, 0.695826,\n0.135299, 0.353553, -0.326641, 0.256646, 0.716972, -0.648139, 0.784086, 0.237640, 0.573355, -0.558550, 0.657303, 0.505939, 0.384563, 0.362880,\n0.196424, 0.353553, -0.293969, 0.405763, 0.697093, -0.591116, 0.707347, 0.170066, 0.686104, -0.582535, 0.695611, 0.420449, 0.406033, 0.376093,\n0.154329, 0.415735, -0.230970, 0.306409, 0.831489, -0.463399, 0.673121, 0.154953, 0.723117, -0.670248, 0.534137, 0.515233, 0.414383, 0.312422,\n0.159095, -0.277785, -0.384089, 0.343269, -0.555401, -0.757427, 0.918601, 0.366641, 0.147466, -0.207285, 0.741746, -0.637845, 0.306159, 0.796676,\n0.230970, -0.277785, -0.345671, 0.484442, -0.555401, -0.675904, 0.874746, 0.297240, 0.382711, 0.004245, 0.774101, -0.633048, 0.342507, 0.820416,\n0.256640, -0.191342, -0.384089, 0.514294, -0.382715, -0.767484, 0.855989, 0.284135, 0.431914, -0.074345, 0.871641, -0.484473, 0.358489, 0.758785,\n0.159095, 0.277785, -0.384089, 0.343269, 0.555401, -0.757427, 0.801936, 0.246493, 0.544188, -0.489566, 0.794019, 0.360359, 0.374888, 0.425400,\n0.230970, 0.277785, -0.345671, 0.482349, 0.539041, -0.690488, 0.730933, 0.186757, 0.656398, -0.485070, 0.820724, 0.301860, 0.398842, 0.440069,\n0.196424, 0.353553, -0.293969, 0.405763, 0.697093, -0.591116, 0.707347, 0.170066, 0.686104, -0.582535, 0.695611, 0.420449, 0.406033, 0.376093,\n0.230970, -0.277785, -0.345671, 0.484442, -0.555401, -0.675904, 0.874746, 0.297240, 0.382711, 0.004245, 0.774101, -0.633048, 0.342507, 0.820416,\n0.159095, -0.277785, -0.384089, 0.343269, -0.555401, -0.757427, 0.918601, 0.366641, 0.147466, -0.207285, 0.741746, -0.637845, 0.306159, 0.796676,\n0.196424, -0.353553, -0.293969, 0.390937, -0.707137, -0.589174, 0.914099, 0.373161, 0.158662, -0.116262, 0.597050, -0.793734, 0.315550, 0.878976,\n0.230970, 0.277785, -0.345671, 0.482349, 0.539041, -0.690488, 0.730933, 0.186757, 0.656398, -0.485070, 0.820724, 0.301860, 0.398842, 0.440069,\n0.159095, 0.277785, -0.384089, 0.343269, 0.555401, -0.757427, 0.801936, 0.246493, 0.544188, -0.489566, 0.794019, 0.360359, 0.374888, 0.425400,\n0.256640, 0.191342, -0.384089, 0.514294, 0.382715, -0.767484, 0.761224, 0.208485, 0.614062, -0.392267, 0.900783, 0.186326, 0.392136, 0.504171,\n0.196424, -0.353553, -0.293969, 0.390937, -0.707137, -0.589174, 0.914099, 0.373161, 0.158662, -0.116262, 0.597050, -0.793734, 0.315550, 0.878976,\n0.135299, -0.353553, -0.326641, 0.268482, -0.707136, -0.654122, 0.902614, 0.421859, -0.085576, -0.339988, 0.565790, -0.751192, 0.278480, 0.852494,\n0.154329, -0.415735, -0.230970, 0.293425, -0.831354, -0.471967, 0.871401, 0.435627, -0.225587, -0.290327, 0.392886, -0.872554, 0.260582, 0.928725,\n0.256640, 0.191342, -0.384089, 0.514294, 0.382715, -0.767484, 0.761224, 0.208485, 0.614062, -0.392267, 0.900783, 0.186326, 0.392136, 0.504171,\n0.176777, 0.191342, -0.426777, 0.354681, 0.382715, -0.853071, 0.838031, 0.274468, 0.471563, -0.412065, 0.882985, 0.224812, 0.366006, 0.488197,\n0.272448, 0.097545, -0.407747, 0.517853, 0.195006, -0.832947, 0.799611, 0.235733, 0.552316, -0.309649, 0.950378, 0.029986, 0.385399, 0.568265,\n0.073223, -0.461940, -0.176777, 0.158028, -0.923819, -0.348692, 0.351012, 0.382620, -0.854630, -0.944682, -0.038662, -0.325701, 0.148297, 0.924790,\n0.106304, -0.461940, -0.159095, 0.230404, -0.916136, -0.328037, 0.789524, 0.373055, -0.487321, -0.638563, 0.112026, -0.761372, 0.149638, 0.949935,\n0.154329, -0.415735, -0.230970, 0.293425, -0.831354, -0.471967, 0.692967, 0.525067, -0.494066, -0.859099, -0.012749, -0.511650, 0.260582, 0.928725,\n0.191342, 0.000000, -0.461940, 0.412789, 0.000000, -0.910827, 0.867606, 0.304390, 0.393201, -0.271702, 0.954471, -0.123136, 0.347954, 0.613692,\n0.277785, 0.000000, -0.415735, 0.582558, 0.000000, -0.812789, 0.791754, 0.226032, 0.567481, -0.181594, 0.974722, -0.130156, 0.378101, 0.632212,\n0.272448, 0.097545, -0.407747, 0.517853, 0.195006, -0.832947, 0.799611, 0.235733, 0.552316, -0.309649, 0.950378, 0.029986, 0.385399, 0.568265,\n0.073223, 0.461940, -0.176777, 0.144749, 0.931233, -0.334444, 0.674962, 0.154225, 0.721554, -0.715354, 0.332011, 0.614848, 0.410583, 0.240213,\n0.106304, 0.461940, -0.159095, 0.210110, 0.923888, -0.319821, 0.624158, 0.125030, 0.771229, -0.748221, 0.362510, 0.555655, 0.425005, 0.249351,\n0.054193, 0.490393, -0.081106, 0.114308, 0.976741, -0.181415, 0.577264, 0.083314, 0.812296, -0.813643, 0.196824, 0.547033, 0.440119, 0.187485,\n0.135299, -0.353553, -0.326641, 0.268482, -0.707136, -0.654122, 0.902614, 0.421859, -0.085576, -0.339988, 0.565790, -0.751192, 0.278480, 0.852494,\n0.068975, -0.353553, -0.346760, 0.135711, -0.707136, -0.693932, 0.834724, 0.458897, -0.304383, -0.532345, 0.538668, -0.653028, 0.247735, 0.823865,\n0.106304, -0.415735, -0.256640, 0.195712, -0.831354, -0.520142, 0.781917, 0.452404, -0.428878, -0.565160, 0.337843, -0.752633, 0.230558, 0.899550,\n0.176777, 0.191342, -0.426777, 0.354681, 0.382715, -0.853071, 0.838031, 0.274468, 0.471563, -0.412065, 0.882985, 0.224812, 0.366006, 0.488197,\n0.090120, 0.191342, -0.453064, 0.181442, 0.382715, -0.905874, 0.888381, 0.331252, 0.317886, -0.417947, 0.863841, 0.281245, 0.340374, 0.468222,\n0.187665, 0.097545, -0.453064, 0.345398, 0.195004, -0.917972, 0.868991, 0.302874, 0.391308, -0.358378, 0.931447, 0.063022, 0.357242, 0.551036,\n0.037329, -0.461940, -0.187665, 0.086967, -0.923819, -0.372820, 0.499455, 0.364240, -0.786049, -0.840689, 0.132730, -0.525000, 0.142004, 0.900074,\n0.073223, -0.461940, -0.176777, 0.158028, -0.923819, -0.348692, 0.351012, 0.382620, -0.854630, -0.944682, -0.038662, -0.325701, 0.148297, 0.924790,\n0.106304, -0.415735, -0.256640, 0.195712, -0.831354, -0.520142, 0.781917, 0.452404, -0.428878, -0.565160, 0.337843, -0.752633, 0.230558, 0.899550,\n0.097545, 0.000000, -0.490392, 0.227166, -0.000000, -0.973856, 0.909769, 0.356771, 0.212217, -0.347462, 0.934185, -0.081051, 0.319079, 0.591068,\n0.191342, 0.000000, -0.461940, 0.412789, 0.000000, -0.910827, 0.867606, 0.304390, 0.393201, -0.271702, 0.954471, -0.123136, 0.347954, 0.613692,\n0.187665, 0.097545, -0.453064, 0.345398, 0.195004, -0.917972, 0.868991, 0.302874, 0.391308, -0.358378, 0.931447, 0.063022, 0.357242, 0.551036,\n0.037329, 0.461940, -0.187665, 0.081206, 0.918409, -0.387209, 0.738308, 0.205550, 0.642379, -0.674035, 0.336788, 0.657457, 0.396472, 0.228455,\n0.073223, 0.461940, -0.176777, 0.144749, 0.931233, -0.334444, 0.674962, 0.154225, 0.721554, -0.715354, 0.332011, 0.614848, 0.410583, 0.240213,\n0.037329, 0.490393, -0.090120, 0.076720, 0.976740, -0.200230, 0.621152, 0.110266, 0.775894, -0.785459, 0.182905, 0.591270, 0.431446, 0.181761,\n0.073223, -0.461940, -0.176777, 0.158028, -0.923819, -0.348692, 0.351012, 0.382620, -0.854630, -0.944682, -0.038662, -0.325701, 0.148297, 0.924790,\n0.037329, -0.461940, -0.187665, 0.086967, -0.923819, -0.372820, 0.499455, 0.364240, -0.786049, -0.840689, 0.132730, -0.525000, 0.142004, 0.900074,\n0.037329, -0.490393, -0.090120, 0.076720, -0.976740, -0.200230, 0.046042, 0.204078, -0.977871, -0.996783, -0.079808, 0.007381, 0.055761, 0.912636,\n0.191342, 0.000000, -0.461940, 0.412789, 0.000000, -0.910827, 0.867606, 0.304390, 0.393201, -0.271702, 0.954471, -0.123136, 0.347954, 0.613692,\n0.097545, 0.000000, -0.490392, 0.227166, -0.000000, -0.973856, 0.909769, 0.356771, 0.212217, -0.347462, 0.934185, -0.081051, 0.319079, 0.591068,\n0.187665, -0.097545, -0.453064, 0.345398, -0.195004, -0.917972, 0.901940, 0.339189, 0.267312, -0.270622, 0.915923, -0.296394, 0.337345, 0.675882,\n0.073223, 0.461940, -0.176777, 0.144749, 0.931233, -0.334444, 0.674962, 0.154225, 0.721554, -0.715354, 0.332011, 0.614848, 0.410583, 0.240213,\n0.037329, 0.461940, -0.187665, 0.081206, 0.918409, -0.387209, 0.738308, 0.205550, 0.642379, -0.674035, 0.336788, 0.657457, 0.396472, 0.228455,\n0.106304, 0.415735, -0.256640, 0.202041, 0.849271, -0.487769, 0.729025, 0.202156, 0.653954, -0.641871, 0.490990, 0.589008, 0.395951, 0.300965,\n0.090120, -0.191342, -0.453064, 0.181442, -0.382715, -0.905874, 0.917940, 0.396380, 0.016395, -0.366507, 0.828481, -0.423428, 0.292765, 0.711739,\n0.176777, -0.191342, -0.426777, 0.354681, -0.382715, -0.853071, 0.910663, 0.348166, 0.222427, -0.228651, 0.849181, -0.476036, 0.324176, 0.737162,\n0.187665, -0.097545, -0.453064, 0.345398, -0.195004, -0.917972, 0.901940, 0.339189, 0.267312, -0.270622, 0.915923, -0.296394, 0.337345, 0.675882,\n0.106304, 0.415735, -0.256640, 0.202041, 0.849271, -0.487769, 0.729025, 0.202156, 0.653954, -0.641871, 0.490990, 0.589008, 0.395951, 0.300965,\n0.054193, 0.415735, -0.272448, 0.113643, 0.812813, -0.571333, 0.814593, 0.252991, 0.521951, -0.588700, 0.518324, 0.620301, 0.377698, 0.286284,\n0.135299, 0.353553, -0.326641, 0.256646, 0.716972, -0.648139, 0.784086, 0.237640, 0.573355, -0.558550, 0.657303, 0.505939, 0.384563, 0.362880,\n0.081106, -0.277785, -0.407746, 0.188908, -0.555401, -0.809842, 0.909904, 0.409148, -0.068350, -0.381060, 0.718607, -0.581719, 0.274182, 0.769656,\n0.159095, -0.277785, -0.384089, 0.343269, -0.555401, -0.757427, 0.918601, 0.366641, 0.147466, -0.207285, 0.741746, -0.637845, 0.306159, 0.796676,\n0.176777, -0.191342, -0.426777, 0.354681, -0.382715, -0.853071, 0.910663, 0.348166, 0.222427, -0.228651, 0.849181, -0.476036, 0.324176, 0.737162,\n0.081106, 0.277785, -0.407746, 0.188908, 0.555401, -0.809842, 0.860507, 0.303704, 0.409012, -0.473585, 0.773975, 0.420332, 0.351222, 0.406884,\n0.159095, 0.277785, -0.384089, 0.343269, 0.555401, -0.757427, 0.801936, 0.246493, 0.544188, -0.489566, 0.794019, 0.360359, 0.374888, 0.425400,\n0.135299, 0.353553, -0.326641, 0.256646, 0.716972, -0.648139, 0.784086, 0.237640, 0.573355, -0.558550, 0.657303, 0.505939, 0.384563, 0.362880,\n0.159095, -0.277785, -0.384089, 0.343269, -0.555401, -0.757427, 0.918601, 0.366641, 0.147466, -0.207285, 0.741746, -0.637845, 0.306159, 0.796676,\n0.081106, -0.277785, -0.407746, 0.188908, -0.555401, -0.809842, 0.909904, 0.409148, -0.068350, -0.381060, 0.718607, -0.581719, 0.274182, 0.769656,\n0.135299, -0.353553, -0.326641, 0.268482, -0.707136, -0.654122, 0.902614, 0.421859, -0.085576, -0.339988, 0.565790, -0.751192, 0.278480, 0.852494,\n0.159095, 0.277785, -0.384089, 0.343269, 0.555401, -0.757427, 0.801936, 0.246493, 0.544188, -0.489566, 0.794019, 0.360359, 0.374888, 0.425400,\n0.081106, 0.277785, -0.407746, 0.188908, 0.555401, -0.809842, 0.860507, 0.303704, 0.409012, -0.473585, 0.773975, 0.420332, 0.351222, 0.406884,\n0.176777, 0.191342, -0.426777, 0.354681, 0.382715, -0.853071, 0.838031, 0.274468, 0.471563, -0.412065, 0.882985, 0.224812, 0.366006, 0.488197,\n0.000000, -0.277785, -0.415735, 0.027286, -0.555402, -0.831134, 0.864465, 0.430611, -0.259374, -0.512060, 0.706308, -0.488798, 0.245498, 0.740897,\n0.081106, -0.277785, -0.407746, 0.188908, -0.555401, -0.809842, 0.909904, 0.409148, -0.068350, -0.381060, 0.718607, -0.581719, 0.274182, 0.769656,\n0.090120, -0.191342, -0.453064, 0.181442, -0.382715, -0.905874, 0.917940, 0.396380, 0.016395, -0.366507, 0.828481, -0.423428, 0.292765, 0.711739,\n0.000000, 0.277785, -0.415735, 0.027286, 0.555402, -0.831134, 0.897111, 0.353167, 0.265454, -0.441123, 0.752799, 0.488573, 0.327761, 0.385025,\n0.081106, 0.277785, -0.407746, 0.188908, 0.555401, -0.809842, 0.860507, 0.303704, 0.409012, -0.473585, 0.773975, 0.420332, 0.351222, 0.406884,\n0.068975, 0.353553, -0.346760, 0.125620, 0.692993, -0.709916, 0.852105, 0.291102, 0.434944, -0.517805, 0.656181, 0.548912, 0.363272, 0.346065,\n0.081106, -0.277785, -0.407746, 0.188908, -0.555401, -0.809842, 0.909904, 0.409148, -0.068350, -0.381060, 0.718607, -0.581719, 0.274182, 0.769656,\n0.000000, -0.277785, -0.415735, 0.027286, -0.555402, -0.831134, 0.864465, 0.430611, -0.259374, -0.512060, 0.706308, -0.488798, 0.245498, 0.740897,\n0.068975, -0.353553, -0.346760, 0.135711, -0.707136, -0.693932, 0.834724, 0.458897, -0.304383, -0.532345, 0.538668, -0.653028, 0.247735, 0.823865,\n0.081106, 0.277785, -0.407746, 0.188908, 0.555401, -0.809842, 0.860507, 0.303704, 0.409012, -0.473585, 0.773975, 0.420332, 0.351222, 0.406884,\n0.000000, 0.277785, -0.415735, 0.027286, 0.555402, -0.831134, 0.897111, 0.353167, 0.265454, -0.441123, 0.752799, 0.488573, 0.327761, 0.385025,\n0.090120, 0.191342, -0.453064, 0.181442, 0.382715, -0.905874, 0.888381, 0.331252, 0.317886, -0.417947, 0.863841, 0.281245, 0.340374, 0.468222,\n0.068975, -0.353553, -0.346760, 0.135711, -0.707136, -0.693932, 0.834724, 0.458897, -0.304383, -0.532345, 0.538668, -0.653028, 0.247735, 0.823865,\n0.000000, -0.353553, -0.353553, -0.002278, -0.707136, -0.707073, 0.777385, 0.443514, -0.446058, -0.629127, 0.550624, -0.548646, 0.221035, 0.794554,\n0.054193, -0.415735, -0.272448, 0.090476, -0.831354, -0.548329, 0.704662, 0.442513, -0.554647, -0.688308, 0.345720, -0.637738, 0.206623, 0.870322,\n0.090120, 0.191342, -0.453064, 0.181442, 0.382715, -0.905874, 0.888381, 0.331252, 0.317886, -0.417947, 0.863841, 0.281245, 0.340374, 0.468222,\n0.000000, 0.191342, -0.461940, 0.001225, 0.382712, -0.923867, 0.912486, 0.377533, 0.157603, -0.408033, 0.843652, 0.348942, 0.315152, 0.444897,\n0.095671, 0.097545, -0.480970, 0.159676, 0.195003, -0.967718, 0.907052, 0.357868, 0.221779, -0.392058, 0.912195, 0.119124, 0.329902, 0.529720,\n0.000000, -0.461940, -0.191342, 0.012560, -0.923819, -0.382623, 0.405169, 0.354534, -0.842700, -0.919889, 0.139328, -0.366594, 0.133142, 0.876209,\n0.037329, -0.461940, -0.187665, 0.086967, -0.923819, -0.372820, 0.499455, 0.364240, -0.786049, -0.840689, 0.132730, -0.525000, 0.142004, 0.900074,\n0.054193, -0.415735, -0.272448, 0.090476, -0.831354, -0.548329, 0.704662, 0.442513, -0.554647, -0.688308, 0.345720, -0.637738, 0.206623, 0.870322,\n0.000000, 0.000000, -0.500000, 0.032810, 0.000000, -0.999462, 0.915905, 0.400267, 0.030067, -0.400494, 0.916205, -0.013147, 0.291335, 0.565336,\n0.097545, 0.000000, -0.490392, 0.227166, -0.000000, -0.973856, 0.909769, 0.356771, 0.212217, -0.347462, 0.934185, -0.081051, 0.319079, 0.591068,\n0.095671, 0.097545, -0.480970, 0.159676, 0.195003, -0.967718, 0.907052, 0.357868, 0.221779, -0.392058, 0.912195, 0.119124, 0.329902, 0.529720,\n0.000000, 0.461940, -0.191342, 0.005745, 0.931233, -0.364380, 0.758912, 0.233220, 0.607998, -0.641928, 0.282829, 0.712696, 0.382751, 0.214243,\n0.037329, 0.461940, -0.187665, 0.081206, 0.918409, -0.387209, 0.738308, 0.205550, 0.642379, -0.674035, 0.336788, 0.657457, 0.396472, 0.228455,\n0.019030, 0.490393, -0.095671, 0.036183, 0.976740, -0.211349, 0.659716, 0.135510, 0.739197, -0.754201, 0.165442, 0.635461, 0.423278, 0.174421,\n0.037329, -0.461940, -0.187665, 0.086967, -0.923819, -0.372820, 0.499455, 0.364240, -0.786049, -0.840689, 0.132730, -0.525000, 0.142004, 0.900074,\n0.000000, -0.461940, -0.191342, 0.012560, -0.923819, -0.382623, 0.405169, 0.354534, -0.842700, -0.919889, 0.139328, -0.366594, 0.133142, 0.876209,\n0.019030, -0.490393, -0.095671, 0.036183, -0.976740, -0.211349, 0.052590, 0.213056, -0.975624, -0.999332, -0.036443, -0.002670, 0.061468, 0.900623,\n0.097545, 0.000000, -0.490392, 0.227166, -0.000000, -0.973856, 0.909769, 0.356771, 0.212217, -0.347462, 0.934185, -0.081051, 0.319079, 0.591068,\n0.000000, 0.000000, -0.500000, 0.032810, 0.000000, -0.999462, 0.915905, 0.400267, 0.030067, -0.400494, 0.916205, -0.013147, 0.291335, 0.565336,\n0.095671, -0.097545, -0.480970, 0.159676, -0.195003, -0.967718, 0.917851, 0.390187, 0.072822, -0.370733, 0.896694, -0.241863, 0.307086, 0.651912,\n0.000000, 0.415735, -0.277785, -0.008963, 0.839191, -0.543763, 0.843305, 0.298564, 0.446874, -0.530292, 0.457033, 0.714081, 0.359606, 0.268628,\n0.054193, 0.415735, -0.272448, 0.113643, 0.812813, -0.571333, 0.814593, 0.252991, 0.521951, -0.588700, 0.518324, 0.620301, 0.377698, 0.286284,\n0.037329, 0.461940, -0.187665, 0.081206, 0.918409, -0.387209, 0.738308, 0.205550, 0.642379, -0.674035, 0.336788, 0.657457, 0.396472, 0.228455,\n0.000000, -0.191342, -0.461940, 0.001225, -0.382712, -0.923867, 0.884445, 0.431532, -0.177590, -0.477862, 0.811333, -0.336729, 0.263760, 0.683901,\n0.090120, -0.191342, -0.453064, 0.181442, -0.382715, -0.905874, 0.917940, 0.396380, 0.016395, -0.366507, 0.828481, -0.423428, 0.292765, 0.711739,\n0.095671, -0.097545, -0.480970, 0.159676, -0.195003, -0.967718, 0.917851, 0.390187, 0.072822, -0.370733, 0.896694, -0.241863, 0.307086, 0.651912,\n0.000000, 0.353553, -0.353553, -0.002278, 0.707136, -0.707074, 0.885216, 0.330340, 0.327517, -0.463666, 0.625729, 0.627278, 0.342092, 0.326013,\n0.068975, 0.353553, -0.346760, 0.125620, 0.692993, -0.709916, 0.852105, 0.291102, 0.434944, -0.517805, 0.656181, 0.548912, 0.363272, 0.346065,\n0.054193, 0.415735, -0.272448, 0.113643, 0.812813, -0.571333, 0.814593, 0.252991, 0.521951, -0.588700, 0.518324, 0.620301, 0.377698, 0.286284,\n-0.037329, 0.461940, -0.187665, -0.073153, 0.918409, -0.388811, 0.820704, 0.276940, 0.499749, -0.577847, 0.278718, 0.767079, 0.369501, 0.197772,\n0.000000, 0.461940, -0.191342, 0.005745, 0.931233, -0.364380, 0.758912, 0.233220, 0.607998, -0.641928, 0.282829, 0.712696, 0.382751, 0.214243,\n0.000000, 0.490393, -0.097545, -0.005744, 0.976741, -0.214348, 0.692756, 0.158469, 0.703546, -0.721155, 0.144448, 0.677547, 0.415789, 0.165599,\n0.000000, -0.461940, -0.191342, 0.012560, -0.923819, -0.382623, 0.405169, 0.354534, -0.842700, -0.919889, 0.139328, -0.366594, 0.133142, 0.876209,\n-0.037329, -0.461940, -0.187665, -0.062326, -0.923818, -0.377723, 0.293765, 0.344714, -0.891557, -0.966939, 0.149657, -0.206475, 0.122716, 0.853506,\n0.000000, -0.490393, -0.097545, -0.005744, -0.976741, -0.214348, 0.034559, 0.214029, -0.976216, -0.999964, 0.006941, -0.004830, 0.063552, 0.887927,\n0.000000, 0.000000, -0.500000, 0.032810, 0.000000, -0.999462, 0.915905, 0.400267, 0.030067, -0.400494, 0.916205, -0.013147, 0.291335, 0.565336,\n-0.097545, 0.000000, -0.490392, -0.162803, 0.000000, -0.986659, 0.889654, 0.432396, -0.146796, -0.424493, 0.902718, 0.070043, 0.264451, 0.537476,\n0.000000, -0.097545, -0.490392, -0.032184, -0.195004, -0.980274, 0.898724, 0.423503, -0.113753, -0.441786, 0.882545, -0.161058, 0.278511, 0.625101,\n0.000000, 0.461940, -0.191342, 0.005745, 0.931233, -0.364380, 0.758912, 0.233220, 0.607998, -0.641928, 0.282829, 0.712696, 0.382751, 0.214243,\n-0.037329, 0.461940, -0.187665, -0.073153, 0.918409, -0.388811, 0.820704, 0.276940, 0.499749, -0.577847, 0.278718, 0.767079, 0.369501, 0.197772,\n0.000000, 0.415735, -0.277785, -0.008963, 0.839191, -0.543763, 0.843305, 0.298564, 0.446874, -0.530292, 0.457033, 0.714081, 0.359606, 0.268628,\n-0.090120, -0.191342, -0.453064, -0.179030, -0.382715, -0.906354, 0.828764, 0.437784, -0.348562, -0.538512, 0.809104, -0.235279, 0.236558, 0.654833,\n0.000000, -0.191342, -0.461940, 0.001225, -0.382712, -0.923867, 0.884445, 0.431532, -0.177590, -0.477862, 0.811333, -0.336729, 0.263760, 0.683901,\n0.000000, -0.097545, -0.490392, -0.032184, -0.195004, -0.980274, 0.898724, 0.423503, -0.113753, -0.441786, 0.882545, -0.161058, 0.278511, 0.625101,\n-0.068975, 0.353553, -0.346760, -0.140171, 0.707135, -0.693046, 0.904749, 0.375819, 0.200471, -0.400546, 0.599626, 0.692828, 0.320886, 0.303136,\n0.000000, 0.353553, -0.353553, -0.002278, 0.707136, -0.707074, 0.885216, 0.330340, 0.327517, -0.463666, 0.625729, 0.627278, 0.342092, 0.326013,\n0.000000, 0.415735, -0.277785, -0.008963, 0.839191, -0.543763, 0.843305, 0.298564, 0.446874, -0.530292, 0.457033, 0.714081, 0.359606, 0.268628,\n-0.081106, -0.277785, -0.407746, -0.135384, -0.555402, -0.820488, 0.793047, 0.435663, -0.425763, -0.601789, 0.703956, -0.377222, 0.219119, 0.711578,\n0.000000, -0.277785, -0.415735, 0.027286, -0.555402, -0.831134, 0.864465, 0.430611, -0.259374, -0.512060, 0.706308, -0.488798, 0.245498, 0.740897,\n0.000000, -0.191342, -0.461940, 0.001225, -0.382712, -0.923867, 0.884445, 0.431532, -0.177590, -0.477862, 0.811333, -0.336729, 0.263760, 0.683901,\n-0.081106, 0.277785, -0.407746, -0.135383, 0.555402, -0.820488, 0.911657, 0.394132, 0.116368, -0.387847, 0.732320, 0.559716, 0.304332, 0.360378,\n0.000000, 0.277785, -0.415735, 0.027286, 0.555402, -0.831134, 0.897111, 0.353167, 0.265454, -0.441123, 0.752799, 0.488573, 0.327761, 0.385025,\n0.000000, 0.353553, -0.353553, -0.002278, 0.707136, -0.707074, 0.885216, 0.330340, 0.327517, -0.463666, 0.625729, 0.627278, 0.342092, 0.326013,\n0.000000, -0.277785, -0.415735, 0.027286, -0.555402, -0.831134, 0.864465, 0.430611, -0.259374, -0.512060, 0.706308, -0.488798, 0.245498, 0.740897,\n-0.081106, -0.277785, -0.407746, -0.135384, -0.555402, -0.820488, 0.793047, 0.435663, -0.425763, -0.601789, 0.703956, -0.377222, 0.219119, 0.711578,\n0.000000, -0.353553, -0.353553, -0.002278, -0.707136, -0.707073, 0.777385, 0.443514, -0.446058, -0.629127, 0.550624, -0.548646, 0.221035, 0.794554,\n0.000000, 0.277785, -0.415735, 0.027286, 0.555402, -0.831134, 0.897111, 0.353167, 0.265454, -0.441123, 0.752799, 0.488573, 0.327761, 0.385025,\n-0.081106, 0.277785, -0.407746, -0.135383, 0.555402, -0.820488, 0.911657, 0.394132, 0.116368, -0.387847, 0.732320, 0.559716, 0.304332, 0.360378,\n0.000000, 0.191342, -0.461940, 0.001225, 0.382712, -0.923867, 0.912486, 0.377533, 0.157603, -0.408033, 0.843652, 0.348942, 0.315152, 0.444897,\n0.000000, -0.353553, -0.353553, -0.002278, -0.707136, -0.707073, 0.777385, 0.443514, -0.446058, -0.629127, 0.550624, -0.548646, 0.221035, 0.794554,\n-0.068975, -0.353553, -0.346760, -0.140173, -0.707136, -0.693044, 0.689218, 0.432850, -0.581050, -0.710846, 0.559118, -0.426714, 0.196860, 0.765537,\n0.000000, -0.415735, -0.277785, -0.018239, -0.831353, -0.555445, 0.621602, 0.425696, -0.657566, -0.773857, 0.363506, -0.518660, 0.185712, 0.841768,\n0.000000, 0.191342, -0.461940, 0.001225, 0.382712, -0.923867, 0.912486, 0.377533, 0.157603, -0.408033, 0.843652, 0.348942, 0.315152, 0.444897,\n-0.090120, 0.191342, -0.453064, -0.179030, 0.382714, -0.906354, 0.910722, 0.412984, -0.005508, -0.372236, 0.826407, 0.422483, 0.290147, 0.418927,\n0.000000, 0.097545, -0.490392, -0.032184, 0.195004, -0.980274, 0.915184, 0.399982, 0.049521, -0.403106, 0.894943, 0.191264, 0.303277, 0.505133,\n-0.037329, -0.461940, -0.187665, -0.062326, -0.923818, -0.377723, 0.293765, 0.344714, -0.891557, -0.966939, 0.149657, -0.206475, 0.122716, 0.853506,\n0.000000, -0.461940, -0.191342, 0.012560, -0.923819, -0.382623, 0.405169, 0.354534, -0.842700, -0.919889, 0.139328, -0.366594, 0.133142, 0.876209,\n0.000000, -0.415735, -0.277785, -0.018239, -0.831353, -0.555445, 0.621602, 0.425696, -0.657566, -0.773857, 0.363506, -0.518660, 0.185712, 0.841768,\n-0.097545, 0.000000, -0.490392, -0.162803, 0.000000, -0.986659, 0.889654, 0.432396, -0.146796, -0.424493, 0.902718, 0.070043, 0.264451, 0.537476,\n0.000000, 0.000000, -0.500000, 0.032810, 0.000000, -0.999462, 0.915905, 0.400267, 0.030067, -0.400494, 0.916205, -0.013147, 0.291335, 0.565336,\n0.000000, 0.097545, -0.490392, -0.032184, 0.195004, -0.980274, 0.915184, 0.399982, 0.049521, -0.403106, 0.894943, 0.191264, 0.303277, 0.505133,\n-0.081106, 0.277785, -0.407746, -0.135383, 0.555402, -0.820488, 0.911657, 0.394132, 0.116368, -0.387847, 0.732320, 0.559716, 0.304332, 0.360378,\n-0.159095, 0.277785, -0.384089, -0.292849, 0.555401, -0.778311, 0.907581, 0.417621, -0.043475, -0.307206, 0.716186, 0.626659, 0.280665, 0.333544,\n-0.090120, 0.191342, -0.453064, -0.179030, 0.382714, -0.906354, 0.910722, 0.412984, -0.005508, -0.372236, 0.826407, 0.422483, 0.290147, 0.418927,\n-0.068975, -0.353553, -0.346760, -0.140173, -0.707136, -0.693044, 0.689218, 0.432850, -0.581050, -0.710846, 0.559118, -0.426714, 0.196860, 0.765537,\n-0.135299, -0.353553, -0.326641, -0.272686, -0.707137, -0.652380, 0.576754, 0.422583, -0.699127, -0.768468, 0.568069, -0.294542, 0.174219, 0.737534,\n-0.054193, -0.415735, -0.272447, -0.126245, -0.831354, -0.541214, 0.533240, 0.403180, -0.743707, -0.831103, 0.386509, -0.399847, 0.166387, 0.814368,\n-0.090120, 0.191342, -0.453064, -0.179030, 0.382714, -0.906354, 0.910722, 0.412984, -0.005508, -0.372236, 0.826407, 0.422483, 0.290147, 0.418927,\n-0.176777, 0.191342, -0.426777, -0.352417, 0.382711, -0.854011, 0.883472, 0.437048, -0.168719, -0.309846, 0.813373, 0.492361, 0.265072, 0.391051,\n-0.095671, 0.097545, -0.480970, -0.222807, 0.195001, -0.955160, 0.895121, 0.429028, -0.121213, -0.386845, 0.881660, 0.270234, 0.277149, 0.478121,\n-0.073223, -0.461940, -0.176777, -0.134816, -0.923819, -0.358306, 0.278951, 0.311597, -0.908347, -0.957085, 0.215029, -0.194297, 0.111219, 0.832233,\n-0.037329, -0.461940, -0.187665, -0.062326, -0.923818, -0.377723, 0.293765, 0.344714, -0.891557, -0.966939, 0.149657, -0.206475, 0.122716, 0.853506,\n-0.054193, -0.415735, -0.272447, -0.126245, -0.831354, -0.541214, 0.533240, 0.403180, -0.743707, -0.831103, 0.386509, -0.399847, 0.166387, 0.814368,\n-0.191342, 0.000000, -0.461939, -0.369614, 0.014067, -0.929079, 0.834379, 0.445033, -0.325202, -0.406693, 0.896575, 0.175370, 0.238072, 0.508437,\n-0.097545, 0.000000, -0.490392, -0.162803, 0.000000, -0.986659, 0.889654, 0.432396, -0.146796, -0.424493, 0.902718, 0.070043, 0.264451, 0.537476,\n-0.095671, 0.097545, -0.480970, -0.222807, 0.195001, -0.955160, 0.895121, 0.429028, -0.121213, -0.386845, 0.881660, 0.270234, 0.277149, 0.478121,\n-0.073223, 0.461940, -0.176777, -0.134132, 0.931233, -0.338842, 0.826294, 0.293856, 0.480508, -0.550138, 0.214426, 0.807075, 0.356819, 0.179254,\n-0.037329, 0.461940, -0.187665, -0.073153, 0.918409, -0.388811, 0.820704, 0.276940, 0.499749, -0.577847, 0.278718, 0.767079, 0.369501, 0.197772,\n-0.019030, 0.490393, -0.095671, -0.047449, 0.976740, -0.209109, 0.720722, 0.178423, 0.669869, -0.688169, 0.119771, 0.715597, 0.409185, 0.155461,\n-0.037329, -0.461940, -0.187665, -0.062326, -0.923818, -0.377723, 0.293765, 0.344714, -0.891557, -0.966939, 0.149657, -0.206475, 0.122716, 0.853506,\n-0.073223, -0.461940, -0.176777, -0.134816, -0.923819, -0.358306, 0.278951, 0.311597, -0.908347, -0.957085, 0.215029, -0.194297, 0.111219, 0.832233,\n-0.019030, -0.490393, -0.095671, -0.047449, -0.976740, -0.209109, 0.005107, 0.209105, -0.977880, -0.998869, 0.047031, 0.006975, 0.062791, 0.875124,\n-0.097545, 0.000000, -0.490392, -0.162803, 0.000000, -0.986659, 0.889654, 0.432396, -0.146796, -0.424493, 0.902718, 0.070043, 0.264451, 0.537476,\n-0.191342, 0.000000, -0.461939, -0.369614, 0.014067, -0.929079, 0.834379, 0.445033, -0.325202, -0.406693, 0.896575, 0.175370, 0.238072, 0.508437,\n-0.095671, -0.097545, -0.480970, -0.222807, -0.195001, -0.955160, 0.850108, 0.440699, -0.288273, -0.479884, 0.874796, -0.066654, 0.251234, 0.596552,\n-0.106304, 0.415735, -0.256640, -0.202041, 0.849271, -0.487769, 0.890927, 0.366210, 0.268587, -0.400183, 0.382977, 0.832576, 0.323603, 0.225532,\n-0.054193, 0.415735, -0.272448, -0.123852, 0.820324, -0.558327, 0.891297, 0.339289, 0.300788, -0.458808, 0.451562, 0.765236, 0.341615, 0.248277,\n-0.037329, 0.461940, -0.187665, -0.073153, 0.918409, -0.388811, 0.820704, 0.276940, 0.499749, -0.577847, 0.278718, 0.767079, 0.369501, 0.197772,\n-0.176777, -0.191342, -0.426777, -0.352417, -0.382711, -0.854011, 0.746183, 0.435847, -0.503238, -0.571178, 0.810838, -0.127660, 0.210574, 0.625544,\n-0.090120, -0.191342, -0.453064, -0.179030, -0.382715, -0.906354, 0.828764, 0.437784, -0.348562, -0.538512, 0.809104, -0.235279, 0.236558, 0.654833,\n-0.095671, -0.097545, -0.480970, -0.222807, -0.195001, -0.955160, 0.850108, 0.440699, -0.288273, -0.479884, 0.874796, -0.066654, 0.251234, 0.596552,\n-0.135299, 0.353553, -0.326641, -0.276827, 0.716973, -0.639779, 0.909646, 0.410108, 0.065994, -0.304417, 0.566071, 0.766090, 0.299422, 0.277880,\n-0.068975, 0.353553, -0.346760, -0.140171, 0.707135, -0.693046, 0.904749, 0.375819, 0.200471, -0.400546, 0.599626, 0.692828, 0.320886, 0.303136,\n-0.054193, 0.415735, -0.272448, -0.123852, 0.820324, -0.558327, 0.891297, 0.339289, 0.300788, -0.458808, 0.451562, 0.765236, 0.341615, 0.248277,\n-0.159095, -0.277785, -0.384089, -0.292849, -0.555401, -0.778311, 0.702292, 0.427450, -0.569274, -0.654524, 0.709832, -0.260262, 0.194249, 0.682630,\n-0.081106, -0.277785, -0.407746, -0.135384, -0.555402, -0.820488, 0.793047, 0.435663, -0.425763, -0.601789, 0.703956, -0.377222, 0.219119, 0.711578,\n-0.090120, -0.191342, -0.453064, -0.179030, -0.382715, -0.906354, 0.828764, 0.437784, -0.348562, -0.538512, 0.809104, -0.235279, 0.236558, 0.654833,\n-0.159095, 0.277785, -0.384089, -0.292849, 0.555401, -0.778311, 0.907581, 0.417621, -0.043475, -0.307206, 0.716186, 0.626659, 0.280665, 0.333544,\n-0.081106, 0.277785, -0.407746, -0.135383, 0.555402, -0.820488, 0.911657, 0.394132, 0.116368, -0.387847, 0.732320, 0.559716, 0.304332, 0.360378,\n-0.068975, 0.353553, -0.346760, -0.140171, 0.707135, -0.693046, 0.904749, 0.375819, 0.200471, -0.400546, 0.599626, 0.692828, 0.320886, 0.303136,\n-0.081106, -0.277785, -0.407746, -0.135384, -0.555402, -0.820488, 0.793047, 0.435663, -0.425763, -0.601789, 0.703956, -0.377222, 0.219119, 0.711578,\n-0.159095, -0.277785, -0.384089, -0.292849, -0.555401, -0.778311, 0.702292, 0.427450, -0.569274, -0.654524, 0.709832, -0.260262, 0.194249, 0.682630,\n-0.068975, -0.353553, -0.346760, -0.140173, -0.707136, -0.693044, 0.689218, 0.432850, -0.581050, -0.710846, 0.559118, -0.426714, 0.196860, 0.765537,\n-0.256640, -0.191342, -0.384089, -0.512253, -0.382709, -0.768850, 0.644036, 0.421066, -0.638688, -0.572971, 0.819163, -0.026007, 0.185294, 0.596918,\n-0.176777, -0.191342, -0.426777, -0.352417, -0.382711, -0.854011, 0.746183, 0.435847, -0.503238, -0.571178, 0.810838, -0.127660, 0.210574, 0.625544,\n-0.187665, -0.097545, -0.453063, -0.404872, -0.195001, -0.893338, 0.776134, 0.443237, -0.448505, -0.485196, 0.873920, 0.029134, 0.224815, 0.567268,\n-0.106304, 0.415735, -0.256640, -0.202041, 0.849271, -0.487769, 0.890927, 0.366210, 0.268587, -0.400183, 0.382977, 0.832576, 0.323603, 0.225532,\n-0.154329, 0.415735, -0.230970, -0.323634, 0.812812, -0.484353, 0.918254, 0.393264, 0.046397, -0.251390, 0.419638, 0.872185, 0.305371, 0.200714,\n-0.135299, 0.353553, -0.326641, -0.276827, 0.716973, -0.639779, 0.909646, 0.410108, 0.065994, -0.304417, 0.566071, 0.766090, 0.299422, 0.277880,\n-0.230970, -0.277785, -0.345671, -0.439067, -0.555400, -0.706223, 0.596184, 0.407948, -0.691479, -0.675894, 0.722059, -0.147644, 0.170279, 0.654825,\n-0.159095, -0.277785, -0.384089, -0.292849, -0.555401, -0.778311, 0.702292, 0.427450, -0.569274, -0.654524, 0.709832, -0.260262, 0.194249, 0.682630,\n-0.176777, -0.191342, -0.426777, -0.352417, -0.382711, -0.854011, 0.746183, 0.435847, -0.503238, -0.571178, 0.810838, -0.127660, 0.210574, 0.625544,\n-0.230970, 0.277785, -0.345671, -0.439067, 0.555400, -0.706223, 0.873457, 0.447995, -0.190718, -0.209973, 0.700842, 0.681712, 0.256377, 0.305165,\n-0.159095, 0.277785, -0.384089, -0.292849, 0.555401, -0.778311, 0.907581, 0.417621, -0.043475, -0.307206, 0.716186, 0.626659, 0.280665, 0.333544,\n-0.135299, 0.353553, -0.326641, -0.276827, 0.716973, -0.639779, 0.909646, 0.410108, 0.065994, -0.304417, 0.566071, 0.766090, 0.299422, 0.277880,\n-0.159095, -0.277785, -0.384089, -0.292849, -0.555401, -0.778311, 0.702292, 0.427450, -0.569274, -0.654524, 0.709832, -0.260262, 0.194249, 0.682630,\n-0.230970, -0.277785, -0.345671, -0.439067, -0.555400, -0.706223, 0.596184, 0.407948, -0.691479, -0.675894, 0.722059, -0.147644, 0.170279, 0.654825,\n-0.135299, -0.353553, -0.326641, -0.272686, -0.707137, -0.652380, 0.576754, 0.422583, -0.699127, -0.768468, 0.568069, -0.294542, 0.174219, 0.737534,\n-0.159095, 0.277785, -0.384089, -0.292849, 0.555401, -0.778311, 0.907581, 0.417621, -0.043475, -0.307206, 0.716186, 0.626659, 0.280665, 0.333544,\n-0.230970, 0.277785, -0.345671, -0.439067, 0.555400, -0.706223, 0.873457, 0.447995, -0.190718, -0.209973, 0.700842, 0.681712, 0.256377, 0.305165,\n-0.176777, 0.191342, -0.426777, -0.352417, 0.382711, -0.854011, 0.883472, 0.437048, -0.168719, -0.309846, 0.813373, 0.492361, 0.265072, 0.391051,\n-0.135299, -0.353553, -0.326641, -0.272686, -0.707137, -0.652380, 0.576754, 0.422583, -0.699127, -0.768468, 0.568069, -0.294542, 0.174219, 0.737534,\n-0.196424, -0.353553, -0.293969, -0.394721, -0.707137, -0.586645, 0.482177, 0.384077, -0.787394, -0.782293, 0.593524, -0.189067, 0.152459, 0.711126,\n-0.106304, -0.415735, -0.256640, -0.229404, -0.831354, -0.506186, 0.439662, 0.375467, -0.815918, -0.865682, 0.412003, -0.284340, 0.147889, 0.788507,\n-0.176777, 0.191342, -0.426777, -0.352417, 0.382711, -0.854011, 0.883472, 0.437048, -0.168719, -0.309846, 0.813373, 0.492361, 0.265072, 0.391051,\n-0.256640, 0.191342, -0.384089, -0.512253, 0.382709, -0.768850, 0.830430, 0.449048, -0.329760, -0.221181, 0.806241, 0.548685, 0.239550, 0.362041,\n-0.187665, 0.097545, -0.453063, -0.391219, 0.214340, -0.894989, 0.854975, 0.444502, -0.267274, -0.339559, 0.870264, 0.356847, 0.251210, 0.449541,\n-0.106304, -0.461940, -0.159095, -0.202130, -0.923819, -0.325118, 0.205477, 0.284579, -0.936373, -0.962027, 0.249471, -0.110763, 0.098921, 0.812641,\n-0.073223, -0.461940, -0.176777, -0.134816, -0.923819, -0.358306, 0.278951, 0.311597, -0.908347, -0.957085, 0.215029, -0.194297, 0.111219, 0.832233,\n-0.106304, -0.415735, -0.256640, -0.229404, -0.831354, -0.506186, 0.439662, 0.375467, -0.815918, -0.865682, 0.412003, -0.284340, 0.147889, 0.788507,\n-0.187665, 0.097545, -0.453063, -0.391219, 0.214340, -0.894989, 0.854975, 0.444502, -0.267274, -0.339559, 0.870264, 0.356847, 0.251210, 0.449541,\n-0.272447, 0.097545, -0.407746, -0.544372, 0.195104, -0.815839, 0.789456, 0.447951, -0.419642, -0.282887, 0.872904, 0.397508, 0.225087, 0.420258,\n-0.191342, 0.000000, -0.461939, -0.369614, 0.014067, -0.929079, 0.834379, 0.445033, -0.325202, -0.406693, 0.896575, 0.175370, 0.238072, 0.508437,\n-0.106304, 0.461940, -0.159095, -0.216376, 0.918409, -0.331219, 0.872556, 0.334106, 0.356398, -0.458757, 0.203827, 0.864868, 0.344837, 0.158918,\n-0.073223, 0.461940, -0.176777, -0.134132, 0.931233, -0.338842, 0.826294, 0.293856, 0.480508, -0.550138, 0.214426, 0.807075, 0.356819, 0.179254,\n-0.037329, 0.490393, -0.090120, -0.087334, 0.976741, -0.195833, 0.744510, 0.194610, 0.638617, -0.657136, 0.091260, 0.748227, 0.403723, 0.144215,\n-0.073223, -0.461940, -0.176777, -0.134816, -0.923819, -0.358306, 0.278951, 0.311597, -0.908347, -0.957085, 0.215029, -0.194297, 0.111219, 0.832233,\n-0.106304, -0.461940, -0.159095, -0.202130, -0.923819, -0.325118, 0.205477, 0.284579, -0.936373, -0.962027, 0.249471, -0.110763, 0.098921, 0.812641,\n-0.037329, -0.490393, -0.090120, -0.087334, -0.976741, -0.195833, -0.029583, 0.199040, -0.979545, -0.996041, 0.082342, 0.033505, 0.059830, 0.862660,\n-0.191342, 0.000000, -0.461939, -0.369614, 0.014067, -0.929079, 0.834379, 0.445033, -0.325202, -0.406693, 0.896575, 0.175370, 0.238072, 0.508437,\n-0.277785, 0.000000, -0.415734, -0.567155, -0.014068, -0.823491, 0.735303, 0.441781, -0.513965, -0.369902, 0.897691, 0.239424, 0.211808, 0.479137,\n-0.187665, -0.097545, -0.453063, -0.404872, -0.195001, -0.893338, 0.776134, 0.443237, -0.448505, -0.485196, 0.873920, 0.029134, 0.224815, 0.567268,\n-0.073223, 0.461940, -0.176777, -0.134132, 0.931233, -0.338842, 0.826294, 0.293856, 0.480508, -0.550138, 0.214426, 0.807075, 0.356819, 0.179254,\n-0.106304, 0.461940, -0.159095, -0.216376, 0.918409, -0.331219, 0.872556, 0.334106, 0.356398, -0.458757, 0.203827, 0.864868, 0.344837, 0.158918,\n-0.106304, 0.415735, -0.256640, -0.202041, 0.849271, -0.487769, 0.890927, 0.366210, 0.268587, -0.400183, 0.382977, 0.832576, 0.323603, 0.225532,\n-0.135299, -0.461940, -0.135299, -0.256643, -0.929163, -0.266065, 0.100015, 0.248275, -0.963512, -0.962627, 0.270377, -0.015682, 0.085985, 0.794966,\n-0.106304, -0.461940, -0.159095, -0.202130, -0.923819, -0.325118, 0.205477, 0.284579, -0.936373, -0.962027, 0.249471, -0.110763, 0.098921, 0.812641,\n-0.154329, -0.415735, -0.230970, -0.323751, -0.831354, -0.451704, 0.341020, 0.342794, -0.875327, -0.881708, 0.438268, -0.174676, 0.129782, 0.764530,\n-0.272447, 0.097545, -0.407746, -0.544372, 0.195104, -0.815839, 0.789456, 0.447951, -0.419642, -0.282887, 0.872904, 0.397508, 0.225087, 0.420258,\n-0.346760, 0.097545, -0.346760, -0.682044, 0.175715, -0.709887, 0.700637, 0.435191, -0.565435, -0.213770, 0.880404, 0.423309, 0.198358, 0.391169,\n-0.277785, 0.000000, -0.415734, -0.567155, -0.014068, -0.823491, 0.735303, 0.441781, -0.513965, -0.369902, 0.897691, 0.239424, 0.211808, 0.479137,\n-0.135299, 0.461940, -0.135299, -0.272685, 0.923888, -0.268466, 0.884277, 0.350616, 0.308420, -0.408884, 0.141302, 0.901581, 0.333754, 0.137005,\n-0.106304, 0.461940, -0.159095, -0.216376, 0.918409, -0.331219, 0.872556, 0.334106, 0.356398, -0.458757, 0.203827, 0.864868, 0.344837, 0.158918,\n-0.054193, 0.490393, -0.081106, -0.123861, 0.976740, -0.175033, 0.764866, 0.206349, 0.610246, -0.629681, 0.058961, 0.774613, 0.399731, 0.132109,\n-0.106304, -0.461940, -0.159095, -0.202130, -0.923819, -0.325118, 0.205477, 0.284579, -0.936373, -0.962027, 0.249471, -0.110763, 0.098921, 0.812641,\n-0.135299, -0.461940, -0.135299, -0.256643, -0.929163, -0.266065, 0.100015, 0.248275, -0.963512, -0.962627, 0.270377, -0.015682, 0.085985, 0.794966,\n-0.054193, -0.490393, -0.081106, -0.123861, -0.976741, -0.175033, -0.067419, 0.184267, -0.980561, -0.990961, 0.112595, 0.072931, 0.055167, 0.850885,\n-0.346760, -0.097545, -0.346760, -0.693076, -0.195103, -0.693960, 0.583791, 0.412832, -0.699113, -0.425191, 0.888027, 0.174986, 0.172843, 0.510158,\n-0.272447, -0.097545, -0.407746, -0.558298, -0.214342, -0.801474, 0.681722, 0.432038, -0.590422, -0.476278, 0.873807, 0.098084, 0.198820, 0.538176,\n-0.277785, 0.000000, -0.415734, -0.567155, -0.014068, -0.823491, 0.735303, 0.441781, -0.513965, -0.369902, 0.897691, 0.239424, 0.211808, 0.479137,\n-0.196424, 0.415735, -0.196424, -0.394718, 0.831489, -0.390926, 0.904146, 0.427203, -0.004267, -0.178287, 0.348073, 0.920358, 0.286589, 0.174154,\n-0.154329, 0.415735, -0.230970, -0.323634, 0.812812, -0.484353, 0.918254, 0.393264, 0.046397, -0.251390, 0.419638, 0.872185, 0.305371, 0.200714,\n-0.106304, 0.461940, -0.159095, -0.216376, 0.918409, -0.331219, 0.872556, 0.334106, 0.356398, -0.458757, 0.203827, 0.864868, 0.344837, 0.158918,\n-0.326641, -0.191342, -0.326641, -0.652404, -0.382712, -0.654142, 0.524934, 0.394366, -0.754267, -0.550111, 0.832832, 0.061393, 0.160290, 0.569759,\n-0.256640, -0.191342, -0.384089, -0.512253, -0.382709, -0.768850, 0.644036, 0.421066, -0.638688, -0.572971, 0.819163, -0.026007, 0.185294, 0.596918,\n-0.272447, -0.097545, -0.407746, -0.558298, -0.214342, -0.801474, 0.681722, 0.432038, -0.590422, -0.476278, 0.873807, 0.098084, 0.198820, 0.538176,\n-0.250000, 0.353553, -0.250000, -0.501585, 0.707137, -0.498368, 0.862463, 0.453755, -0.224195, -0.070115, 0.540952, 0.838126, 0.254155, 0.222217,\n-0.196424, 0.353553, -0.293969, -0.413158, 0.692995, -0.590812, 0.894119, 0.431785, -0.118799, -0.194508, 0.566648, 0.800672, 0.277352, 0.250728,\n-0.154329, 0.415735, -0.230970, -0.323634, 0.812812, -0.484353, 0.918254, 0.393264, 0.046397, -0.251390, 0.419638, 0.872185, 0.305371, 0.200714,\n-0.293969, -0.277785, -0.293969, -0.568407, -0.555401, -0.606996, 0.477308, 0.378320, -0.793127, -0.672364, 0.738768, -0.046353, 0.146753, 0.628844,\n-0.230970, -0.277785, -0.345671, -0.439067, -0.555400, -0.706223, 0.596184, 0.407948, -0.691479, -0.675894, 0.722059, -0.147644, 0.170279, 0.654825,\n-0.256640, -0.191342, -0.384089, -0.512253, -0.382709, -0.768850, 0.644036, 0.421066, -0.638688, -0.572971, 0.819163, -0.026007, 0.185294, 0.596918,\n-0.293969, 0.277785, -0.293969, -0.568407, 0.555401, -0.606996, 0.818212, 0.458957, -0.346249, -0.086044, 0.693592, 0.715211, 0.230950, 0.275958,\n-0.230970, 0.277785, -0.345671, -0.439067, 0.555400, -0.706223, 0.873457, 0.447995, -0.190718, -0.209973, 0.700842, 0.681712, 0.256377, 0.305165,\n-0.196424, 0.353553, -0.293969, -0.413158, 0.692995, -0.590812, 0.894119, 0.431785, -0.118799, -0.194508, 0.566648, 0.800672, 0.277352, 0.250728,\n-0.230970, -0.277785, -0.345671, -0.439067, -0.555400, -0.706223, 0.596184, 0.407948, -0.691479, -0.675894, 0.722059, -0.147644, 0.170279, 0.654825,\n-0.293969, -0.277785, -0.293969, -0.568407, -0.555401, -0.606996, 0.477308, 0.378320, -0.793127, -0.672364, 0.738768, -0.046353, 0.146753, 0.628844,\n-0.196424, -0.353553, -0.293969, -0.394721, -0.707137, -0.586645, 0.482177, 0.384077, -0.787394, -0.782293, 0.593524, -0.189067, 0.152459, 0.711126,\n-0.230970, 0.277785, -0.345671, -0.439067, 0.555400, -0.706223, 0.873457, 0.447995, -0.190718, -0.209973, 0.700842, 0.681712, 0.256377, 0.305165,\n-0.293969, 0.277785, -0.293969, -0.568407, 0.555401, -0.606996, 0.818212, 0.458957, -0.346249, -0.086044, 0.693592, 0.715211, 0.230950, 0.275958,\n-0.256640, 0.191342, -0.384089, -0.512253, 0.382709, -0.768850, 0.830430, 0.449048, -0.329760, -0.221181, 0.806241, 0.548685, 0.239550, 0.362041,\n-0.196424, -0.353553, -0.293969, -0.394721, -0.707137, -0.586645, 0.482177, 0.384077, -0.787394, -0.782293, 0.593524, -0.189067, 0.152459, 0.711126,\n-0.250000, -0.353553, -0.250000, -0.501585, -0.707137, -0.498368, 0.366360, 0.348243, -0.862848, -0.783933, 0.615157, -0.083856, 0.131139, 0.686825,\n-0.154329, -0.415735, -0.230970, -0.323751, -0.831354, -0.451704, 0.341020, 0.342794, -0.875327, -0.881708, 0.438268, -0.174676, 0.129782, 0.764530,\n-0.256640, 0.191342, -0.384089, -0.512253, 0.382709, -0.768850, 0.830430, 0.449048, -0.329760, -0.221181, 0.806241, 0.548685, 0.239550, 0.362041,\n-0.326641, 0.191342, -0.326641, -0.665784, 0.369646, -0.648147, 0.739250, 0.444604, -0.505803, -0.105249, 0.813449, 0.572034, 0.213116, 0.332732,\n-0.272447, 0.097545, -0.407746, -0.544372, 0.195104, -0.815839, 0.789456, 0.447951, -0.419642, -0.282887, 0.872904, 0.397508, 0.225087, 0.420258,\n-0.293969, -0.277785, -0.293969, -0.568407, -0.555401, -0.606996, 0.477308, 0.378320, -0.793127, -0.672364, 0.738768, -0.046353, 0.146753, 0.628844,\n-0.345671, -0.277785, -0.230970, -0.675904, -0.555401, -0.484442, 0.342223, 0.345636, -0.873739, -0.651508, 0.757561, 0.040474, 0.123337, 0.605312,\n-0.250000, -0.353553, -0.250000, -0.501585, -0.707137, -0.498368, 0.366360, 0.348243, -0.862848, -0.783933, 0.615157, -0.083856, 0.131139, 0.686825,\n-0.293969, 0.277785, -0.293969, -0.568407, 0.555401, -0.606996, 0.818212, 0.458957, -0.346249, -0.086044, 0.693592, 0.715211, 0.230950, 0.275958,\n-0.345671, 0.277785, -0.230970, -0.675904, 0.555401, -0.484442, 0.733379, 0.441885, -0.516616, 0.064220, 0.699210, 0.712026, 0.203700, 0.246751,\n-0.326641, 0.191342, -0.326641, -0.665784, 0.369646, -0.648147, 0.739250, 0.444604, -0.505803, -0.105249, 0.813449, 0.572034, 0.213116, 0.332732,\n-0.250000, -0.353553, -0.250000, -0.501585, -0.707137, -0.498368, 0.366360, 0.348243, -0.862848, -0.783933, 0.615157, -0.083856, 0.131139, 0.686825,\n-0.293969, -0.353553, -0.196424, -0.589174, -0.707137, -0.390937, 0.243911, 0.305609, -0.920386, -0.770505, 0.637379, 0.008307, 0.109967, 0.665096,\n-0.196424, -0.415735, -0.196424, -0.405652, -0.831354, -0.379865, 0.233381, 0.307611, -0.922447, -0.886823, 0.458619, -0.056686, 0.111798, 0.742764,\n-0.407746, 0.097545, -0.272447, -0.797191, 0.195002, -0.571368, 0.593819, 0.424021, -0.683802, -0.108956, 0.884390, 0.453853, 0.170581, 0.363231,\n-0.346760, 0.097545, -0.346760, -0.682044, 0.175715, -0.709887, 0.700637, 0.435191, -0.565435, -0.213770, 0.880404, 0.423309, 0.198358, 0.391169,\n-0.326641, 0.191342, -0.326641, -0.665784, 0.369646, -0.648147, 0.739250, 0.444604, -0.505803, -0.105249, 0.813449, 0.572034, 0.213116, 0.332732,\n-0.159095, -0.461940, -0.106304, -0.328037, -0.916136, -0.230404, 0.063299, 0.222035, -0.972982, -0.943929, 0.327507, 0.041678, 0.072524, 0.779430,\n-0.135299, -0.461940, -0.135299, -0.256643, -0.929163, -0.266065, 0.100015, 0.248275, -0.963512, -0.962627, 0.270377, -0.015682, 0.085985, 0.794966,\n-0.196424, -0.415735, -0.196424, -0.405652, -0.831354, -0.379865, 0.233381, 0.307611, -0.922447, -0.886823, 0.458619, -0.056686, 0.111798, 0.742764,\n-0.346760, 0.097545, -0.346760, -0.682044, 0.175715, -0.709887, 0.700637, 0.435191, -0.565435, -0.213770, 0.880404, 0.423309, 0.198358, 0.391169,\n-0.407746, 0.097545, -0.272447, -0.797191, 0.195002, -0.571368, 0.593819, 0.424021, -0.683802, -0.108956, 0.884390, 0.453853, 0.170581, 0.363231,\n-0.353553, 0.000000, -0.353553, -0.729930, 0.000000, -0.683522, 0.619322, 0.423115, -0.661372, -0.288938, 0.906260, 0.308556, 0.185261, 0.450486,\n-0.159095, 0.461940, -0.106304, -0.299778, 0.931233, -0.207216, 0.881538, 0.353432, 0.313013, -0.395877, 0.076196, 0.915137, 0.323912, 0.113774,\n-0.135299, 0.461940, -0.135299, -0.272685, 0.923888, -0.268466, 0.884277, 0.350616, 0.308420, -0.408884, 0.141302, 0.901581, 0.333754, 0.137005,\n-0.068975, 0.490393, -0.068975, -0.155628, 0.976741, -0.147506, 0.781762, 0.213065, 0.586047, -0.607565, 0.023093, 0.793934, 0.397636, 0.119453,\n-0.081106, -0.490393, -0.054193, -0.188870, -0.973859, -0.126198, -0.111340, 0.148919, -0.982561, -0.971871, 0.166960, 0.166104, 0.042176, 0.830481,\n-0.068975, -0.490393, -0.068975, -0.137937, -0.980789, -0.137937, -0.127161, 0.155652, -0.979593, -0.984645, 0.120749, 0.126070, 0.049184, 0.840082,\n-0.135299, -0.461940, -0.135299, -0.256643, -0.929163, -0.266065, 0.100015, 0.248275, -0.963512, -0.962627, 0.270377, -0.015682, 0.085985, 0.794966,\n-0.407746, -0.097545, -0.272447, -0.815145, -0.195102, -0.545412, 0.450428, 0.378534, -0.808595, -0.365600, 0.903621, 0.223170, 0.146537, 0.484073,\n-0.346760, -0.097545, -0.346760, -0.693076, -0.195103, -0.693960, 0.583791, 0.412832, -0.699113, -0.425191, 0.888027, 0.174986, 0.172843, 0.510158,\n-0.353553, 0.000000, -0.353553, -0.729930, 0.000000, -0.683522, 0.619322, 0.423115, -0.661372, -0.288938, 0.906260, 0.308556, 0.185261, 0.450486,\n-0.230970, 0.415735, -0.154329, -0.438981, 0.849271, -0.293317, 0.895086, 0.441771, -0.060488, -0.108067, 0.274177, 0.955588, 0.266710, 0.146213,\n-0.196424, 0.415735, -0.196424, -0.394718, 0.831489, -0.390926, 0.904146, 0.427203, -0.004267, -0.178287, 0.348073, 0.920358, 0.286589, 0.174154,\n-0.135299, 0.461940, -0.135299, -0.272685, 0.923888, -0.268466, 0.884277, 0.350616, 0.308420, -0.408884, 0.141302, 0.901581, 0.333754, 0.137005,\n-0.384089, -0.191342, -0.256640, -0.767487, -0.382710, -0.514293, 0.390974, 0.356338, -0.848624, -0.510347, 0.850256, 0.128881, 0.135222, 0.544826,\n-0.326641, -0.191342, -0.326641, -0.652404, -0.382712, -0.654142, 0.524934, 0.394366, -0.754267, -0.550111, 0.832832, 0.061393, 0.160290, 0.569759,\n-0.346760, -0.097545, -0.346760, -0.693076, -0.195103, -0.693960, 0.583791, 0.412832, -0.699113, -0.425191, 0.888027, 0.174986, 0.172843, 0.510158,\n-0.293969, 0.353553, -0.196424, -0.585615, 0.716973, -0.378161, 0.805466, 0.462339, -0.370765, 0.088480, 0.520278, 0.849401, 0.229053, 0.192977,\n-0.250000, 0.353553, -0.250000, -0.501585, 0.707137, -0.498368, 0.862463, 0.453755, -0.224195, -0.070115, 0.540952, 0.838126, 0.254155, 0.222217,\n-0.196424, 0.415735, -0.196424, -0.394718, 0.831489, -0.390926, 0.904146, 0.427203, -0.004267, -0.178287, 0.348073, 0.920358, 0.286589, 0.174154,\n-0.345671, -0.277785, -0.230970, -0.675904, -0.555401, -0.484442, 0.342223, 0.345636, -0.873739, -0.651508, 0.757561, 0.040474, 0.123337, 0.605312,\n-0.293969, -0.277785, -0.293969, -0.568407, -0.555401, -0.606996, 0.477308, 0.378320, -0.793127, -0.672364, 0.738768, -0.046353, 0.146753, 0.628844,\n-0.326641, -0.191342, -0.326641, -0.652404, -0.382712, -0.654142, 0.524934, 0.394366, -0.754267, -0.550111, 0.832832, 0.061393, 0.160290, 0.569759,\n-0.345671, 0.277785, -0.230970, -0.675904, 0.555401, -0.484442, 0.733379, 0.441885, -0.516616, 0.064220, 0.699210, 0.712026, 0.203700, 0.246751,\n-0.293969, 0.277785, -0.293969, -0.568407, 0.555401, -0.606996, 0.818212, 0.458957, -0.346249, -0.086044, 0.693592, 0.715211, 0.230950, 0.275958,\n-0.250000, 0.353553, -0.250000, -0.501585, 0.707137, -0.498368, 0.862463, 0.453755, -0.224195, -0.070115, 0.540952, 0.838126, 0.254155, 0.222217,\n-0.426777, -0.191342, -0.176777, -0.853073, -0.382711, -0.354682, 0.244429, 0.307448, -0.919636, -0.462279, 0.869583, 0.173560, 0.109843, 0.522841,\n-0.384089, -0.191342, -0.256640, -0.767487, -0.382710, -0.514293, 0.390974, 0.356338, -0.848624, -0.510347, 0.850256, 0.128881, 0.135222, 0.544826,\n-0.407746, -0.097545, -0.272447, -0.815145, -0.195102, -0.545412, 0.450428, 0.378534, -0.808595, -0.365600, 0.903621, 0.223170, 0.146537, 0.484073,\n-0.230970, 0.415735, -0.154329, -0.438981, 0.849271, -0.293317, 0.895086, 0.441771, -0.060488, -0.108067, 0.274177, 0.955588, 0.266710, 0.146213,\n-0.256640, 0.415735, -0.106304, -0.526547, 0.823576, -0.210884, 0.829709, 0.443764, -0.338611, 0.142178, 0.329869, 0.933259, 0.244750, 0.117306,\n-0.293969, 0.353553, -0.196424, -0.585615, 0.716973, -0.378161, 0.805466, 0.462339, -0.370765, 0.088480, 0.520278, 0.849401, 0.229053, 0.192977,\n-0.384089, -0.277785, -0.159095, -0.757427, -0.555401, -0.343269, 0.209220, 0.291565, -0.933390, -0.618888, 0.778237, 0.106417, 0.099805, 0.584808,\n-0.345671, -0.277785, -0.230970, -0.675904, -0.555401, -0.484442, 0.342223, 0.345636, -0.873739, -0.651508, 0.757561, 0.040474, 0.123337, 0.605312,\n-0.384089, -0.191342, -0.256640, -0.767487, -0.382710, -0.514293, 0.390974, 0.356338, -0.848624, -0.510347, 0.850256, 0.128881, 0.135222, 0.544826,\n-0.384089, 0.277785, -0.159095, -0.757427, 0.555401, -0.343269, 0.617410, 0.438239, -0.653262, 0.211028, 0.705770, 0.676281, 0.173746, 0.218568,\n-0.345671, 0.277785, -0.230970, -0.675904, 0.555401, -0.484442, 0.733379, 0.441885, -0.516616, 0.064220, 0.699210, 0.712026, 0.203700, 0.246751,\n-0.293969, 0.353553, -0.196424, -0.585615, 0.716973, -0.378161, 0.805466, 0.462339, -0.370765, 0.088480, 0.520278, 0.849401, 0.229053, 0.192977,\n-0.345671, -0.277785, -0.230970, -0.675904, -0.555401, -0.484442, 0.342223, 0.345636, -0.873739, -0.651508, 0.757561, 0.040474, 0.123337, 0.605312,\n-0.384089, -0.277785, -0.159095, -0.757427, -0.555401, -0.343269, 0.209220, 0.291565, -0.933390, -0.618888, 0.778237, 0.106417, 0.099805, 0.584808,\n-0.293969, -0.353553, -0.196424, -0.589174, -0.707137, -0.390937, 0.243911, 0.305609, -0.920386, -0.770505, 0.637379, 0.008307, 0.109967, 0.665096,\n-0.345671, 0.277785, -0.230970, -0.675904, 0.555401, -0.484442, 0.733379, 0.441885, -0.516616, 0.064220, 0.699210, 0.712026, 0.203700, 0.246751,\n-0.384089, 0.277785, -0.159095, -0.757427, 0.555401, -0.343269, 0.617410, 0.438239, -0.653262, 0.211028, 0.705770, 0.676281, 0.173746, 0.218568,\n-0.384089, 0.191342, -0.256640, -0.784659, 0.382534, -0.487831, 0.618375, 0.427315, -0.659556, 0.043165, 0.818719, 0.572570, 0.185222, 0.304054,\n-0.293969, -0.353553, -0.196424, -0.589174, -0.707137, -0.390937, 0.243911, 0.305609, -0.920386, -0.770505, 0.637379, 0.008307, 0.109967, 0.665096,\n-0.326641, -0.353553, -0.135299, -0.654122, -0.707136, -0.268482, 0.116320, 0.256687, -0.959469, -0.747494, 0.658614, 0.086494, 0.088752, 0.646371,\n-0.230970, -0.415735, -0.154329, -0.471967, -0.831354, -0.293425, 0.130413, 0.263329, -0.955850, -0.872466, 0.488269, 0.019939, 0.093775, 0.723522,\n-0.453063, 0.097545, -0.187665, -0.893339, 0.195000, -0.404871, 0.449384, 0.386693, -0.805309, 0.000144, 0.901072, 0.433670, 0.141332, 0.337487,\n-0.407746, 0.097545, -0.272447, -0.797191, 0.195002, -0.571368, 0.593819, 0.424021, -0.683802, -0.108956, 0.884390, 0.453853, 0.170581, 0.363231,\n-0.384089, 0.191342, -0.256640, -0.784659, 0.382534, -0.487831, 0.618375, 0.427315, -0.659556, 0.043165, 0.818719, 0.572570, 0.185222, 0.304054,\n-0.176777, -0.461940, -0.073223, -0.348692, -0.923819, -0.158028, -0.044107, 0.184598, -0.981824, -0.935394, 0.332453, 0.120471, 0.058627, 0.766238,\n-0.159095, -0.461940, -0.106304, -0.328037, -0.916136, -0.230404, 0.063299, 0.222035, -0.972982, -0.943929, 0.327507, 0.041678, 0.072524, 0.779430,\n-0.230970, -0.415735, -0.154329, -0.471967, -0.831354, -0.293425, 0.130413, 0.263329, -0.955850, -0.872466, 0.488269, 0.019939, 0.093775, 0.723522,\n-0.407746, 0.097545, -0.272447, -0.797191, 0.195002, -0.571368, 0.593819, 0.424021, -0.683802, -0.108956, 0.884390, 0.453853, 0.170581, 0.363231,\n-0.453063, 0.097545, -0.187665, -0.893339, 0.195000, -0.404871, 0.449384, 0.386693, -0.805309, 0.000144, 0.901072, 0.433670, 0.141332, 0.337487,\n-0.415734, 0.000000, -0.277785, -0.849252, 0.000000, -0.527987, 0.486058, 0.390539, -0.781810, -0.205283, 0.921321, 0.330192, 0.158051, 0.423412,\n-0.176777, 0.461940, -0.073223, -0.348692, 0.923819, -0.158028, 0.896544, 0.377920, 0.231051, -0.291820, 0.053214, 0.954992, 0.315970, 0.089506,\n-0.159095, 0.461940, -0.106304, -0.299778, 0.931233, -0.207216, 0.881538, 0.353432, 0.313013, -0.395877, 0.076196, 0.915137, 0.323912, 0.113774,\n-0.081106, 0.490393, -0.054193, -0.181415, 0.976741, -0.114308, 0.793396, 0.214049, 0.569830, -0.593424, -0.016042, 0.804730, 0.397996, 0.106635,\n-0.159095, -0.461940, -0.106304, -0.328037, -0.916136, -0.230404, 0.063299, 0.222035, -0.972982, -0.943929, 0.327507, 0.041678, 0.072524, 0.779430,\n-0.176777, -0.461940, -0.073223, -0.348692, -0.923819, -0.158028, -0.044107, 0.184598, -0.981824, -0.935394, 0.332453, 0.120471, 0.058627, 0.766238,\n-0.081106, -0.490393, -0.054193, -0.188870, -0.973859, -0.126198, -0.111340, 0.148919, -0.982561, -0.971871, 0.166960, 0.166104, 0.042176, 0.830481,\n-0.453063, -0.097545, -0.187665, -0.905885, -0.195102, -0.375909, 0.300401, 0.329673, -0.895028, -0.299521, 0.922643, 0.242934, 0.119628, 0.460773,\n-0.407746, -0.097545, -0.272447, -0.815145, -0.195102, -0.545412, 0.450428, 0.378534, -0.808595, -0.365600, 0.903621, 0.223170, 0.146537, 0.484073,\n-0.415734, 0.000000, -0.277785, -0.849252, 0.000000, -0.527987, 0.486058, 0.390539, -0.781810, -0.205283, 0.921321, 0.330192, 0.158051, 0.423412,\n-0.159095, 0.461940, -0.106304, -0.299778, 0.931233, -0.207216, 0.881538, 0.353432, 0.313013, -0.395877, 0.076196, 0.915137, 0.323912, 0.113774,\n-0.176777, 0.461940, -0.073223, -0.348692, 0.923819, -0.158028, 0.896544, 0.377920, 0.231051, -0.291820, 0.053214, 0.954992, 0.315970, 0.089506,\n-0.230970, 0.415735, -0.154329, -0.438981, 0.849271, -0.293317, 0.895086, 0.441771, -0.060488, -0.108067, 0.274177, 0.955588, 0.266710, 0.146213,\n-0.187665, -0.461940, -0.037329, -0.361210, -0.929163, -0.078640, -0.150569, 0.141344, -0.978443, -0.919609, 0.340987, 0.195057, 0.044374, 0.755575,\n-0.176777, -0.461940, -0.073223, -0.348692, -0.923819, -0.158028, -0.044107, 0.184598, -0.981824, -0.935394, 0.332453, 0.120471, 0.058627, 0.766238,\n-0.256640, -0.415735, -0.106304, -0.520142, -0.831354, -0.195709, 0.020183, 0.217118, -0.975937, -0.853963, 0.510011, 0.103126, 0.075620, 0.707098,\n-0.453063, 0.097545, -0.187665, -0.893339, 0.195000, -0.404871, 0.449384, 0.386693, -0.805309, 0.000144, 0.901072, 0.433670, 0.141332, 0.337487,\n-0.480970, 0.097545, -0.095671, -0.956311, 0.208861, -0.204566, 0.264441, 0.319607, -0.909902, 0.126073, 0.925939, 0.356009, 0.110271, 0.315079,\n-0.461939, 0.000000, -0.191341, -0.935938, 0.000000, -0.352165, 0.330780, 0.343167, -0.879102, -0.119456, 0.940712, 0.317475, 0.129853, 0.398879,\n-0.187665, 0.461940, -0.037329, -0.361210, 0.929163, -0.078640, 0.876848, 0.367143, 0.310393, -0.352518, -0.057991, 0.934007, 0.311350, 0.064544,\n-0.176777, 0.461940, -0.073223, -0.348692, 0.923819, -0.158028, 0.896544, 0.377920, 0.231051, -0.291820, 0.053214, 0.954992, 0.315970, 0.089506,\n-0.090120, 0.490393, -0.037329, -0.200230, 0.976740, -0.076720, 0.795154, 0.207754, 0.569709, -0.589942, -0.057676, 0.805383, 0.401519, 0.094149,\n-0.176777, -0.461940, -0.073223, -0.348692, -0.923819, -0.158028, -0.044107, 0.184598, -0.981824, -0.935394, 0.332453, 0.120471, 0.058627, 0.766238,\n-0.187665, -0.461940, -0.037329, -0.361210, -0.929163, -0.078640, -0.150569, 0.141344, -0.978443, -0.919609, 0.340987, 0.195057, 0.044374, 0.755575,\n-0.090120, -0.490393, -0.037329, -0.200230, -0.976741, -0.076720, -0.201743, 0.117731, -0.972337, -0.956169, 0.177734, 0.232706, 0.034376, 0.822270,\n-0.480970, -0.097545, -0.095671, -0.961814, -0.195104, -0.191958, 0.135158, 0.271299, -0.952958, -0.238214, 0.942091, 0.236049, 0.091945, 0.441097,\n-0.453063, -0.097545, -0.187665, -0.905885, -0.195102, -0.375909, 0.300401, 0.329673, -0.895028, -0.299521, 0.922643, 0.242934, 0.119628, 0.460773,\n-0.461939, 0.000000, -0.191341, -0.935938, 0.000000, -0.352165, 0.330780, 0.343167, -0.879102, -0.119456, 0.940712, 0.317475, 0.129853, 0.398879,\n-0.176777, 0.461940, -0.073223, -0.348692, 0.923819, -0.158028, 0.896544, 0.377920, 0.231051, -0.291820, 0.053214, 0.954992, 0.315970, 0.089506,\n-0.187665, 0.461940, -0.037329, -0.361210, 0.929163, -0.078640, 0.876848, 0.367143, 0.310393, -0.352518, -0.057991, 0.934007, 0.311350, 0.064544,\n-0.256640, 0.415735, -0.106304, -0.526547, 0.823576, -0.210884, 0.829709, 0.443764, -0.338611, 0.142178, 0.329869, 0.933259, 0.244750, 0.117306,\n-0.453064, -0.191342, -0.090120, -0.905874, -0.382714, -0.181443, 0.088287, 0.248358, -0.964637, -0.414650, 0.888692, 0.195685, 0.084004, 0.504490,\n-0.426777, -0.191342, -0.176777, -0.853073, -0.382711, -0.354682, 0.244429, 0.307448, -0.919636, -0.462279, 0.869583, 0.173560, 0.109843, 0.522841,\n-0.453063, -0.097545, -0.187665, -0.905885, -0.195102, -0.375909, 0.300401, 0.329673, -0.895028, -0.299521, 0.922643, 0.242934, 0.119628, 0.460773,\n-0.346760, 0.353553, -0.068975, -0.670363, 0.729954, -0.133341, 0.615738, 0.446929, -0.648938, 0.419535, 0.521063, 0.743293, 0.167754, 0.135879,\n-0.326641, 0.353553, -0.135299, -0.671767, 0.692994, -0.261703, 0.682089, 0.440871, -0.583427, 0.263530, 0.553750, 0.789881, 0.200859, 0.163815,\n-0.256640, 0.415735, -0.106304, -0.526547, 0.823576, -0.210884, 0.829709, 0.443764, -0.338611, 0.142178, 0.329869, 0.933259, 0.244750, 0.117306,\n-0.407746, -0.277785, -0.081106, -0.805228, -0.567206, -0.172874, 0.047157, 0.229362, -0.972198, -0.591182, 0.790524, 0.159922, 0.076022, 0.567870,\n-0.384089, -0.277785, -0.159095, -0.757427, -0.555401, -0.343269, 0.209220, 0.291565, -0.933390, -0.618888, 0.778237, 0.106417, 0.099805, 0.584808,\n-0.426777, -0.191342, -0.176777, -0.853073, -0.382711, -0.354682, 0.244429, 0.307448, -0.919636, -0.462279, 0.869583, 0.173560, 0.109843, 0.522841,\n-0.407746, 0.277785, -0.081106, -0.805228, 0.567206, -0.172874, 0.451509, 0.397513, -0.798826, 0.392085, 0.728018, 0.562369, 0.140040, 0.192730,\n-0.384089, 0.277785, -0.159095, -0.757427, 0.555401, -0.343269, 0.617410, 0.438239, -0.653262, 0.211028, 0.705770, 0.676281, 0.173746, 0.218568,\n-0.326641, 0.353553, -0.135299, -0.671767, 0.692994, -0.261703, 0.682089, 0.440871, -0.583427, 0.263530, 0.553750, 0.789881, 0.200859, 0.163815,\n-0.384089, -0.277785, -0.159095, -0.757427, -0.555401, -0.343269, 0.209220, 0.291565, -0.933390, -0.618888, 0.778237, 0.106417, 0.099805, 0.584808,\n-0.407746, -0.277785, -0.081106, -0.805228, -0.567206, -0.172874, 0.047157, 0.229362, -0.972198, -0.591182, 0.790524, 0.159922, 0.076022, 0.567870,\n-0.326641, -0.353553, -0.135299, -0.654122, -0.707136, -0.268482, 0.116320, 0.256687, -0.959469, -0.747494, 0.658614, 0.086494, 0.088752, 0.646371,\n-0.384089, 0.277785, -0.159095, -0.757427, 0.555401, -0.343269, 0.617410, 0.438239, -0.653262, 0.211028, 0.705770, 0.676281, 0.173746, 0.218568,\n-0.407746, 0.277785, -0.081106, -0.805228, 0.567206, -0.172874, 0.451509, 0.397513, -0.798826, 0.392085, 0.728018, 0.562369, 0.140040, 0.192730,\n-0.426777, 0.191342, -0.176777, -0.864752, 0.382536, -0.325378, 0.470541, 0.390773, -0.791131, 0.176344, 0.837945, 0.516479, 0.155266, 0.277086,\n-0.326641, -0.353553, -0.135299, -0.654122, -0.707136, -0.268482, 0.116320, 0.256687, -0.959469, -0.747494, 0.658614, 0.086494, 0.088752, 0.646371,\n-0.346760, -0.353553, -0.068975, -0.670363, -0.729954, -0.133341, -0.023254, 0.200274, -0.979464, -0.741723, 0.653981, 0.148849, 0.067389, 0.631045,\n-0.256640, -0.415735, -0.106304, -0.520142, -0.831354, -0.195709, 0.020183, 0.217118, -0.975937, -0.853963, 0.510011, 0.103126, 0.075620, 0.707098,\n-0.480970, 0.097545, -0.095671, -0.956311, 0.208861, -0.204566, 0.264441, 0.319607, -0.909902, 0.126073, 0.925939, 0.356009, 0.110271, 0.315079,\n-0.453063, 0.097545, -0.187665, -0.893339, 0.195000, -0.404871, 0.449384, 0.386693, -0.805309, 0.000144, 0.901072, 0.433670, 0.141332, 0.337487,\n-0.426777, 0.191342, -0.176777, -0.864752, 0.382536, -0.325378, 0.470541, 0.390773, -0.791131, 0.176344, 0.837945, 0.516479, 0.155266, 0.277086,\n-0.353553, -0.353553, -0.000000, -0.729900, -0.683554, -0.000002, -0.140775, 0.150322, -0.978563, -0.668029, 0.713322, 0.211917, 0.045839, 0.619459,\n-0.346760, -0.353553, -0.068975, -0.670363, -0.729954, -0.133341, -0.023254, 0.200274, -0.979464, -0.741723, 0.653981, 0.148849, 0.067389, 0.631045,\n-0.407746, -0.277785, -0.081106, -0.805228, -0.567206, -0.172874, 0.047157, 0.229362, -0.972198, -0.591182, 0.790524, 0.159922, 0.076022, 0.567870,\n-0.407746, 0.277785, -0.081106, -0.805228, 0.567206, -0.172874, 0.451509, 0.397513, -0.798826, 0.392085, 0.728018, 0.562369, 0.140040, 0.192730,\n-0.415735, 0.277785, -0.000000, -0.842097, 0.539044, -0.017448, 0.204117, 0.288593, -0.935441, 0.490531, 0.778954, 0.390654, 0.101557, 0.170954,\n-0.453064, 0.191342, -0.090120, -0.901814, 0.400775, -0.161586, 0.311384, 0.343424, -0.886059, 0.302315, 0.852331, 0.426776, 0.122669, 0.253098,\n-0.277785, -0.415735, -0.000000, -0.582526, -0.812812, -0.000003, -0.182415, 0.130737, -0.974491, -0.789993, 0.566171, 0.235289, 0.038786, 0.683738,\n-0.272447, -0.415735, -0.054193, -0.530494, -0.842235, -0.096007, -0.090736, 0.169025, -0.981426, -0.841533, 0.509627, 0.179173, 0.057290, 0.693759,\n-0.346760, -0.353553, -0.068975, -0.670363, -0.729954, -0.133341, -0.023254, 0.200274, -0.979464, -0.741723, 0.653981, 0.148849, 0.067389, 0.631045,\n-0.453064, 0.191342, -0.090120, -0.901814, 0.400775, -0.161586, 0.311384, 0.343424, -0.886059, 0.302315, 0.852331, 0.426776, 0.122669, 0.253098,\n-0.461940, 0.191342, -0.000000, -0.923866, 0.382714, -0.001228, 0.101278, 0.241387, -0.965130, 0.370193, 0.894446, 0.250848, 0.087048, 0.233548,\n-0.480970, 0.097545, -0.095671, -0.956311, 0.208861, -0.204566, 0.264441, 0.319607, -0.909902, 0.126073, 0.925939, 0.356009, 0.110271, 0.315079,\n-0.191342, -0.461940, -0.000000, -0.412766, -0.910837, -0.000002, -0.232681, 0.105446, -0.966820, -0.876357, 0.397140, 0.272541, 0.029845, 0.747594,\n-0.187665, -0.461940, -0.037329, -0.361210, -0.929163, -0.078640, -0.150569, 0.141344, -0.978443, -0.919609, 0.340987, 0.195057, 0.044374, 0.755575,\n-0.272447, -0.415735, -0.054193, -0.530494, -0.842235, -0.096007, -0.090736, 0.169025, -0.981426, -0.841533, 0.509627, 0.179173, 0.057290, 0.693759,\n-0.480970, 0.097545, -0.095671, -0.956311, 0.208861, -0.204566, 0.264441, 0.319607, -0.909902, 0.126073, 0.925939, 0.356009, 0.110271, 0.315079,\n-0.490393, 0.097545, -0.000000, -0.980782, 0.195105, -0.000626, 0.044366, 0.219896, -0.974514, 0.190567, 0.958649, 0.211369, 0.077252, 0.297212,\n-0.490392, 0.000000, -0.097545, -0.986658, 0.000000, -0.162807, 0.156253, 0.280865, -0.946942, -0.044537, 0.961857, 0.269905, 0.100444, 0.377879,\n-0.095671, 0.490393, -0.019030, -0.191324, 0.980789, -0.038055, 0.769801, 0.173994, 0.614111, -0.685547, -0.105782, 0.720302, 0.409016, 0.082641,\n-0.097545, 0.490393, -0.000000, -0.227152, 0.973859, 0.000000, 0.737153, 0.171940, 0.653485, -0.576689, -0.134512, 0.805814, 0.421200, 0.072930,\n-0.187665, 0.461940, -0.037329, -0.361210, 0.929163, -0.078640, 0.876848, 0.367143, 0.310393, -0.352518, -0.057991, 0.934007, 0.311350, 0.064544,\n-0.097545, -0.490393, -0.000000, -0.227152, -0.973859, 0.000000, -0.300081, 0.069994, -0.951342, -0.917744, 0.214063, 0.334550, 0.017133, 0.810598,\n-0.095671, -0.490393, -0.019030, -0.191324, -0.980789, -0.038055, -0.260965, 0.088206, -0.961310, -0.944893, 0.173551, 0.277593, 0.025974, 0.815602,\n-0.187665, -0.461940, -0.037329, -0.361210, -0.929163, -0.078640, -0.150569, 0.141344, -0.978443, -0.919609, 0.340987, 0.195057, 0.044374, 0.755575,\n-0.490393, -0.097545, -0.000000, -0.980782, -0.195105, -0.000626, -0.037587, 0.192093, -0.980657, -0.191292, 0.960975, 0.199836, 0.063447, 0.425835,\n-0.480970, -0.097545, -0.095671, -0.961814, -0.195104, -0.191958, 0.135158, 0.271299, -0.952958, -0.238214, 0.942091, 0.236049, 0.091945, 0.441097,\n-0.490392, 0.000000, -0.097545, -0.986658, 0.000000, -0.162807, 0.156253, 0.280865, -0.946942, -0.044537, 0.961857, 0.269905, 0.100444, 0.377879,\n-0.187665, 0.461940, -0.037329, -0.361210, 0.929163, -0.078640, 0.876848, 0.367143, 0.310393, -0.352518, -0.057991, 0.934007, 0.311350, 0.064544,\n-0.191342, 0.461940, -0.000000, -0.400759, 0.916136, -0.009327, 0.867461, 0.382703, 0.317885, -0.196013, -0.075792, 0.977668, 0.313686, 0.039415,\n-0.272447, 0.415735, -0.054193, -0.530494, 0.842235, -0.096007, 0.809223, 0.469433, -0.353257, 0.225910, 0.249629, 0.941621, 0.218761, 0.087986,\n-0.461940, -0.191342, -0.000000, -0.931059, -0.364378, -0.018930, -0.053981, 0.188871, -0.980517, -0.360713, 0.911404, 0.198061, 0.057662, 0.490395,\n-0.453064, -0.191342, -0.090120, -0.905874, -0.382714, -0.181443, 0.088287, 0.248358, -0.964637, -0.414650, 0.888692, 0.195685, 0.084004, 0.504490,\n-0.480970, -0.097545, -0.095671, -0.961814, -0.195104, -0.191958, 0.135158, 0.271299, -0.952958, -0.238214, 0.942091, 0.236049, 0.091945, 0.441097,\n-0.272447, 0.415735, -0.054193, -0.530494, 0.842235, -0.096007, 0.809223, 0.469433, -0.353257, 0.225910, 0.249629, 0.941621, 0.218761, 0.087986,\n-0.277785, 0.415735, -0.000000, -0.555535, 0.831489, -0.002683, 0.668118, 0.444458, -0.596720, 0.514926, 0.346562, 0.784057, 0.184327, 0.059204,\n-0.346760, 0.353553, -0.068975, -0.670363, 0.729954, -0.133341, 0.615738, 0.446929, -0.648938, 0.419535, 0.521063, 0.743293, 0.167754, 0.135879,\n-0.415735, -0.277785, -0.000000, -0.849229, -0.528024, -0.000003, -0.103524, 0.166506, -0.980591, -0.517614, 0.832485, 0.197593, 0.051941, 0.554970,\n-0.407746, -0.277785, -0.081106, -0.805228, -0.567206, -0.172874, 0.047157, 0.229362, -0.972198, -0.591182, 0.790524, 0.159922, 0.076022, 0.567870,\n-0.453064, -0.191342, -0.090120, -0.905874, -0.382714, -0.181443, 0.088287, 0.248358, -0.964637, -0.414650, 0.888692, 0.195685, 0.084004, 0.504490,\n-0.346760, 0.353553, -0.068975, -0.670363, 0.729954, -0.133341, 0.615738, 0.446929, -0.648938, 0.419535, 0.521063, 0.743293, 0.167754, 0.135879,\n-0.353553, 0.353553, -0.000000, -0.716925, 0.697092, 0.008971, 0.305508, 0.325714, -0.894749, 0.613601, 0.624846, 0.482763, 0.127116, 0.110949,\n-0.407746, 0.277785, -0.081106, -0.805228, 0.567206, -0.172874, 0.451509, 0.397513, -0.798826, 0.392085, 0.728018, 0.562369, 0.140040, 0.192730\n]\n}\n]\n}");
});
// Native classes

init.functionAliases = {};
;
init.metadata = [{func: "void_", void: true},
{func: "void__dynamic", void: true, args: [null]},
{func: "void__dynamic__StackTrace", void: true, args: [null], opt: [P.StackTrace]},
,
{func: "bool__dynamic_dynamic", ret: J.JSBool, args: [null, null]},
{func: "int__dynamic", ret: J.JSInt, args: [null]},
{func: "bool__Object_Object", ret: J.JSBool, args: [P.Object, P.Object]},
{func: "int__Object", ret: J.JSInt, args: [P.Object]},
{func: "String__EventTarget", ret: J.JSString, args: [W.EventTarget]},
{func: "args0"},
{func: "args2", args: [null, null]},
{func: "args1", args: [null]},
{func: "dynamic__dynamic_String", args: [null, J.JSString]},
{func: "dynamic__String", args: [J.JSString]},
{func: "dynamic__Object", args: [P.Object]},
{func: "dynamic__dynamic__dynamic", args: [null], opt: [null]},
{func: "dynamic__dynamic_StackTrace", args: [null, P.StackTrace]},
{func: "dynamic__Symbol_dynamic", args: [P.Symbol, null]},
{func: "String__int", ret: J.JSString, args: [J.JSInt]},
{func: "void__Event", void: true, args: [W.Event]},
{func: "void__KeyboardEvent", void: true, args: [W.KeyboardEvent]},
{func: "void__MouseEvent", void: true, args: [W.MouseEvent]},
{func: "void__double", void: true, args: [J.JSDouble]},
];
$ = null;
Isolate = Isolate.$finishIsolateConstructor(Isolate);
$ = new Isolate();
function convertToFastObject(properties) {
  function MyClass() {};
  MyClass.prototype = properties;
  new MyClass();
  return properties;
}
A = convertToFastObject(A);
B = convertToFastObject(B);
C = convertToFastObject(C);
D = convertToFastObject(D);
E = convertToFastObject(E);
F = convertToFastObject(F);
G = convertToFastObject(G);
H = convertToFastObject(H);
J = convertToFastObject(J);
K = convertToFastObject(K);
L = convertToFastObject(L);
M = convertToFastObject(M);
N = convertToFastObject(N);
O = convertToFastObject(O);
P = convertToFastObject(P);
Q = convertToFastObject(Q);
R = convertToFastObject(R);
S = convertToFastObject(S);
T = convertToFastObject(T);
U = convertToFastObject(U);
V = convertToFastObject(V);
W = convertToFastObject(W);
X = convertToFastObject(X);
Y = convertToFastObject(Y);
Z = convertToFastObject(Z);
!function() {
  var objectProto = Object.prototype;
  for (var i = 0;; i++) {
    var property = "___dart_dispatch_record_ZxYxX_0_";
    if (i > 0)
      property = rootProperty + "_" + i;
    if (!(property in objectProto))
      return init.dispatchPropertyName = property;
  }
}();
// BEGIN invoke [main].
;(function (callback) {
  if (typeof document === "undefined") {
    callback(null);
    return;
  }
  if (document.currentScript) {
    callback(document.currentScript);
    return;
  }

  var scripts = document.scripts;
  function onLoad(event) {
    for (var i = 0; i < scripts.length; ++i) {
      scripts[i].removeEventListener("load", onLoad, false);
    }
    callback(event.target);
  }
  for (var i = 0; i < scripts.length; ++i) {
    scripts[i].addEventListener("load", onLoad, false);
  }
})(function(currentScript) {
  init.currentScript = currentScript;

  if (typeof dartMainRunner === "function") {
    dartMainRunner(function() { H.startRootIsolate(G.main$closure()); });
  } else {
    H.startRootIsolate(G.main$closure());
  }
});
// END invoke [main].
function init() {
  Isolate.$isolateProperties = {};
  function generateAccessor(fieldDescriptor, accessors, cls) {
    var fieldInformation = fieldDescriptor.split("-");
    var field = fieldInformation[0];
    var len = field.length;
    var code = field.charCodeAt(len - 1);
    var reflectable;
    if (fieldInformation.length > 1)
      reflectable = true;
    else
      reflectable = false;
    code = code >= 60 && code <= 64 ? code - 59 : code >= 123 && code <= 126 ? code - 117 : code >= 37 && code <= 43 ? code - 27 : 0;
    if (code) {
      var getterCode = code & 3;
      var setterCode = code >> 2;
      var accessorName = field = field.substring(0, len - 1);
      var divider = field.indexOf(":");
      if (divider > 0) {
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (getterCode) {
        var args = getterCode & 2 ? "receiver" : "";
        var receiver = getterCode & 1 ? "this" : "receiver";
        var body = "return " + receiver + "." + field;
        var property = cls + ".prototype.get$" + accessorName + "=";
        var fn = "function(" + args + "){" + body + "}";
        if (reflectable)
          accessors.push(property + "$reflectable(" + fn + ");\n");
        else
          accessors.push(property + fn + ";\n");
      }
      if (setterCode) {
        var args = setterCode & 2 ? "receiver, value" : "value";
        var receiver = setterCode & 1 ? "this" : "receiver";
        var body = receiver + "." + field + " = value";
        var property = cls + ".prototype.set$" + accessorName + "=";
        var fn = "function(" + args + "){" + body + "}";
        if (reflectable)
          accessors.push(property + "$reflectable(" + fn + ");\n");
        else
          accessors.push(property + fn + ";\n");
      }
    }
    return field;
  }
  Isolate.$isolateProperties.$generateAccessor = generateAccessor;
  function defineClass(name, cls, fields) {
    var accessors = [];
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0)
        str += ", ";
      var field = generateAccessor(fields[i], accessors, cls);
      var parameter = "parameter_" + field;
      str += parameter;
      body += "this." + field + " = " + parameter + ";\n";
    }
    str += ") {\n" + body + "}\n";
    str += cls + ".builtin$cls=\"" + name + "\";\n";
    str += "$desc=$collectedClasses." + cls + ";\n";
    str += "if($desc instanceof Array) $desc = $desc[1];\n";
    str += cls + ".prototype = $desc;\n";
    if (typeof defineClass.name != "string") {
      str += cls + ".name=\"" + cls + "\";\n";
    }
    str += accessors.join("");
    return str;
  }
  var inheritFrom = function() {
    function tmp() {
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    return function(constructor, superConstructor) {
      tmp.prototype = superConstructor.prototype;
      var object = new tmp();
      var properties = constructor.prototype;
      for (var member in properties)
        if (hasOwnProperty.call(properties, member))
          object[member] = properties[member];
      object.constructor = constructor;
      constructor.prototype = object;
      return object;
    };
  }();
  Isolate.$finishClasses = function(collectedClasses, isolateProperties, existingIsolateProperties) {
    var pendingClasses = {};
    if (!init.allClasses)
      init.allClasses = {};
    var allClasses = init.allClasses;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (typeof dart_precompiled == "function") {
      var constructors = dart_precompiled(collectedClasses);
    } else {
      var combinedConstructorFunction = "function $reflectable(fn){fn.$reflectable=1;return fn};\n" + "var $desc;\n";
      var constructorsList = [];
    }
    for (var cls in collectedClasses) {
      if (hasOwnProperty.call(collectedClasses, cls)) {
        var desc = collectedClasses[cls];
        if (desc instanceof Array)
          desc = desc[1];
        var classData = desc[""], supr, name = cls, fields = classData;
        if (typeof classData == "string") {
          var split = classData.split("/");
          if (split.length == 2) {
            name = split[0];
            fields = split[1];
          }
        }
        var s = fields.split(";");
        fields = s[1] == "" ? [] : s[1].split(",");
        supr = s[0];
        split = supr.split(":");
        if (split.length == 2) {
          supr = split[0];
          var functionSignature = split[1];
          if (functionSignature)
            desc.$signature = function(s) {
              return function() {
                return init.metadata[s];
              };
            }(functionSignature);
        }
        if (supr && supr.indexOf("+") > 0) {
          s = supr.split("+");
          supr = s[0];
          var mixin = collectedClasses[s[1]];
          if (mixin instanceof Array)
            mixin = mixin[1];
          for (var d in mixin) {
            if (hasOwnProperty.call(mixin, d) && !hasOwnProperty.call(desc, d))
              desc[d] = mixin[d];
          }
        }
        if (typeof dart_precompiled != "function") {
          combinedConstructorFunction += defineClass(name, cls, fields);
          constructorsList.push(cls);
        }
        if (supr)
          pendingClasses[cls] = supr;
      }
    }
    if (typeof dart_precompiled != "function") {
      combinedConstructorFunction += "return [\n  " + constructorsList.join(",\n  ") + "\n]";
      var constructors = new Function("$collectedClasses", combinedConstructorFunction)(collectedClasses);
      combinedConstructorFunction = null;
    }
    for (var i = 0; i < constructors.length; i++) {
      var constructor = constructors[i];
      var cls = constructor.name;
      var desc = collectedClasses[cls];
      var globalObject = isolateProperties;
      if (desc instanceof Array) {
        globalObject = desc[0] || isolateProperties;
        desc = desc[1];
      }
      allClasses[cls] = constructor;
      globalObject[cls] = constructor;
    }
    constructors = null;
    var finishedClasses = {};
    init.interceptorsByTag = Object.create(null);
    init.leafTags = {};
    function finishClass(cls) {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      if (hasOwnProperty.call(finishedClasses, cls))
        return;
      finishedClasses[cls] = true;
      var superclass = pendingClasses[cls];
      if (!superclass || typeof superclass != "string")
        return;
      finishClass(superclass);
      var constructor = allClasses[cls];
      var superConstructor = allClasses[superclass];
      if (!superConstructor)
        superConstructor = existingIsolateProperties[superclass];
      var prototype = inheritFrom(constructor, superConstructor);
      if (hasOwnProperty.call(prototype, "%")) {
        var nativeSpec = prototype["%"].split(";");
        if (nativeSpec[0]) {
          var tags = nativeSpec[0].split("|");
          for (var i = 0; i < tags.length; i++) {
            init.interceptorsByTag[tags[i]] = constructor;
            init.leafTags[tags[i]] = true;
          }
        }
        if (nativeSpec[1]) {
          tags = nativeSpec[1].split("|");
          if (nativeSpec[2]) {
            var subclasses = nativeSpec[2].split("|");
            for (var i = 0; i < subclasses.length; i++) {
              var subclass = allClasses[subclasses[i]];
              subclass.$nativeSuperclassTag = tags[0];
            }
          }
          for (i = 0; i < tags.length; i++) {
            init.interceptorsByTag[tags[i]] = constructor;
            init.leafTags[tags[i]] = false;
          }
        }
      }
    }
    for (var cls in pendingClasses)
      finishClass(cls);
  };
  Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
    var sentinelUndefined = {};
    var sentinelInProgress = {};
    prototype[fieldName] = sentinelUndefined;
    prototype[getterName] = function() {
      var result = $[fieldName];
      try {
        if (result === sentinelUndefined) {
          $[fieldName] = sentinelInProgress;
          try {
            result = $[fieldName] = lazyValue();
          } finally {
            if (result === sentinelUndefined) {
              if ($[fieldName] === sentinelInProgress) {
                $[fieldName] = null;
              }
            }
          }
        } else {
          if (result === sentinelInProgress)
            H.throwCyclicInit(staticName);
        }
        return result;
      } finally {
        $[getterName] = function() {
          return this[fieldName];
        };
      }
    };
  };
  Isolate.$finishIsolateConstructor = function(oldIsolate) {
    var isolateProperties = oldIsolate.$isolateProperties;
    function Isolate() {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      for (var staticName in isolateProperties)
        if (hasOwnProperty.call(isolateProperties, staticName))
          this[staticName] = isolateProperties[staticName];
      function ForceEfficientMap() {
      }
      ForceEfficientMap.prototype = this;
      new ForceEfficientMap();
    }
    Isolate.prototype = oldIsolate.prototype;
    Isolate.prototype.constructor = Isolate;
    Isolate.$isolateProperties = isolateProperties;
    Isolate.$finishClasses = oldIsolate.$finishClasses;
    Isolate.makeConstantList = oldIsolate.makeConstantList;
    return Isolate;
  };
}
})()

//# sourceMappingURL=solar.dart.js.map
//@ sourceMappingURL=solar.dart.js.map
